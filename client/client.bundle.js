/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/client.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/HideModelerElements.js":
/*!***************************************!*\
  !*** ./client/HideModelerElements.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domClasses = __webpack_require__(/*! min-dom */ \"./node_modules/min-dom/dist/index.esm.js\").classes,\n    domQuery = __webpack_require__(/*! min-dom */ \"./node_modules/min-dom/dist/index.esm.js\").query;\n\nvar TOGGLE_MODE_EVENT = __webpack_require__(/*! bpmn-js-token-simulation/lib/util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\").TOGGLE_MODE_EVENT;\n\nfunction HideModelerElements(eventBus) {\n  var css = '.properties.hidden { display: none; } .tabs .tab.hidden { display: none; }',\n      head = document.head,\n      style = document.createElement('style');\n\n  style.type = 'text/css';\n\n  style.appendChild(document.createTextNode(css));\n\n  head.appendChild(style);\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    var propertiesPanel = domQuery('.properties');\n    var xmlTab = domQuery('.tabs a.tab:not(.active)');\n\n    if (simulationModeActive) {\n      domClasses(propertiesPanel).add('hidden');\n      domClasses(xmlTab).add('hidden');\n    } else {\n      domClasses(propertiesPanel).remove('hidden');\n      domClasses(xmlTab).remove('hidden');\n    }\n  });\n}\n\nHideModelerElements.$inject = ['eventBus'];\n\nmodule.exports = HideModelerElements;\n\n//# sourceURL=webpack:///./client/HideModelerElements.js?");

/***/ }),

/***/ "./client/client.js":
/*!**************************!*\
  !*** ./client/client.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var registerBpmnJSPlugin = __webpack_require__(/*! camunda-modeler-plugin-helpers */ \"./node_modules/camunda-modeler-plugin-helpers/index.js\").registerBpmnJSPlugin;\n\nvar tokenSimulation = __webpack_require__(/*! bpmn-js-token-simulation */ \"./node_modules/bpmn-js-token-simulation/index.js\"),\n    HideModelerElements = __webpack_require__(/*! ./HideModelerElements */ \"./client/HideModelerElements.js\");\n\ntokenSimulation.__init__.push('hideModelerElements');\ntokenSimulation.hideModelerElements = ['type', HideModelerElements];\n\nregisterBpmnJSPlugin(tokenSimulation);\n\n//# sourceURL=webpack:///./client/client.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/index.js":
/*!********************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/modeler */ \"./node_modules/bpmn-js-token-simulation/lib/modeler.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/animation/Animation.js":
/*!**************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/animation/Animation.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar SVG = __webpack_require__(/*! svg.js */ \"./node_modules/svg.js/dist/svg.js\");\n\nvar domQuery = __webpack_require__(/*! min-dom/lib/query */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js\");\n\nvar events = __webpack_require__(/*! ../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    PLAY_SIMULATION_EVENT = events.PLAY_SIMULATION_EVENT,\n    PAUSE_SIMULATION_EVENT = events.PAUSE_SIMULATION_EVENT,\n    TERMINATE_EVENT = events.TERMINATE_EVENT,\n    PROCESS_INSTANCE_FINISHED_EVENT = events.PROCESS_INSTANCE_FINISHED_EVENT,\n    ANIMATION_CREATED_EVENT = events.ANIMATION_CREATED_EVENT;\n\nvar isAncestor = __webpack_require__(/*! ../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").isAncestor;\n\nvar geometryUtil = __webpack_require__(/*! ../util/GeometryUtil */ \"./node_modules/bpmn-js-token-simulation/lib/util/GeometryUtil.js\"),\n    distance = geometryUtil.distance;\n\nfunction isFirstSegment(index) {\n  return index === 1;\n}\n\nfunction isSingleSegment(waypoints) {\n  return waypoints.length == 2;\n}\n\nvar DELAY = 0;\n\nvar EASE_LINEAR = '-',\n    EASE_IN = '<',\n    EASE_IN_OUT = '<>';\n\nvar TOKEN_SIZE = 20;\n\nfunction Animation(canvas, eventBus) {\n  var self = window.animation = this;\n\n  this._eventBus = eventBus;\n  this.animations = [];\n  this.hiddenAnimations = [];\n\n  this.animationSpeed = 1;\n\n  eventBus.on('import.done', function () {\n    var draw = SVG(canvas._svg);\n\n    var viewport = domQuery('.viewport', canvas._svg);\n\n    var groupParent = SVG.adopt(viewport);\n\n    self.group = draw.group().attr('id', 'token-simulation');\n\n    groupParent.put(self.group);\n  });\n\n  eventBus.on(TERMINATE_EVENT, function (context) {\n    var element = context.element,\n        parent = element.parent;\n\n    self.animations.forEach(function (animation) {\n      if (isAncestor(parent, animation.element)) {\n\n        // remove token\n        animation.animation.stop();\n\n        self.animations = self.animations.filter(function (a) {\n          return a !== animation;\n        });\n      }\n    });\n  });\n\n  eventBus.on(PROCESS_INSTANCE_FINISHED_EVENT, function (context) {\n    var parent = context.parent;\n\n    self.animations.forEach(function (animation) {\n      if (context.processInstanceId === animation.processInstanceId || isAncestor(parent, animation.element)) {\n\n        // remove token\n        animation.animation.stop();\n\n        self.animations = self.animations.filter(function (a) {\n          return a !== animation;\n        });\n      }\n    });\n  });\n\n  eventBus.on(RESET_SIMULATION_EVENT, function () {\n    self.animations.forEach(function (animation) {\n      animation.animation.stop();\n    });\n\n    self.animations = [];\n    self.hiddenAnimations = [];\n  });\n\n  eventBus.on(PAUSE_SIMULATION_EVENT, function () {\n    self.animations.forEach(function (animation) {\n      animation.animation.pause();\n    });\n  });\n\n  eventBus.on(PLAY_SIMULATION_EVENT, function () {\n    self.animations.forEach(function (animation) {\n      animation.animation.play();\n    });\n  });\n}\n\nAnimation.prototype.createAnimation = function (connection, processInstanceId, done) {\n  var self = this;\n\n  if (!this.group) {\n    return;\n  }\n\n  var tokenGfx = this._createTokenGfx(processInstanceId);\n\n  var animation;\n\n  animation = new _Animation(tokenGfx, connection.waypoints, function () {\n    self.animations = self.animations.filter(function (a) {\n      return a.animation !== animation;\n    });\n\n    if (done) {\n      done();\n    }\n  });\n\n  if (this.hiddenAnimations.includes(processInstanceId)) {\n    tokenGfx.hide();\n  }\n\n  tokenGfx.fx._speed = this.animationSpeed;\n\n  this.animations.push({\n    tokenGfx: tokenGfx,\n    animation: animation,\n    element: connection,\n    processInstanceId: processInstanceId\n  });\n\n  this._eventBus.fire(ANIMATION_CREATED_EVENT, {\n    tokenGfx: tokenGfx,\n    animation: animation,\n    element: connection,\n    processInstanceId: processInstanceId\n  });\n\n  return animation;\n};\n\nAnimation.prototype.setAnimationSpeed = function (speed) {\n  this.animations.forEach(function (animation) {\n    animation.tokenGfx.fx._speed = speed;\n  });\n\n  this.animationSpeed = speed;\n};\n\nAnimation.prototype._createTokenGfx = function (processInstanceId) {\n  var parent = this.group.group().attr('class', 'token').hide();\n\n  parent.circle(TOKEN_SIZE, TOKEN_SIZE).attr('fill', '#52b415').attr('class', 'circle');\n\n  parent.text(processInstanceId.toString()).attr('transform', 'translate(10, -7)').attr('text-anchor', 'middle').attr('class', 'text');\n\n  return parent;\n};\n\nAnimation.prototype.showProcessInstanceAnimations = function (processInstanceId) {\n  this.animations.forEach(function (animation) {\n    if (animation.processInstanceId === processInstanceId) {\n      animation.tokenGfx.show();\n    }\n  });\n\n  this.hiddenAnimations = this.hiddenAnimations.filter(function (id) {\n    return id !== processInstanceId;\n  });\n};\n\nAnimation.prototype.hideProcessInstanceAnimations = function (processInstanceId) {\n  this.animations.forEach(function (animation) {\n    if (animation.processInstanceId === processInstanceId) {\n      animation.tokenGfx.hide();\n    }\n  });\n\n  this.hiddenAnimations.push(processInstanceId);\n};\n\nAnimation.$inject = ['canvas', 'eventBus'];\n\nmodule.exports = Animation;\n\nfunction _Animation(gfx, waypoints, done) {\n  this.gfx = this.fx = gfx;\n  this.waypoints = waypoints;\n  this.done = done;\n\n  this.create();\n}\n\n_Animation.prototype.create = function () {\n  var gfx = this.gfx,\n      waypoints = this.waypoints,\n      done = this.done,\n      fx = this.fx;\n\n  gfx.show().move(waypoints[0].x - TOKEN_SIZE / 2, waypoints[0].y - TOKEN_SIZE / 2);\n\n  waypoints.forEach(function (waypoint, index) {\n    if (index > 0) {\n      var x = waypoint.x - TOKEN_SIZE / 2,\n          y = waypoint.y - TOKEN_SIZE / 2;\n\n      var ease = isFirstSegment(index) ? EASE_IN : EASE_LINEAR;\n\n      if (isSingleSegment(waypoints)) {\n        ease = EASE_IN_OUT;\n      }\n\n      var duration = distance(waypoints[index - 1], waypoint) * 20;\n\n      fx = fx.animate(duration, ease, DELAY).move(x, y);\n    }\n  });\n\n  fx.after(function () {\n    gfx.remove();\n\n    done();\n  });\n};\n\n_Animation.prototype.play = function () {\n  this.gfx.play();\n};\n\n_Animation.prototype.pause = function () {\n  this.gfx.pause();\n};\n\n_Animation.prototype.stop = function () {\n  this.fx.stop();\n  this.gfx.remove();\n};\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/animation/Animation.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/ContextPads.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/ContextPads.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elementHelper = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    isAncestor = elementHelper.isAncestor;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    TERMINATE_EVENT = events.TERMINATE_EVENT,\n    UPDATE_ELEMENTS_EVENT = events.UPDATE_ELEMENTS_EVENT,\n    UPDATE_ELEMENT_EVENT = events.UPDATE_ELEMENT_EVENT,\n    PROCESS_INSTANCE_SHOWN_EVENT = events.PROCESS_INSTANCE_SHOWN_EVENT;\n\nvar BoundaryEventHandler = __webpack_require__(/*! ./handler/BoundaryEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/BoundaryEventHandler.js\"),\n    ExclusiveGatewayHandler = __webpack_require__(/*! ./handler/ExclusiveGatewayHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ExclusiveGatewayHandler.js\"),\n    IntermediateCatchEventHandler = __webpack_require__(/*! ./handler/IntermediateCatchEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/IntermediateCatchEventHandler.js\"),\n    ProcessHandler = __webpack_require__(/*! ./handler/ProcessHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ProcessHandler.js\"),\n    StartEventHandler = __webpack_require__(/*! ./handler/StartEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/StartEventHandler.js\");\n\nvar LOW_PRIORITY = 500;\n\nvar OFFSET_TOP = -15,\n    OFFSET_LEFT = -15;\n\nfunction ContextPads(eventBus, elementRegistry, overlays, injector, canvas, processInstances) {\n  var self = this;\n\n  this._elementRegistry = elementRegistry;\n  this._overlays = overlays;\n  this._injector = injector;\n  this._canvas = canvas;\n  this._processInstances = processInstances;\n\n  this.overlayIds = {};\n\n  this.handlers = {};\n\n  this.registerHandler('bpmn:ExclusiveGateway', ExclusiveGatewayHandler);\n  this.registerHandler('bpmn:IntermediateCatchEvent', IntermediateCatchEventHandler);\n  this.registerHandler('bpmn:SubProcess', ProcessHandler);\n  this.registerHandler('bpmn:SubProcess', BoundaryEventHandler);\n  this.registerHandler('bpmn:StartEvent', StartEventHandler);\n\n  eventBus.on(TOGGLE_MODE_EVENT, LOW_PRIORITY, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (simulationModeActive) {\n      self.openContextPads();\n    } else {\n      self.closeContextPads();\n    }\n  });\n\n  eventBus.on(RESET_SIMULATION_EVENT, LOW_PRIORITY, function () {\n    self.closeContextPads();\n    self.openContextPads();\n  });\n\n  eventBus.on(TERMINATE_EVENT, LOW_PRIORITY, function (context) {\n    var element = context.element,\n        parent = element.parent;\n\n    self.closeContextPads(parent);\n  });\n\n  eventBus.on(UPDATE_ELEMENTS_EVENT, LOW_PRIORITY, function (context) {\n    var elements = context.elements;\n\n    elements.forEach(function (element) {\n      self.closeElementContextPads(element);\n      self.openElementContextPads(element);\n    });\n  });\n\n  eventBus.on(UPDATE_ELEMENT_EVENT, LOW_PRIORITY, function (context) {\n    var element = context.element;\n\n    self.closeElementContextPads(element);\n    self.openElementContextPads(element);\n  });\n\n  eventBus.on(PROCESS_INSTANCE_SHOWN_EVENT, function (context) {\n    var processInstanceId = context.processInstanceId;\n\n    var processInstance = processInstances.getProcessInstance(processInstanceId),\n        parent = processInstance.parent;\n\n    self.closeContextPads(parent);\n    self.openContextPads(parent);\n  });\n}\n\n/**\r\n * Register a handler for an element type.\r\n * An element type can have multiple handlers.\r\n *\r\n * @param {String} type\r\n * @param {Object} handlerCls\r\n */\nContextPads.prototype.registerHandler = function (type, handlerCls) {\n  var handler = this._injector.instantiate(handlerCls);\n\n  if (!this.handlers[type]) {\n    this.handlers[type] = [];\n  }\n\n  this.handlers[type].push(handler);\n};\n\nContextPads.prototype.openContextPads = function (parent) {\n  var self = this;\n\n  if (!parent) {\n    parent = this._canvas.getRootElement();\n  }\n\n  this._elementRegistry.forEach(function (element) {\n    if (self.handlers[element.type] && isAncestor(parent, element)) {\n      self.openElementContextPads(element);\n    }\n  });\n};\n\nContextPads.prototype.openElementContextPads = function (element) {\n  if (!this.handlers[element.type]) {\n    return;\n  }\n\n  var elementContextPads = [];\n\n  this.handlers[element.type].forEach(function (handler) {\n    var contextPads = handler.createContextPads(element);\n\n    if (contextPads) {\n      contextPads.forEach(function (contextPad) {\n        if (contextPad) {\n          elementContextPads.push(contextPad);\n        }\n      });\n    }\n  });\n\n  var self = this;\n\n  elementContextPads.forEach(function (contextPad) {\n    var position = { top: OFFSET_TOP, left: OFFSET_LEFT };\n\n    var overlayId = self._overlays.add(contextPad.element, 'context-menu', {\n      position: position,\n      html: contextPad.html,\n      show: {\n        minZoom: 0.5\n      }\n    });\n\n    self.overlayIds[contextPad.element.id] = overlayId;\n  });\n};\n\nContextPads.prototype.closeContextPads = function (parent) {\n  var self = this;\n\n  if (!parent) {\n    parent = this._canvas.getRootElement();\n  }\n\n  this._elementRegistry.forEach(function (element) {\n    if (isAncestor(parent, element)) {\n      self.closeElementContextPads(element);\n    }\n  });\n};\n\nContextPads.prototype.closeElementContextPads = function (element) {\n  var self = this;\n\n  if (element.attachers && element.attachers.length > 0) {\n    element.attachers.forEach(function (attachedElement) {\n      self.closeElementContextPads(attachedElement);\n    });\n  }\n  if (element.children && element.children.length > 0) {\n    element.children.forEach(function (child) {\n      self.closeElementContextPads(child);\n    });\n  }\n\n  var overlayId = this.overlayIds[element.id];\n\n  if (!overlayId) {\n    return;\n  }\n\n  this._overlays.remove(overlayId);\n\n  delete this.overlayIds[element.id];\n};\n\nContextPads.$inject = ['eventBus', 'elementRegistry', 'overlays', 'injector', 'canvas', 'processInstances'];\n\nmodule.exports = ContextPads;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/ContextPads.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/BoundaryEventHandler.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/BoundaryEventHandler.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    UPDATE_ELEMENT_EVENT = events.UPDATE_ELEMENT_EVENT;\n\nfunction BoundaryEventHandler(eventBus, processInstances, processInstanceSettings) {\n  this._eventBus = eventBus;\n  this._processInstances = processInstances;\n  this._processInstanceSettings = processInstanceSettings;\n}\n\nBoundaryEventHandler.prototype.createContextPads = function (element) {\n  if (!element.attachers.length) {\n    return;\n  }\n\n  if (!this._processInstances.getProcessInstances(element).length) {\n    return;\n  }\n\n  var incomingSequenceFlows = element.incoming.filter(function (incoming) {\n    return is(incoming, 'bpmn:SequenceFlow');\n  });\n\n  var self = this;\n\n  var contextPads = [];\n\n  element.attachers.forEach(function (attachedElement) {\n    var outgoingSequenceFlows = attachedElement.outgoing.filter(function (outgoing) {\n      return is(outgoing, 'bpmn:SequenceFlow');\n    });\n\n    if (!incomingSequenceFlows.length || !outgoingSequenceFlows.length) {\n      return;\n    }\n\n    var contextPad = domify('<div class=\"context-pad\" title=\"Trigger Event\"><i class=\"fa fa-play\"></i></div>');\n\n    contextPads.push({\n      element: attachedElement,\n      html: contextPad\n    });\n\n    domEvent.bind(contextPad, 'click', function () {\n\n      self._processInstances.getProcessInstances(element).forEach(function (processInstance) {\n        var parentProcessInstanceId = processInstance.parentProcessInstanceId;\n\n        // interrupting\n        if (attachedElement.businessObject.cancelActivity) {\n          element.children.forEach(function (child) {\n            if (child.tokenCount && child.tokenCount[processInstance.processInstanceId]) {\n              child.tokenCount[processInstance.processInstanceId]--;\n            }\n          });\n\n          // finish but do NOT remove\n          self._processInstances.finish(processInstance.processInstanceId);\n\n          self._eventBus.fire(UPDATE_ELEMENT_EVENT, {\n            element: element\n          });\n        }\n\n        self._eventBus.fire(GENERATE_TOKEN_EVENT, {\n          element: attachedElement,\n          processInstanceId: parentProcessInstanceId\n        });\n      });\n    });\n  });\n\n  return contextPads;\n};\n\nBoundaryEventHandler.$inject = ['eventBus', 'processInstances', 'processInstanceSettings'];\n\nmodule.exports = BoundaryEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/BoundaryEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ExclusiveGatewayHandler.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ExclusiveGatewayHandler.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nfunction ExclusiveGatewayHandler(exluciveGatewaySettings) {\n  this._exclusiveGatewaySettings = exluciveGatewaySettings;\n}\n\nExclusiveGatewayHandler.prototype.createContextPads = function (element) {\n  var self = this;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  if (outgoingSequenceFlows.length < 2) {\n    return;\n  }\n\n  var contextPad = domify('<div class=\"context-pad\" title=\"Set Sequence Flow\"><i class=\"fa fa-code-fork\"></i></div>');\n\n  domEvent.bind(contextPad, 'click', function () {\n    self._exclusiveGatewaySettings.setSequenceFlow(element);\n  });\n\n  return [{\n    element: element,\n    html: contextPad\n  }];\n};\n\nExclusiveGatewayHandler.$inject = ['exclusiveGatewaySettings'];\n\nmodule.exports = ExclusiveGatewayHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ExclusiveGatewayHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/IntermediateCatchEventHandler.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/IntermediateCatchEventHandler.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction IntermeditateCatchEventHandler(eventBus) {\n  this._eventBus = eventBus;\n}\n\nIntermeditateCatchEventHandler.prototype.createContextPads = function (element) {\n  var processInstanceId = element.parent.shownProcessInstance;\n\n  var incomingSequenceFlows = element.incoming.filter(function (incoming) {\n    return is(incoming, 'bpmn:SequenceFlow');\n  });\n\n  var eventBasedGatewaysHaveTokens = [];\n\n  incomingSequenceFlows.forEach(function (incoming) {\n    var source = incoming.source;\n\n    if (is(source, 'bpmn:EventBasedGateway') && source.tokenCount && source.tokenCount[processInstanceId]) {\n      eventBasedGatewaysHaveTokens.push(source);\n    }\n  });\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  if (!incomingSequenceFlows.length || !outgoingSequenceFlows.length) {\n    return;\n  }\n\n  var self = this;\n\n  var contextPad;\n\n  if (element.tokenCount && element.tokenCount[processInstanceId]) {\n    contextPad = domify('<div class=\"context-pad\" title=\"Trigger Event\"><i class=\"fa fa-play\"></i></div>');\n\n    domEvent.bind(contextPad, 'click', function () {\n      element.tokenCount[processInstanceId]--;\n\n      self._eventBus.fire(GENERATE_TOKEN_EVENT, {\n        element: element,\n        processInstanceId: processInstanceId\n      });\n    });\n  } else if (eventBasedGatewaysHaveTokens.length) {\n    contextPad = domify('<div class=\"context-pad\" title=\"Trigger Event\"><i class=\"fa fa-play\"></i></div>');\n\n    domEvent.bind(contextPad, 'click', function () {\n      eventBasedGatewaysHaveTokens.forEach(function (eventBasedGateway) {\n        eventBasedGateway.tokenCount[processInstanceId]--;\n      });\n\n      self._eventBus.fire(GENERATE_TOKEN_EVENT, {\n        element: element,\n        processInstanceId: processInstanceId\n      });\n    });\n  } else {\n    return;\n  }\n\n  return [{\n    element: element,\n    html: contextPad\n  }];\n};\n\nIntermeditateCatchEventHandler.$inject = ['eventBus'];\n\nmodule.exports = IntermeditateCatchEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/IntermediateCatchEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ProcessHandler.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ProcessHandler.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\n/**\n * Is used for subprocesses and participants.\n */\nfunction ProcessHandler(processInstances, processInstanceSettings) {\n  this._processInstances = processInstances;\n  this._processInstanceSettings = processInstanceSettings;\n}\n\nProcessHandler.prototype.createContextPads = function (element) {\n  var self = this;\n\n  var processInstances = this._processInstances.getProcessInstances(element).filter(function (processInstance) {\n    return !processInstance.isFinished;\n  });\n\n  if (processInstances.length < 2) {\n    return;\n  }\n\n  var contextPad = domify('<div class=\"context-pad\" title=\"View Process Instances\"><i class=\"fa fa-list-ol\"></i></div>');\n\n  domEvent.bind(contextPad, 'click', function () {\n    self._processInstanceSettings.showNext(element);\n  });\n\n  return [{\n    element: element,\n    html: contextPad\n  }];\n};\n\nProcessHandler.$inject = ['processInstances', 'processInstanceSettings'];\n\nmodule.exports = ProcessHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/ProcessHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/StartEventHandler.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/StartEventHandler.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction StartEventHandler(eventBus, elementRegistry, animation) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._animation = animation;\n}\n\nStartEventHandler.prototype.createContextPads = function (element) {\n  var tokens = false;\n\n  this._elementRegistry.forEach(function (element) {\n    if (element.tokenCount) {\n      Object.values(element.tokenCount).forEach(function (tokenCount) {\n        if (tokenCount) {\n          tokens = true;\n        }\n      });\n    }\n  });\n\n  if (is(element.parent, 'bpmn:SubProcess') || tokens || this._animation.animations.length) {\n    return;\n  }\n\n  var self = this;\n\n  var contextPad = domify('<div class=\"context-pad\"><i class=\"fa fa-play\"></i></div>');\n\n  domEvent.bind(contextPad, 'click', function () {\n    self._eventBus.fire(GENERATE_TOKEN_EVENT, {\n      element: element\n    });\n  });\n\n  return [{\n    element: element,\n    html: contextPad\n  }];\n};\n\nStartEventHandler.$inject = ['eventBus', 'elementRegistry', 'animation'];\n\nmodule.exports = StartEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/handler/StartEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/context-pads/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/context-pads/index.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ContextPads */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/ContextPads.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/context-pads/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/DisableModeling.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/DisableModeling.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nvar HIGH_PRIORITY = 10001;\n\nfunction DisableModeling(eventBus, contextPad, dragging, directEditing, editorActions, modeling, palette, paletteProvider) {\n  var self = this;\n\n  this._eventBus = eventBus;\n\n  this.modelingDisabled = false;\n\n  eventBus.on(TOGGLE_MODE_EVENT, HIGH_PRIORITY, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    self.modelingDisabled = simulationModeActive;\n\n    if (self.modelingDisabled) {\n      directEditing.cancel();\n      contextPad.close();\n      dragging.cancel();\n    }\n\n    palette._update();\n  });\n\n  function intercept(obj, fnName, cb) {\n    var fn = obj[fnName];\n    obj[fnName] = function () {\n      return cb.call(this, fn, arguments);\n    };\n  }\n\n  function ignoreIfModelingDisabled(obj, fnName) {\n    intercept(obj, fnName, function (fn, args) {\n      if (self.modelingDisabled) {\n        return;\n      }\n\n      return fn.apply(this, args);\n    });\n  }\n\n  function throwIfModelingDisabled(obj, fnName) {\n    intercept(obj, fnName, function (fn, args) {\n      if (self.modelingDisabled) {\n        throw new Error('model is read-only');\n      }\n\n      return fn.apply(this, args);\n    });\n  }\n\n  ignoreIfModelingDisabled(contextPad, 'open');\n\n  ignoreIfModelingDisabled(dragging, 'init');\n\n  ignoreIfModelingDisabled(directEditing, 'activate');\n\n  ignoreIfModelingDisabled(dragging, 'init');\n\n  ignoreIfModelingDisabled(directEditing, 'activate');\n\n  throwIfModelingDisabled(modeling, 'moveShape');\n  throwIfModelingDisabled(modeling, 'updateAttachment');\n  throwIfModelingDisabled(modeling, 'moveElements');\n  throwIfModelingDisabled(modeling, 'moveConnection');\n  throwIfModelingDisabled(modeling, 'layoutConnection');\n  throwIfModelingDisabled(modeling, 'createConnection');\n  throwIfModelingDisabled(modeling, 'createShape');\n  throwIfModelingDisabled(modeling, 'createLabel');\n  throwIfModelingDisabled(modeling, 'appendShape');\n  throwIfModelingDisabled(modeling, 'removeElements');\n  throwIfModelingDisabled(modeling, 'distributeElements');\n  throwIfModelingDisabled(modeling, 'removeShape');\n  throwIfModelingDisabled(modeling, 'removeConnection');\n  throwIfModelingDisabled(modeling, 'replaceShape');\n  throwIfModelingDisabled(modeling, 'pasteElements');\n  throwIfModelingDisabled(modeling, 'alignElements');\n  throwIfModelingDisabled(modeling, 'resizeShape');\n  throwIfModelingDisabled(modeling, 'createSpace');\n  throwIfModelingDisabled(modeling, 'updateWaypoints');\n  throwIfModelingDisabled(modeling, 'reconnectStart');\n  throwIfModelingDisabled(modeling, 'reconnectEnd');\n\n  intercept(editorActions, 'trigger', function (fn, args) {\n    var action = args[0];\n\n    if (self.modelingDisabled && isAnyAction(['undo', 'redo', 'copy', 'paste', 'removeSelection', 'spaceTool', 'lassoTool', 'globalConnectTool', 'distributeElements', 'alignElements', 'directEditing'], action)) {\n      return;\n    }\n\n    return fn.apply(this, args);\n  });\n}\n\nDisableModeling.$inject = ['eventBus', 'contextPad', 'dragging', 'directEditing', 'editorActions', 'modeling', 'palette', 'paletteProvider'];\n\nmodule.exports = DisableModeling;\n\n// helpers //////////\n\nfunction isAnyAction(actions, action) {\n  return actions.indexOf(action) > -1;\n}\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/DisableModeling.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./DisableModeling */ \"./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/DisableModeling.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/EditorActions.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/EditorActions.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction EditorActions(eventBus, toggleMode, pauseSimulation, log, resetSimulation, editorActions) {\n  editorActions.register({\n    toggleTokenSimulation: function () {\n      toggleMode.toggleMode();\n    }\n  });\n\n  editorActions.register({\n    togglePauseTokenSimulation: function () {\n      pauseSimulation.toggle();\n    }\n  });\n\n  editorActions.register({\n    resetTokenSimulation: function () {\n      resetSimulation.resetSimulation();\n    }\n  });\n\n  editorActions.register({\n    toggleTokenSimulationLog: function () {\n      log.toggle();\n    }\n  });\n}\n\nEditorActions.$inject = ['eventBus', 'toggleMode', 'pauseSimulation', 'log', 'resetSimulation', 'editorActions'];\n\nmodule.exports = EditorActions;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/EditorActions.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./EditorActions */ \"./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/EditorActions.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/ElementNotifications.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/ElementNotifications.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nvar OFFSET_TOP = -15,\n    OFFSET_RIGHT = 15;\n\nfunction ElementNotifications(overlays, eventBus) {\n  var self = this;\n\n  this._overlays = overlays;\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.removeElementNotifications();\n    }\n  });\n\n  eventBus.on([RESET_SIMULATION_EVENT, GENERATE_TOKEN_EVENT], function () {\n    self.removeElementNotifications();\n  });\n}\n\nElementNotifications.prototype.addElementNotifications = function (elements, options) {\n  var self = this;\n\n  elements.forEach(function (element) {\n    self.addElementNotification(element, options);\n  });\n};\n\nElementNotifications.prototype.addElementNotification = function (element, options) {\n  var position = {\n    top: OFFSET_TOP,\n    right: OFFSET_RIGHT\n  };\n\n  var markup = '<div class=\"element-notification ' + (options.type || '') + '\">' + (options.icon ? '<i class=\"fa ' + options.icon + '\"></i>' : '') + ('<span class=\"text\">' + options.text + '</span>' || false) + '</div>';\n\n  var html = domify(markup);\n\n  this._overlays.add(element, 'element-notification', {\n    position: position,\n    html: html,\n    show: {\n      minZoom: 0.5\n    }\n  });\n};\n\nElementNotifications.prototype.removeElementNotifications = function (elements) {\n  var self = this;\n\n  if (!elements) {\n    this._overlays.remove({ type: 'element-notification' });\n  } else {\n    elements.forEach(function (element) {\n      self.removeElementNotification(element);\n    });\n  }\n};\n\nElementNotifications.prototype.removeElementNotification = function (element) {\n  this._overlays.remove({ element: element });\n};\n\nElementNotifications.$inject = ['overlays', 'eventBus'];\n\nmodule.exports = ElementNotifications;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/ElementNotifications.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/index.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ElementNotifications */ \"./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/ElementNotifications.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/element-support/ElementSupport.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/element-support/ElementSupport.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\");\n\nvar elementHelper = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    is = elementHelper.is,\n    SUPPORTED_ELEMENTS = elementHelper.supportedElements;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nvar IGNORED_ELEMENTS = ['bpmn:Process', 'bpmn:Collaboration', 'bpmn:Participant', 'bpmn:Lane', 'bpmn:TextAnnotation'];\n\nfunction isLabel(element) {\n  return element.labelTarget;\n}\n\nfunction ElementSupport(eventBus, elementRegistry, canvas, notifications, elementNotifications) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._elementNotifications = elementNotifications;\n  this._notifications = notifications;\n\n  this.canvasParent = canvas.getContainer().parentNode;\n\n  eventBus.on(GENERATE_TOKEN_EVENT, 20000, function (context) {\n    var element = context.element;\n\n    if (!is(element, 'bpmn:StartEvent')) {\n      return;\n    }\n\n    if (!self.allElementsSupported()) {\n      self.showWarnings();\n\n      domClasses(self.canvasParent).add('warning');\n\n      // cancel event\n      return true;\n    }\n  });\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      domClasses(self.canvasParent).remove('warning');\n    }\n  });\n}\n\nElementSupport.prototype.allElementsSupported = function () {\n  var allElementsSupported = true;\n\n  this._elementRegistry.forEach(function (element) {\n    if (!is(element, IGNORED_ELEMENTS) && !is(element, SUPPORTED_ELEMENTS) && !isLabel(element)) {\n      allElementsSupported = false;\n    }\n  });\n\n  return allElementsSupported;\n};\n\nElementSupport.prototype.showWarnings = function (elements) {\n  var self = this;\n\n  var warnings = [];\n\n  this._elementRegistry.forEach(function (element) {\n    if (!is(element, IGNORED_ELEMENTS) && !is(element, SUPPORTED_ELEMENTS) && !isLabel(element)) {\n      self.showWarning(element);\n\n      if (warnings.indexOf(element.type)) {\n        self._notifications.showNotification(element.type + ' not supported', 'warning');\n\n        warnings.push(element.type);\n      }\n    }\n  });\n};\n\nElementSupport.prototype.showWarning = function (element) {\n  this._elementNotifications.addElementNotification(element, {\n    type: 'warning',\n    icon: 'fa-exclamation-triangle',\n    text: 'Not supported'\n  });\n};\n\nElementSupport.$inject = ['eventBus', 'elementRegistry', 'canvas', 'notifications', 'elementNotifications'];\n\nmodule.exports = ElementSupport;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/element-support/ElementSupport.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/element-support/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/element-support/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ElementSupport */ \"./node_modules/bpmn-js-token-simulation/lib/features/element-support/ElementSupport.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/element-support/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/ExclusiveGatewaySettings.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/ExclusiveGatewaySettings.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nvar NO_CONFIGURATION_COLOR = '#999';\n\nfunction getNext(gateway) {\n  var outgoing = gateway.outgoing.filter(isSequenceFlow);\n\n  var index = outgoing.indexOf(gateway.sequenceFlow);\n\n  if (outgoing[index + 1]) {\n    return outgoing[index + 1];\n  } else {\n    return outgoing[0];\n  }\n}\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}\n\nfunction ExclusiveGatewaySettings(eventBus, elementRegistry, graphicsFactory) {\n  var self = this;\n\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.resetSequenceFlows();\n    } else {\n      self.setSequenceFlowsDefault();\n    }\n  });\n}\n\nExclusiveGatewaySettings.prototype.setSequenceFlowsDefault = function () {\n  var self = this;\n\n  var exclusiveGateways = this._elementRegistry.filter(function (element) {\n    return is(element, 'bpmn:ExclusiveGateway');\n  });\n\n  exclusiveGateways.forEach(function (exclusiveGateway) {\n    if (exclusiveGateway.outgoing.filter(isSequenceFlow).length) {\n      self.setSequenceFlow(exclusiveGateway, exclusiveGateway.outgoing.filter(isSequenceFlow)[0]);\n    }\n  });\n};\n\nExclusiveGatewaySettings.prototype.resetSequenceFlows = function () {\n  var self = this;\n\n  var exclusiveGateways = this._elementRegistry.filter(function (element) {\n    return is(element, 'bpmn:ExclusiveGateway');\n  });\n\n  exclusiveGateways.forEach(function (exclusiveGateway) {\n    if (exclusiveGateway.outgoing.filter(isSequenceFlow).length) {\n      self.resetSequenceFlow(exclusiveGateway);\n    }\n  });\n};\n\nExclusiveGatewaySettings.prototype.resetSequenceFlow = function (gateway) {\n  if (gateway.sequenceFlow) {\n    delete gateway.sequenceFlow;\n  }\n};\n\nExclusiveGatewaySettings.prototype.setSequenceFlow = function (gateway) {\n  var self = this;\n\n  var outgoing = gateway.outgoing.filter(isSequenceFlow);\n\n  if (!outgoing.length) {\n    return;\n  }\n\n  var sequenceFlow = gateway.sequenceFlow;\n\n  if (sequenceFlow) {\n\n    // set next sequence flow\n    gateway.sequenceFlow = getNext(gateway);\n  } else {\n\n    // set first sequence flow\n    gateway.sequenceFlow = outgoing[0];\n  }\n\n  // set colors\n  gateway.outgoing.forEach(function (outgoing) {\n    if (outgoing === gateway.sequenceFlow) {\n      self.setColor(outgoing, '#000');\n    } else {\n      self.setColor(outgoing, NO_CONFIGURATION_COLOR);\n    }\n  });\n};\n\nExclusiveGatewaySettings.prototype.setColor = function (sequenceFlow, color) {\n  var businessObject = sequenceFlow.businessObject;\n\n  businessObject.di.set('stroke', color);\n\n  var gfx = this._elementRegistry.getGraphics(sequenceFlow);\n\n  this._graphicsFactory.update('connection', sequenceFlow, gfx);\n};\n\nExclusiveGatewaySettings.$inject = ['eventBus', 'elementRegistry', 'graphicsFactory'];\n\nmodule.exports = ExclusiveGatewaySettings;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/ExclusiveGatewaySettings.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ExclusiveGatewaySettings */ \"./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/ExclusiveGatewaySettings.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/KeyboardBindings.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/KeyboardBindings.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    VERY_HIGH_PRIORITY = 10000;\n\nfunction KeyboardBindings(eventBus, injector) {\n\n  var isActive = false;\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (simulationModeActive) {\n      isActive = true;\n    } else {\n      isActive = false;\n    }\n  });\n\n  eventBus.on('import.done', function () {\n\n    function handleKeyEvent(keyEvent) {\n      if (isKey(['t', 'T'], keyEvent)) {\n        editorActions.trigger('toggleTokenSimulation');\n\n        return true;\n      }\n\n      if (!isActive) {\n        return;\n      }\n\n      if (isKey(['l', 'L'], keyEvent)) {\n        editorActions.trigger('toggleTokenSimulationLog');\n\n        return true;\n      }\n\n      // see https://developer.mozilla.org/de/docs/Web/API/KeyboardEvent/key/Key_Values#Whitespace_keys\n      if (isKey([' ', 'Spacebar'], keyEvent)) {\n        editorActions.trigger('togglePauseTokenSimulation');\n\n        return true;\n      }\n\n      if (isKey(['r', 'R'], keyEvent)) {\n        editorActions.trigger('resetTokenSimulation');\n\n        return true;\n      }\n    }\n\n    var editorActions = injector.get('editorActions', false),\n        keyboard = injector.get('keyboard', false);\n\n    if (editorActions && keyboard && isKeyboardBound(keyboard)) {\n      keyboard.addListener(VERY_HIGH_PRIORITY, function (event) {\n        var keyEvent = event.keyEvent;\n\n        handleKeyEvent(keyEvent);\n      });\n    }\n  });\n}\n\nKeyboardBindings.$inject = ['eventBus', 'injector'];\n\nmodule.exports = KeyboardBindings;\n\n// helpers //////////\n\nfunction isKey(keys, event) {\n  return keys.indexOf(event.key) > -1;\n}\n\nfunction isKeyboardBound(keyboard) {\n  return keyboard._config && keyboard._config.bindTo;\n}\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/KeyboardBindings.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./KeyboardBindings */ \"./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/KeyboardBindings.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/log/Log.js":
/*!***********************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/log/Log.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\"),\n    domQuery = __webpack_require__(/*! min-dom/lib/query */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js\");\n\nvar elementHelper = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    getBusinessObject = elementHelper.getBusinessObject,\n    is = elementHelper.is,\n    isTypedEvent = elementHelper.isTypedEvent;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    PROCESS_INSTANCE_CREATED_EVENT = events.PROCESS_INSTANCE_CREATED_EVENT;\n\nfunction getElementName(element) {\n  return element && element.businessObject.name;\n}\n\nfunction Log(eventBus, notifications, tokenSimulationPalette, canvas) {\n  var self = this;\n\n  this._notifications = notifications;\n  this._tokenSimulationPalette = tokenSimulationPalette;\n  this._canvas = canvas;\n\n  this._init();\n\n  eventBus.on(GENERATE_TOKEN_EVENT, function (context) {\n    var element = context.element,\n        elementName = getElementName(element);\n\n    if (is(element, 'bpmn:StartEvent')) {\n      self.log(elementName || 'Start Event', 'info', 'bpmn-icon-start-event-none');\n    } else if (is(element, 'bpmn:Task')) {\n      self.log(elementName || 'Task', 'info', 'bpmn-icon-task');\n    } else if (is(element, 'bpmn:BusinessRuleTask')) {\n      self.log(elementName || 'Business Rule Task', 'info', 'bpmn-icon-business-rule');\n    } else if (is(element, 'bpmn:ManualTask')) {\n      self.log(elementName || 'Manual Task', 'info', 'bpmn-icon-manual');\n    } else if (is(element, 'bpmn:ScriptTask')) {\n      self.log(elementName || 'Script Task', 'info', 'bpmn-icon-script');\n    } else if (is(element, 'bpmn:ServiceTask')) {\n      self.log(elementName || 'Service Task', 'info', 'bpmn-icon-service');\n    } else if (is(element, 'bpmn:UserTask')) {\n      self.log(elementName || 'User Task', 'info', 'bpmn-icon-user');\n    } else if (is(element, 'bpmn:ExclusiveGateway')) {\n      if (element.outgoing.length < 2) {\n        return;\n      }\n\n      var sequenceFlowName = getElementName(element.sequenceFlow);\n\n      var text = elementName || 'Gateway';\n\n      if (sequenceFlowName) {\n        text = text.concat(' <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i> ' + sequenceFlowName);\n      }\n\n      self.log(text, 'info', 'bpmn-icon-gateway-xor');\n    } else if (is(element, ['bpmn:IntermediateCatchEvent', 'bpmn:IntermediateThrowEvent'])) {\n      self.log(elementName || 'Intermediate Event', 'info', 'bpmn-icon-intermediate-event-none');\n    }\n  });\n\n  eventBus.on(CONSUME_TOKEN_EVENT, function (context) {\n    var element = context.element,\n        elementName = getElementName(element);\n\n    if (is(element, 'bpmn:EndEvent')) {\n\n      if (isTypedEvent(getBusinessObject(element), 'bpmn:TerminateEventDefinition')) {\n        self.log(elementName || 'Terminate End Event', 'info', 'bpmn-icon-end-event-terminate');\n      } else {\n        self.log(elementName || 'End Event', 'info', 'bpmn-icon-end-event-none');\n      }\n    }\n  });\n\n  eventBus.on(PROCESS_INSTANCE_CREATED_EVENT, function (context) {\n    var processInstanceId = context.processInstanceId,\n        parent = context.parent;\n\n    if (is(parent, 'bpmn:Process')) {\n      self.log('Process ' + processInstanceId + ' started', 'success', 'fa-check');\n    } else {\n      self.log('Subprocess ' + processInstanceId + ' started', 'info', 'fa-check');\n    }\n  });\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.emptyLog();\n\n      domClasses(self.container).add('hidden');\n    }\n  });\n\n  eventBus.on(RESET_SIMULATION_EVENT, function (context) {\n    self.emptyLog();\n\n    domClasses(self.container).add('hidden');\n  });\n}\n\nLog.prototype._init = function () {\n  var self = this;\n\n  this.container = domify('<div class=\"token-simulation-log hidden\">' + '<div class=\"header\">' + '<i class=\"fa fa-align-left\"></i>' + '<button class=\"close\">' + '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>' + '</button>' + '</div>' + '<div class=\"content\">' + '<p class=\"entry placeholder\">No Entries</p>' + '</div>' + '</div>');\n\n  this.placeholder = domQuery('.placeholder', this.container);\n\n  this.content = domQuery('.content', this.container);\n\n  domEvent.bind(this.content, 'wheel', function (e) {\n    e.stopPropagation();\n  });\n\n  domEvent.bind(this.content, 'mousedown', function (e) {\n    e.stopPropagation();\n  });\n\n  this.close = domQuery('.close', this.container);\n\n  domEvent.bind(this.close, 'click', function () {\n    domClasses(self.container).add('hidden');\n  });\n\n  this.icon = domQuery('.fa-align-left', this.container);\n\n  domEvent.bind(this.icon, 'click', function () {\n    domClasses(self.container).add('hidden');\n  });\n\n  this._canvas.getContainer().appendChild(this.container);\n\n  this.paletteEntry = domify('<div class=\"entry\" title=\"Show Simulation Log\"><i class=\"fa fa-align-left\"></i></div>');\n\n  domEvent.bind(this.paletteEntry, 'click', function () {\n    domClasses(self.container).remove('hidden');\n  });\n\n  this._tokenSimulationPalette.addEntry(this.paletteEntry, 3);\n};\n\nLog.prototype.toggle = function () {\n  var container = this.container;\n\n  if (domClasses(container).has('hidden')) {\n    domClasses(container).remove('hidden');\n  } else {\n    domClasses(container).add('hidden');\n  }\n};\n\nLog.prototype.log = function (text, type, icon) {\n  domClasses(this.placeholder).add('hidden');\n\n  var date = new Date();\n\n  var dateString = date.toLocaleTimeString() + ':' + date.getUTCMilliseconds();\n\n  this._notifications.showNotification(text, type, icon);\n\n  var iconMarkup;\n\n  if (!icon) {\n    icon = 'fa-info';\n  }\n\n  if (icon.includes('bpmn')) {\n    iconMarkup = '<span class=\"icon ' + icon + '\">';\n  } else {\n    iconMarkup = '<i class=\"icon fa ' + icon + '\"></i>';\n  }\n\n  var logEntry = domify('<p class=\"entry ' + type + '\"><span class=\"date\">' + dateString + '</span>' + iconMarkup + '</span>' + text + '</p>');\n\n  this.content.appendChild(logEntry);\n\n  this.content.scrollTop = this.content.scrollHeight;\n};\n\nLog.prototype.emptyLog = function () {\n  while (this.content.firstChild) {\n    this.content.removeChild(this.content.firstChild);\n  }\n\n  this.placeholder = domify('<p class=\"entry placeholder\">No Entries</p>');\n\n  this.content.appendChild(this.placeholder);\n};\n\nLog.$inject = ['eventBus', 'notifications', 'tokenSimulationPalette', 'canvas'];\n\nmodule.exports = Log;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/log/Log.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/log/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/log/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./Log */ \"./node_modules/bpmn-js-token-simulation/lib/features/log/Log.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/log/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/notifications/Notifications.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/notifications/Notifications.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nvar NOTIFICATION_TIME_TO_LIVE = 2000; // ms\n\nfunction Notifications(eventBus, canvas) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._init();\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.removeAll();\n    }\n  });\n}\n\nNotifications.prototype._init = function () {\n  this.container = domify('<div class=\"notifications\"></div>');\n\n  this._canvas.getContainer().appendChild(this.container);\n};\n\nNotifications.prototype.showNotification = function (text, type, icon) {\n  var iconMarkup;\n\n  if (!icon) {\n    icon = 'fa-info';\n  }\n\n  if (icon.includes('bpmn')) {\n    iconMarkup = '<i class=\"' + icon + '\"></i>';\n  } else {\n    iconMarkup = '<i class=\"fa ' + icon + '\"></i>';\n  }\n\n  var notification = domify('<div class=\"notification ' + type + '\">' + '<span class=\"icon\">' + iconMarkup + '</span>' + text + '</div>');\n\n  this.container.appendChild(notification);\n\n  // prevent more than 5 notifications at once\n  while (this.container.children.length > 5) {\n    this.container.children[0].remove();\n  }\n\n  setTimeout(function () {\n    notification.remove();\n  }, NOTIFICATION_TIME_TO_LIVE);\n};\n\nNotifications.prototype.removeAll = function () {\n  while (this.container.children.length) {\n    this.container.children[0].remove();\n  }\n};\n\nNotifications.$inject = ['eventBus', 'canvas'];\n\nmodule.exports = Notifications;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/notifications/Notifications.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/notifications/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/notifications/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./Notifications */ \"./node_modules/bpmn-js-token-simulation/lib/features/notifications/Notifications.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/notifications/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/palette/Palette.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/palette/Palette.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nfunction Palette(eventBus, canvas) {\n  var self = this;\n\n  this._canvas = canvas;\n\n  this.entries = [];\n\n  this._init();\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (simulationModeActive) {\n      domClasses(self.container).remove('hidden');\n    } else {\n      domClasses(self.container).add('hidden');\n    }\n  });\n}\n\nPalette.prototype._init = function () {\n  this.container = domify('<div class=\"token-simulation-palette hidden\"></div>');\n\n  this._canvas.getContainer().appendChild(this.container);\n};\n\nPalette.prototype.addEntry = function (entry, index) {\n  var childIndex = 0;\n\n  this.entries.forEach(function (entry) {\n    if (index >= entry.index) {\n      childIndex++;\n    }\n  });\n\n  this.container.insertBefore(entry, this.container.childNodes[childIndex]);\n\n  this.entries.push({\n    entry: entry,\n    index: index\n  });\n};\n\nPalette.$inject = ['eventBus', 'canvas'];\n\nmodule.exports = Palette;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/palette/Palette.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/palette/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/palette/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./Palette */ \"./node_modules/bpmn-js-token-simulation/lib/features/palette/Palette.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/palette/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/PauseSimulation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/PauseSimulation.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    PLAY_SIMULATION_EVENT = events.PLAY_SIMULATION_EVENT,\n    PAUSE_SIMULATION_EVENT = events.PAUSE_SIMULATION_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    ANIMATION_CREATED_EVENT = events.ANIMATION_CREATED_EVENT,\n    PROCESS_INSTANCE_CREATED_EVENT = events.PROCESS_INSTANCE_CREATED_EVENT;\n\nvar PLAY_MARKUP = '<i class=\"fa fa-play\"></i>',\n    PAUSE_MARKUP = '<i class=\"fa fa-pause\"></i>';\n\nfunction PauseSimulation(eventBus, tokenSimulationPalette, notifications, canvas) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._tokenSimulationPalette = tokenSimulationPalette;\n  this._notifications = notifications;\n\n  this.canvasParent = canvas.getContainer().parentNode;\n\n  this.isActive = false;\n  this.isPaused = false;\n\n  this._init();\n\n  // unpause on simulation start\n  eventBus.on(PROCESS_INSTANCE_CREATED_EVENT, function (context) {\n    var parent = context.parent;\n\n    if (!parent.parent) {\n      self.activate();\n      self.unpause();\n\n      notifications.showNotification('Start Simulation', 'info');\n    }\n  });\n\n  eventBus.on([RESET_SIMULATION_EVENT, TOGGLE_MODE_EVENT], function () {\n    self.deactivate();\n    self.unpause();\n  });\n\n  eventBus.on(ANIMATION_CREATED_EVENT, function (context) {\n    var animation = context.animation;\n\n    if (self.isPaused) {\n      animation.pause();\n    }\n  });\n}\n\nPauseSimulation.prototype._init = function () {\n  this.paletteEntry = domify('<div class=\"entry disabled\" title=\"Play/Pause Simulation\">' + PLAY_MARKUP + '</div>');\n\n  domEvent.bind(this.paletteEntry, 'click', this.toggle.bind(this));\n\n  this._tokenSimulationPalette.addEntry(this.paletteEntry, 1);\n};\n\nPauseSimulation.prototype.toggle = function () {\n  if (!this.isActive) {\n    return;\n  }\n\n  if (this.isPaused) {\n    this.unpause();\n  } else {\n    this.pause();\n  }\n};\n\nPauseSimulation.prototype.pause = function () {\n  if (!this.isActive) {\n    return;\n  }\n\n  domClasses(this.paletteEntry).remove('active');\n  domClasses(this.canvasParent).add('paused');\n\n  this.paletteEntry.innerHTML = PLAY_MARKUP;\n\n  this._eventBus.fire(PAUSE_SIMULATION_EVENT);\n\n  this._notifications.showNotification('Pause Simulation', 'info');\n\n  this.isPaused = true;\n};\n\nPauseSimulation.prototype.unpause = function () {\n  if (!this.isActive) {\n    return;\n  }\n\n  domClasses(this.paletteEntry).add('active');\n  domClasses(this.canvasParent).remove('paused');\n\n  this.paletteEntry.innerHTML = PAUSE_MARKUP;\n\n  this._eventBus.fire(PLAY_SIMULATION_EVENT);\n\n  this._notifications.showNotification('Play Simulation', 'info');\n\n  this.isPaused = false;\n};\n\nPauseSimulation.prototype.activate = function () {\n  this.isActive = true;\n\n  domClasses(this.paletteEntry).remove('disabled');\n};\n\nPauseSimulation.prototype.deactivate = function () {\n  this.isActive = false;\n\n  domClasses(this.paletteEntry).remove('active');\n  domClasses(this.paletteEntry).add('disabled');\n};\n\nPauseSimulation.$inject = ['eventBus', 'tokenSimulationPalette', 'notifications', 'canvas'];\n\nmodule.exports = PauseSimulation;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/PauseSimulation.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./PauseSimulation */ \"./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/PauseSimulation.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/PreserveElementColors.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/PreserveElementColors.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nvar VERY_HIGH_PRIORITY = 50000;\n\nfunction PreserveElementColors(eventBus, elementRegistry, graphicsFactory) {\n  var self = this;\n\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n\n  this.elementColors = {};\n\n  eventBus.on(TOGGLE_MODE_EVENT, VERY_HIGH_PRIORITY, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.resetColors();\n    } else {\n      self.preserveColors();\n    }\n  });\n}\n\nPreserveElementColors.prototype.preserveColors = function () {\n  var self = this;\n\n  this._elementRegistry.forEach(function (element) {\n    self.elementColors[element.id] = {\n      stroke: element.businessObject.di.get('stroke'),\n      fill: element.businessObject.di.get('fill')\n    };\n\n    self.setColor(element, '#000', '#fff');\n  });\n};\n\nPreserveElementColors.prototype.resetColors = function () {\n  var self = this;\n\n  this._elementRegistry.forEach(function (element) {\n    if (self.elementColors[element.id]) {\n      self.setColor(element, self.elementColors[element.id].stroke, self.elementColors[element.id].fill);\n    }\n  });\n\n  this.elementColors = {};\n};\n\nPreserveElementColors.prototype.setColor = function (element, stroke, fill) {\n  var businessObject = element.businessObject;\n\n  businessObject.di.set('stroke', stroke);\n  businessObject.di.set('fill', fill);\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var type = element.waypoints ? 'connection' : 'shape';\n\n  this._graphicsFactory.update(type, element, gfx);\n};\n\nPreserveElementColors.$inject = ['eventBus', 'elementRegistry', 'graphicsFactory'];\n\nmodule.exports = PreserveElementColors;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/PreserveElementColors.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/index.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./PreserveElementColors */ \"./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/PreserveElementColors.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/ProcessInstanceIds.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/ProcessInstanceIds.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT;\n\nfunction ProcessInstanceIds(eventBus) {\n  this.nextProcessInstanceId = 1;\n\n  eventBus.on(TOGGLE_MODE_EVENT, this.reset.bind(this));\n\n  eventBus.on(RESET_SIMULATION_EVENT, this.reset.bind(this));\n}\n\nProcessInstanceIds.prototype.getNext = function () {\n  var processInstanceId = this.nextProcessInstanceId;\n\n  this.nextProcessInstanceId++;\n\n  return processInstanceId;\n};\n\nProcessInstanceIds.prototype.reset = function () {\n  this.nextProcessInstanceId = 1;\n};\n\nProcessInstanceIds.$inject = ['eventBus'];\n\nmodule.exports = ProcessInstanceIds;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/ProcessInstanceIds.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ProcessInstanceIds */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/ProcessInstanceIds.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/ProcessInstanceSettings.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/ProcessInstanceSettings.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    PROCESS_INSTANCE_CREATED_EVENT = events.PROCESS_INSTANCE_CREATED_EVENT,\n    PROCESS_INSTANCE_FINISHED_EVENT = events.PROCESS_INSTANCE_FINISHED_EVENT,\n    PROCESS_INSTANCE_SHOWN_EVENT = events.PROCESS_INSTANCE_SHOWN_EVENT,\n    PROCESS_INSTANCE_HIDDEN_EVENT = events.PROCESS_INSTANCE_HIDDEN_EVENT;\n\nvar LOW_PRIORITY = 500;\n\nfunction ProcessInstanceSettings(animation, eventBus, processInstances, elementRegistry) {\n  var self = this;\n\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._processInstances = processInstances;\n  this._elementRegistry = elementRegistry;\n\n  this._eventBus.on(PROCESS_INSTANCE_CREATED_EVENT, LOW_PRIORITY, function (context) {\n    var parent = context.parent,\n        processInstanceId = context.processInstanceId;\n\n    var processInstancesWithParent = processInstances.getProcessInstances(parent).filter(function (processInstance) {\n      return !processInstance.isFinished;\n    });\n\n    if (processInstancesWithParent.length === 1) {\n      self.showProcessInstance(processInstanceId, parent);\n    } else if (processInstancesWithParent.length > 1) {\n      self.hideProcessInstance(processInstanceId);\n    }\n  });\n\n  this._eventBus.on(PROCESS_INSTANCE_FINISHED_EVENT, LOW_PRIORITY, function (context) {\n    var parent = context.parent,\n        processInstanceId = context.processInstanceId;\n\n    var processInstancesWithParent = processInstances.getProcessInstances(parent).filter(function (processInstance) {\n      return processInstanceId !== processInstance.processInstanceId && !processInstance.isFinished;\n    });\n\n    // show remaining process instance\n    if (processInstancesWithParent.length && processInstanceId === parent.shownProcessInstance) {\n\n      self.showProcessInstance(processInstancesWithParent[0].processInstanceId, parent);\n    } else {\n      delete parent.shownProcessInstance;\n    }\n\n    // outer process is finished\n    if (!parent.parent) {\n      elementRegistry.forEach(function (element) {\n        delete element.shownProcessInstance;\n      });\n    }\n  });\n\n  eventBus.on(TOGGLE_MODE_EVENT, function () {\n    elementRegistry.forEach(function (element) {\n      delete element.shownProcessInstance;\n    });\n  });\n}\n\nProcessInstanceSettings.prototype.showProcessInstance = function (processInstanceId, parent) {\n  this._animation.showProcessInstanceAnimations(processInstanceId);\n\n  parent.shownProcessInstance = processInstanceId;\n\n  this._eventBus.fire(PROCESS_INSTANCE_SHOWN_EVENT, {\n    processInstanceId: processInstanceId\n  });\n};\n\nProcessInstanceSettings.prototype.hideProcessInstance = function (processInstanceId) {\n  this._animation.hideProcessInstanceAnimations(processInstanceId);\n\n  this._eventBus.fire(PROCESS_INSTANCE_HIDDEN_EVENT, {\n    processInstanceId: processInstanceId\n  });\n};\n\nProcessInstanceSettings.prototype.showNext = function (parent) {\n  var self = this;\n\n  var processInstancesWithParent = this._processInstances.getProcessInstances(parent);\n\n  var shownProcessInstance = parent.shownProcessInstance;\n\n  var indexOfShownProcessInstance = 0;\n\n  for (let i = 0; i < processInstancesWithParent.length; i++) {\n    if (processInstancesWithParent[i].processInstanceId === shownProcessInstance) {\n      break;\n    } else {\n      indexOfShownProcessInstance++;\n    }\n  }\n\n  processInstancesWithParent.forEach(function (processInstance) {\n    self.hideProcessInstance(processInstance.processInstanceId);\n  });\n\n  if (indexOfShownProcessInstance === processInstancesWithParent.length - 1) {\n\n    // last index\n    this.showProcessInstance(processInstancesWithParent[0].processInstanceId, parent);\n  } else {\n\n    // not last index\n    this.showProcessInstance(processInstancesWithParent[indexOfShownProcessInstance + 1].processInstanceId, parent);\n  }\n};\n\nProcessInstanceSettings.$inject = ['animation', 'eventBus', 'processInstances', 'elementRegistry'];\n\nmodule.exports = ProcessInstanceSettings;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/ProcessInstanceSettings.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ProcessInstanceSettings */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/ProcessInstanceSettings.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instances/ProcessInstances.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instances/ProcessInstances.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    PROCESS_INSTANCE_CREATED_EVENT = events.PROCESS_INSTANCE_CREATED_EVENT,\n    PROCESS_INSTANCE_FINISHED_EVENT = events.PROCESS_INSTANCE_FINISHED_EVENT;\n\nfunction ProcessInstances(eventBus, processInstanceIds) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._processInstanceIds = processInstanceIds;\n\n  this.processInstances = [];\n\n  // clear instances\n  eventBus.on([TOGGLE_MODE_EVENT, RESET_SIMULATION_EVENT], function () {\n    self.processInstances = [];\n  });\n}\n\n/**\r\n * Create a new process instance.\r\n *\r\n * @param {Object} parent - Parent element which contains all child elements of process definition.\r\n * @param {string} [parentProcessInstanceId] - Optional ID of parent process instance.\r\n */\nProcessInstances.prototype.create = function (parent, parentProcessInstanceId) {\n  var processInstanceId = this._processInstanceIds.getNext();\n\n  var processInstance = {\n    parent: parent,\n    processInstanceId: processInstanceId,\n    parentProcessInstanceId: parentProcessInstanceId\n  };\n\n  this.processInstances.push(processInstance);\n\n  this._eventBus.fire(PROCESS_INSTANCE_CREATED_EVENT, processInstance);\n\n  return processInstanceId;\n};\n\nProcessInstances.prototype.remove = function (processInstanceId) {\n  this.processInstances = this.processInstances.filter(function (processInstance) {\n    return processInstance.processInstanceId !== processInstanceId;\n  });\n};\n\n/**\r\n * Finish a process instance.\r\n *\r\n * @param {string} processInstanceId - ID of process instance.\r\n */\nProcessInstances.prototype.finish = function (processInstanceId) {\n  var processInstance = this.processInstances.find(function (processInstance) {\n    return processInstance.processInstanceId === processInstanceId;\n  });\n\n  this._eventBus.fire(PROCESS_INSTANCE_FINISHED_EVENT, processInstance);\n\n  processInstance.isFinished = true;\n};\n\n/**\r\n * @param {Object} [parent] - Optional parent.\r\n * @param {Object} [options] - Optional options.\r\n * @param {boolean} [options.includeFinished] - Wether to include finished process instance.\r\n */\nProcessInstances.prototype.getProcessInstances = function (parent, options) {\n  if (!parent) {\n    return this.processInstances;\n  }\n\n  var processInstances = this.processInstances.filter(function (processInstance) {\n    return processInstance.parent === parent;\n  });\n\n  if (options && options.includeFinished !== true) {\n    processInstances = processInstances.filter(function (processInstance) {\n      return !processInstance.isFinished;\n    });\n  }\n\n  return processInstances;\n};\n\nProcessInstances.prototype.getProcessInstance = function (processInstanceId) {\n  return this.processInstances.find(function (processInstance) {\n    return processInstance.processInstanceId === processInstanceId;\n  });\n};\n\nProcessInstances.$inject = ['eventBus', 'processInstanceIds'];\n\nmodule.exports = ProcessInstances;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instances/ProcessInstances.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/process-instances/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/process-instances/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ProcessInstances */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instances/ProcessInstances.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/process-instances/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/ResetSimulation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/ResetSimulation.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\");\n\nvar is = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT;\n\nfunction ResetSimulation(eventBus, tokenSimulationPalette, notifications, elementRegistry) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._tokenSimulationPalette = tokenSimulationPalette;\n  this._notifications = notifications;\n  this._elementRegistry = elementRegistry;\n\n  this._init();\n\n  eventBus.on(GENERATE_TOKEN_EVENT, function (context) {\n    if (!is(context.element, 'bpmn:StartEvent')) {\n      return;\n    }\n\n    domClasses(self.paletteEntry).remove('disabled');\n  });\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.resetSimulation();\n    }\n  });\n}\n\nResetSimulation.prototype._init = function () {\n  var self = this;\n\n  this.paletteEntry = domify('<div class=\"entry disabled\" title=\"Reset Simulation\"><i class=\"fa fa-refresh\"></i></div>');\n\n  domEvent.bind(this.paletteEntry, 'click', function () {\n    self.resetSimulation();\n\n    self._notifications.showNotification('Reset Simulation', 'info');\n  });\n\n  this._tokenSimulationPalette.addEntry(this.paletteEntry, 2);\n};\n\nResetSimulation.prototype.resetSimulation = function () {\n  domClasses(this.paletteEntry).add('disabled');\n\n  this._elementRegistry.forEach(function (element) {\n    if (element.tokenCount !== undefined) {\n      delete element.tokenCount;\n    }\n  });\n\n  this._eventBus.fire(RESET_SIMULATION_EVENT);\n};\n\nResetSimulation.$inject = ['eventBus', 'tokenSimulationPalette', 'notifications', 'elementRegistry'];\n\nmodule.exports = ResetSimulation;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/ResetSimulation.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ResetSimulation */ \"./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/ResetSimulation.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/SetAnimationSpeed.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/SetAnimationSpeed.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\"),\n    domQuery = __webpack_require__(/*! min-dom/lib/query */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nfunction SetAnimationSpeed(canvas, animation, eventBus) {\n  var self = this;\n\n  this._canvas = canvas;\n  this._animation = animation;\n  this._eventBus = eventBus;\n\n  this._init();\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      domClasses(self.container).add('hidden');\n    } else {\n      domClasses(self.container).remove('hidden');\n    }\n  });\n}\n\nSetAnimationSpeed.prototype._init = function () {\n  var self = this;\n\n  this.container = domify('<div class=\"set-animation-speed hidden\">' + '<i title=\"Set Animation Speed\" class=\"fa fa-tachometer\" aria-hidden=\"true\"></i>' + '<div class=\"animation-speed-buttons\">' + '<div title=\"Slow\" id=\"animation-speed-1\" class=\"animation-speed-button\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></div>' + '<div title=\"Normal\" id=\"animation-speed-2\" class=\"animation-speed-button active\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></div>' + '<div title=\"Fast\" id=\"animation-speed-3\" class=\"animation-speed-button\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></div>' + '</div>' + '</div>');\n\n  var speed1 = domQuery('#animation-speed-1', this.container),\n      speed2 = domQuery('#animation-speed-2', this.container),\n      speed3 = domQuery('#animation-speed-3', this.container);\n\n  domEvent.bind(speed1, 'click', function () {\n    self.setActive(speed1);\n\n    self._animation.setAnimationSpeed(0.5);\n  });\n\n  domEvent.bind(speed2, 'click', function () {\n    self.setActive(speed2);\n\n    self._animation.setAnimationSpeed(1);\n  });\n\n  domEvent.bind(speed3, 'click', function () {\n    self.setActive(speed3);\n\n    self._animation.setAnimationSpeed(1.5);\n  });\n\n  this._canvas.getContainer().appendChild(this.container);\n};\n\nSetAnimationSpeed.prototype.setActive = function (element) {\n  domQuery.all('.animation-speed-button', this.container).forEach(function (button) {\n    domClasses(button).remove('active');\n  });\n\n  domClasses(element).add('active');\n};\n\nSetAnimationSpeed.$inject = ['canvas', 'animation', 'eventBus'];\n\nmodule.exports = SetAnimationSpeed;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/SetAnimationSpeed.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./SetAnimationSpeed */ \"./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/SetAnimationSpeed.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/ShowProcessInstance.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/ShowProcessInstance.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\"),\n    domQuery = __webpack_require__(/*! min-dom/lib/query */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js\"),\n    domClear = __webpack_require__(/*! min-dom/lib/clear */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/clear.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    PROCESS_INSTANCE_CREATED_EVENT = events.PROCESS_INSTANCE_CREATED_EVENT,\n    PROCESS_INSTANCE_FINISHED_EVENT = events.PROCESS_INSTANCE_FINISHED_EVENT,\n    PROCESS_INSTANCE_SHOWN_EVENT = events.PROCESS_INSTANCE_SHOWN_EVENT,\n    PROCESS_INSTANCE_HIDDEN_EVENT = events.PROCESS_INSTANCE_HIDDEN_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT;\n\nfunction isNull(value) {\n  return value === null;\n}\n\nfunction ShowProcessInstance(eventBus, canvas, processInstanceSettings, processInstances, graphicsFactory, elementRegistry) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._processInstanceSettings = processInstanceSettings;\n  this._processInstances = processInstances;\n  this._graphicsFactory = graphicsFactory;\n  this._elementRegistry = elementRegistry;\n\n  this.highlightedElement = null;\n\n  this._init();\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      domClasses(self.container).add('hidden');\n      domClear(self.container);\n\n      if (!isNull(self.highlightedElement)) {\n        self.removeHighlightFromProcess(self.highlightedElement.element);\n\n        self.highlightedElement = null;\n      }\n    } else {\n      domClasses(self.container).remove('hidden');\n    }\n  });\n\n  eventBus.on(PROCESS_INSTANCE_CREATED_EVENT, function (context) {\n    self.addInstance(context);\n  });\n\n  eventBus.on(PROCESS_INSTANCE_FINISHED_EVENT, function (context) {\n    self.removeInstance(context);\n  });\n\n  eventBus.on(PROCESS_INSTANCE_SHOWN_EVENT, function (context) {\n    self.setInstanceShown(context.processInstanceId);\n  });\n\n  eventBus.on(PROCESS_INSTANCE_HIDDEN_EVENT, function (context) {\n    self.setInstanceHidden(context.processInstanceId);\n  });\n\n  eventBus.on(RESET_SIMULATION_EVENT, function () {\n    self.removeAllInstances();\n  });\n}\n\nShowProcessInstance.prototype._init = function () {\n  this.container = domify('<div class=\"process-instances hidden\"></div>');\n\n  this._canvas.getContainer().appendChild(this.container);\n};\n\nShowProcessInstance.prototype.addInstance = function (context) {\n  var self = this;\n\n  var processInstanceId = context.processInstanceId,\n      parent = context.parent;\n\n  var element = domify('<div id=\"instance-' + processInstanceId + '\" class=\"process-instance\" title=\"View Process Instance ' + processInstanceId + '\">' + processInstanceId + '</div>');\n\n  domEvent.bind(element, 'click', function () {\n    var processInstancesWithParent = self._processInstances.getProcessInstances(parent);\n\n    processInstancesWithParent.forEach(function (processInstance) {\n      self._processInstanceSettings.hideProcessInstance(processInstance.processInstanceId);\n    });\n\n    self._processInstanceSettings.showProcessInstance(processInstanceId, parent);\n  });\n\n  domEvent.bind(element, 'mouseenter', function () {\n    self.highlightedElement = {\n      element: parent,\n      stroke: parent.businessObject.di.get('stroke'),\n      fill: parent.businessObject.di.get('fill')\n    };\n\n    self.addHighlightToProcess(parent);\n  });\n\n  domEvent.bind(element, 'mouseleave', function () {\n    self.removeHighlightFromProcess(parent);\n\n    self.highlightedElement = null;\n  });\n\n  this.container.appendChild(element);\n};\n\nShowProcessInstance.prototype.removeInstance = function (context) {\n  var processInstanceId = context.processInstanceId;\n\n  var element = domQuery('#instance-' + processInstanceId, this.container);\n\n  if (element) {\n    element.remove();\n  }\n};\n\nShowProcessInstance.prototype.removeAllInstances = function () {\n  this.container.innerHTML = '';\n};\n\nShowProcessInstance.prototype.setInstanceShown = function (processInstanceId) {\n  var element = domQuery('#instance-' + processInstanceId, this.container);\n\n  if (element) {\n    domClasses(element).add('active');\n  }\n};\n\nShowProcessInstance.prototype.setInstanceHidden = function (processInstanceId) {\n  var element = domQuery('#instance-' + processInstanceId, this.container);\n\n  if (element) {\n    domClasses(element).remove('active');\n  }\n};\n\nShowProcessInstance.prototype.addHighlightToProcess = function (element) {\n  this.setColor(element, '#52b415', '#ecfbe3');\n\n  if (!element.parent) {\n    domClasses(this._canvas.getContainer()).add('highlight');\n  }\n};\n\nShowProcessInstance.prototype.removeHighlightFromProcess = function (element) {\n  if (isNull(this.highlightedElement)) {\n    return;\n  }\n\n  this.setColor(element, this.highlightedElement.stroke, this.highlightedElement.fill);\n\n  if (!element.parent) {\n    domClasses(this._canvas.getContainer()).remove('highlight');\n  }\n};\n\nShowProcessInstance.prototype.setColor = function (element, stroke, fill) {\n  var businessObject = element.businessObject;\n\n  businessObject.di.set('stroke', stroke);\n  businessObject.di.set('fill', fill);\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  this._graphicsFactory.update('connection', element, gfx);\n};\n\nShowProcessInstance.$inject = ['eventBus', 'canvas', 'processInstanceSettings', 'processInstances', 'graphicsFactory', 'elementRegistry'];\n\nmodule.exports = ShowProcessInstance;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/ShowProcessInstance.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/index.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ShowProcessInstance */ \"./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/ShowProcessInstance.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/SimulationState.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/SimulationState.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elementHelper = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    getBusinessObject = elementHelper.getBusinessObject,\n    is = elementHelper.is,\n    isAncestor = elementHelper.isAncestor,\n    isTypedEvent = elementHelper.isTypedEvent;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT;\n\nvar VERY_LOW_PRIORITY = 250;\n\nfunction SimulationState(eventBus, animation, elementRegistry, log, elementNotifications, canvas, processInstances) {\n  // var self = this;\n\n  this._animation = animation;\n  this._elementRegistry = elementRegistry;\n  this._log = log;\n  this._elementNotifications = elementNotifications;\n  this._canvas = canvas;\n  this._processInstances = processInstances;\n\n  eventBus.on(CONSUME_TOKEN_EVENT, VERY_LOW_PRIORITY, function () {\n    // self.isDeadlock();\n  });\n}\n\n// TODO: refactor\nSimulationState.prototype.isDeadlock = function () {\n  var self = this;\n\n  var hasTokens = [];\n\n  this._elementRegistry.forEach(function (element) {\n    if (element.tokenCount) {\n      hasTokens.push(element);\n    }\n  });\n\n  var cannotContinue = [];\n  var hasTerminate = [];\n\n  hasTokens.forEach(function (element) {\n    var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n      return is(outgoing, 'bpmn:SequenceFlow');\n    });\n\n    // has tokens but no outgoing sequence flows\n    if (!outgoingSequenceFlows.length) {\n      cannotContinue.push(element);\n    }\n\n    // parallel gateway after exclusive gateway\n    if (is(element, 'bpmn:ParallelGateway')) {\n      var incomingSequenceFlows = element.incoming.filter(function (incoming) {\n        return is(incoming, 'bpmn:SequenceFlow');\n      });\n\n      if (incomingSequenceFlows.length > element.tokenCount) {\n        cannotContinue.push(element);\n      }\n    }\n\n    var visited = [];\n\n    // has terminate event\n    function checkIfHasTerminate(element) {\n      element.outgoing.forEach(function (outgoing) {\n        if (visited.indexOf(outgoing.target) !== -1) {\n          return;\n        }\n\n        visited.push(outgoing.target);\n\n        var isTerminate = isTypedEvent(getBusinessObject(outgoing.target), 'bpmn:TerminateEventDefinition');\n\n        if (isTerminate) {\n          hasTerminate.push(element);\n        }\n\n        checkIfHasTerminate(outgoing.target);\n      });\n    }\n\n    checkIfHasTerminate(element);\n  });\n\n  if (hasTokens.length && !hasTerminate.length && cannotContinue.length && !this._animation.animations.length) {\n    self._log.log('Deadlock', 'warning', 'fa-exclamation-triangle');\n\n    cannotContinue.forEach(function (element) {\n      self._elementNotifications.addElementNotification(element, {\n        type: 'warning',\n        icon: 'fa-exclamation-triangle',\n        text: 'Deadlock'\n      });\n    });\n  }\n};\n\n/**\r\n * Check if process instance finished.\r\n * Element is necessary to display element notification if finished.\r\n */\nSimulationState.prototype.isFinished = function (element, processInstanceId) {\n  var processInstance = this._processInstances.getProcessInstance(processInstanceId);\n  var parent = processInstance.parent;\n\n  var hasTokens = false;\n\n  if (!parent) {\n    parent = this._canvas.getRootElement();\n  }\n\n  parent.children.forEach(function (element) {\n    if (element.tokenCount && element.tokenCount[processInstanceId] && element.tokenCount[processInstanceId].length) {\n      hasTokens = true;\n    }\n  });\n\n  var hasAnimations = false;\n\n  this._animation.animations.forEach(function (animation) {\n    if (isAncestor(animation.element, parent) && animation.processInstanceId === processInstanceId) {\n      hasAnimations = true;\n    }\n  });\n\n  if (!hasTokens && !hasAnimations) {\n    if (is(parent, 'bpmn:SubProcess')) {\n      this._log.log('Subprocess ' + processInstanceId + ' finished', 'info', 'fa-check-circle');\n    } else {\n      this._log.log('Process ' + processInstanceId + ' finished', 'success', 'fa-check-circle');\n\n      this._elementNotifications.addElementNotification(element, {\n        type: 'success',\n        icon: 'fa-check-circle',\n        text: 'Finished'\n      });\n    }\n\n    return true;\n  }\n};\n\nSimulationState.$inject = ['eventBus', 'animation', 'elementRegistry', 'log', 'elementNotifications', 'canvas', 'processInstances'];\n\nmodule.exports = SimulationState;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/SimulationState.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./SimulationState */ \"./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/SimulationState.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/ToggleMode.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/ToggleMode.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\"),\n    domClasses = __webpack_require__(/*! min-dom/lib/classes */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js\"),\n    domEvent = __webpack_require__(/*! min-dom/lib/event */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js\"),\n    domQuery = __webpack_require__(/*! min-dom/lib/query */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js\");\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT;\n\nfunction ToggleMode(eventBus, canvas, selection, contextPad) {\n  var self = this;\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._selection = selection;\n  this._contextPad = contextPad;\n\n  this.simulationModeActive = false;\n\n  eventBus.on('import.done', function () {\n    self.canvasParent = self._canvas.getContainer().parentNode;\n    self.palette = domQuery('.djs-palette', self._canvas.getContainer());\n\n    self._init();\n  });\n}\n\nToggleMode.prototype._init = function () {\n  this.container = domify(`\n    <div class=\"toggle-mode\">\n      Token Simulation <span class=\"toggle\"><i class=\"fa fa-toggle-off\"></i></span>\n    </div>\n  `);\n\n  domEvent.bind(this.container, 'click', this.toggleMode.bind(this));\n\n  this._canvas.getContainer().appendChild(this.container);\n};\n\nToggleMode.prototype.toggleMode = function () {\n  if (this.simulationModeActive) {\n    this.container.innerHTML = 'Token Simulation <span class=\"toggle\"><i class=\"fa fa-toggle-off\"></i></span>';\n\n    domClasses(this.canvasParent).remove('simulation');\n    domClasses(this.palette).remove('hidden');\n\n    this._eventBus.fire(TOGGLE_MODE_EVENT, {\n      simulationModeActive: false\n    });\n\n    var elements = this._selection.get();\n\n    if (elements.length === 1) {\n      this._contextPad.open(elements[0]);\n    }\n  } else {\n    this.container.innerHTML = 'Token Simulation <span class=\"toggle\"><i class=\"fa fa-toggle-on\"></i></span>';\n\n    domClasses(this.canvasParent).add('simulation');\n    domClasses(this.palette).add('hidden');\n\n    this._eventBus.fire(TOGGLE_MODE_EVENT, {\n      simulationModeActive: true\n    });\n  }\n\n  this.simulationModeActive = !this.simulationModeActive;\n};\n\nToggleMode.$inject = ['eventBus', 'canvas', 'selection', 'contextPad'];\n\nmodule.exports = ToggleMode;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/ToggleMode.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./ToggleMode.js */ \"./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/ToggleMode.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-count/TokenCount.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-count/TokenCount.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar domify = __webpack_require__(/*! min-dom/lib/domify */ \"./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js\");\n\nvar elementHelper = __webpack_require__(/*! ../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    isAncestor = elementHelper.isAncestor;\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    TOGGLE_MODE_EVENT = events.TOGGLE_MODE_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    RESET_SIMULATION_EVENT = events.RESET_SIMULATION_EVENT,\n    TERMINATE_EVENT = events.TERMINATE_EVENT,\n    PROCESS_INSTANCE_SHOWN_EVENT = events.PROCESS_INSTANCE_SHOWN_EVENT;\n\nvar OFFSET_BOTTOM = 10,\n    OFFSET_LEFT = -15;\n\nvar LOW_PRIORITY = 500;\n\nfunction TokenCount(eventBus, overlays, elementRegistry, canvas, processInstances) {\n  var self = this;\n\n  this._overlays = overlays;\n  this._elementRegistry = elementRegistry;\n  this._canvas = canvas;\n  this._processInstances = processInstances;\n\n  this.overlayIds = {};\n\n  eventBus.on(TOGGLE_MODE_EVENT, function (context) {\n    var simulationModeActive = context.simulationModeActive;\n\n    if (!simulationModeActive) {\n      self.removeTokenCounts();\n    }\n  });\n\n  eventBus.on(RESET_SIMULATION_EVENT, function () {\n    self.removeTokenCounts();\n  });\n\n  eventBus.on(TERMINATE_EVENT, function (context) {\n    var element = context.element,\n        parent = element.parent;\n\n    self.removeTokenCounts(parent);\n  });\n\n  eventBus.on([GENERATE_TOKEN_EVENT, CONSUME_TOKEN_EVENT], LOW_PRIORITY, function (context) {\n    var element = context.element,\n        parent = element.parent;\n\n    self.removeTokenCounts(parent);\n    self.addTokenCounts(parent);\n  });\n\n  eventBus.on(PROCESS_INSTANCE_SHOWN_EVENT, function (context) {\n    var processInstanceId = context.processInstanceId;\n\n    var processInstance = processInstances.getProcessInstance(processInstanceId),\n        parent = processInstance.parent;\n\n    self.removeTokenCounts(parent);\n    self.addTokenCounts(parent);\n  });\n}\n\nTokenCount.prototype.addTokenCounts = function (parent) {\n  var self = this;\n\n  if (!parent) {\n    parent = this._canvas.getRootElement();\n  }\n\n  var shownProcessInstance = parent.shownProcessInstance;\n\n  // choose default\n  if (!shownProcessInstance) {\n    var processInstancesWithParent = this._processInstances.getProcessInstances(parent);\n\n    // no instance\n    if (!processInstancesWithParent.length) {\n      return;\n    }\n\n    shownProcessInstance = processInstancesWithParent[0].processInstanceId;\n  }\n\n  this._elementRegistry.forEach(function (element) {\n    if (isAncestor(parent, element)) {\n      self.addTokenCount(element, shownProcessInstance);\n    }\n  });\n};\n\nTokenCount.prototype.addTokenCount = function (element, shownProcessInstance) {\n  var tokenCount = element.tokenCount && element.tokenCount[shownProcessInstance];\n\n  if (!tokenCount) {\n    return;\n  }\n\n  var html = this.createTokenCount(tokenCount);\n\n  var position = { bottom: OFFSET_BOTTOM, left: OFFSET_LEFT };\n\n  var overlayId = this._overlays.add(element, 'token-count', {\n    position: position,\n    html: html,\n    show: {\n      minZoom: 0.5\n    }\n  });\n\n  this.overlayIds[element.id] = overlayId;\n};\n\nTokenCount.prototype.createTokenCount = function (tokenCount) {\n  return domify('<div class=\"token-count waiting\">' + tokenCount + '</div>');\n};\n\nTokenCount.prototype.removeTokenCounts = function (parent) {\n  var self = this;\n\n  if (!parent) {\n    parent = this._canvas.getRootElement();\n  }\n\n  this._elementRegistry.forEach(function (element) {\n    if (isAncestor(parent, element)) {\n      self.removeTokenCount(element);\n    }\n  });\n};\n\nTokenCount.prototype.removeTokenCount = function (element) {\n  var overlayId = this.overlayIds[element.id];\n\n  if (!overlayId) {\n    return;\n  }\n\n  this._overlays.remove(overlayId);\n\n  delete this.overlayIds[element.id];\n};\n\nTokenCount.$inject = ['eventBus', 'overlays', 'elementRegistry', 'canvas', 'processInstances'];\n\nmodule.exports = TokenCount;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-count/TokenCount.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-count/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-count/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./TokenCount */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-count/TokenCount.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-count/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/TokenSimulationBehavior.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/TokenSimulationBehavior.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EndEventHandler = __webpack_require__(/*! ./handler/EndEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EndEventHandler.js\"),\n    EventBasedGatewayHandler = __webpack_require__(/*! ./handler/EventBasedGatewayHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EventBasedGatewayHandler.js\"),\n    ExclusiveGatewayHandler = __webpack_require__(/*! ./handler/ExclusiveGatewayHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ExclusiveGatewayHandler.js\"),\n    IntermediateCatchEventHandler = __webpack_require__(/*! ./handler/IntermediateCatchEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateCatchEventHandler.js\"),\n    IntermediateThrowEventHandler = __webpack_require__(/*! ./handler/IntermediateThrowEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateThrowEventHandler.js\"),\n    ParallelGatewayHandler = __webpack_require__(/*! ./handler/ParallelGatewayHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ParallelGatewayHandler.js\"),\n    StartEventHandler = __webpack_require__(/*! ./handler/StartEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/StartEventHandler.js\"),\n    SubProcessHandler = __webpack_require__(/*! ./handler/SubProcessHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/SubProcessHandler.js\"),\n    BoundaryEventHandler = __webpack_require__(/*! ./handler/BoundaryEventHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/BoundaryEventHandler.js\"),\n    TaskHandler = __webpack_require__(/*! ./handler/TaskHandler */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/TaskHandler.js\");\n\nvar events = __webpack_require__(/*! ../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT;\n\nfunction TokenSimulationBehavior(eventBus, animation, injector) {\n  var self = this;\n\n  this._injector = injector;\n\n  this.handlers = {};\n\n  this.registerHandler('bpmn:EndEvent', EndEventHandler);\n  this.registerHandler('bpmn:EventBasedGateway', EventBasedGatewayHandler);\n  this.registerHandler('bpmn:ExclusiveGateway', ExclusiveGatewayHandler);\n  this.registerHandler('bpmn:IntermediateCatchEvent', IntermediateCatchEventHandler);\n  this.registerHandler('bpmn:IntermediateThrowEvent', IntermediateThrowEventHandler);\n  this.registerHandler('bpmn:ParallelGateway', ParallelGatewayHandler);\n  this.registerHandler('bpmn:StartEvent', StartEventHandler);\n  this.registerHandler('bpmn:SubProcess', SubProcessHandler);\n  this.registerHandler('bpmn:BoundaryEvent', BoundaryEventHandler);\n  this.registerHandler(['bpmn:BusinessRuleTask', 'bpmn:Task', 'bpmn:ManualTask', 'bpmn:ScriptTask', 'bpmn:ServiceTask', 'bpmn:UserTask'], TaskHandler);\n\n  // create animations on generate token\n  eventBus.on(GENERATE_TOKEN_EVENT, function (context) {\n    var element = context.element;\n\n    if (!self.handlers[element.type]) {\n      throw new Error('no handler for type ' + element.type);\n    }\n\n    self.handlers[element.type].generate(context);\n  });\n\n  // call handler on consume token\n  eventBus.on(CONSUME_TOKEN_EVENT, function (context) {\n    var element = context.element;\n\n    if (!self.handlers[element.type]) {\n      throw new Error('no handler for type ' + element.type);\n    }\n\n    self.handlers[element.type].consume(context);\n  });\n}\n\nTokenSimulationBehavior.prototype.registerHandler = function (types, handlerCls) {\n  var self = this;\n\n  var handler = this._injector.instantiate(handlerCls);\n\n  if (!Array.isArray(types)) {\n    types = [types];\n  }\n\n  types.forEach(function (type) {\n    self.handlers[type] = handler;\n  });\n};\n\nTokenSimulationBehavior.$inject = ['eventBus', 'animation', 'injector'];\n\nmodule.exports = TokenSimulationBehavior;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/TokenSimulationBehavior.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/BoundaryEventHandler.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/BoundaryEventHandler.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elementHelper = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    is = elementHelper.is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    UPDATE_ELEMENT_EVENT = events.UPDATE_ELEMENT_EVENT;\n\nfunction BoundaryEventHandler(animation, eventBus, elementRegistry) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nBoundaryEventHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  if (!element.tokenCount) {\n    element.tokenCount = {};\n  }\n\n  if (!element.tokenCount[processInstanceId]) {\n    element.tokenCount[processInstanceId] = 0;\n  }\n\n  element.tokenCount[processInstanceId]++;\n\n  this._eventBus.fire(UPDATE_ELEMENT_EVENT, {\n    element: element\n  });\n};\n\nBoundaryEventHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (connection) {\n    self._animation.createAnimation(connection, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: connection.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n};\n\nBoundaryEventHandler.$inject = ['animation', 'eventBus', 'elementRegistry'];\n\nmodule.exports = BoundaryEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/BoundaryEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EndEventHandler.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EndEventHandler.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elementHelper = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    getBusinessObject = elementHelper.getBusinessObject,\n    is = elementHelper.is,\n    isAncestor = elementHelper.isAncestor,\n    getDescendants = elementHelper.getDescendants,\n    isTypedEvent = elementHelper.isTypedEvent;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    TERMINATE_EVENT = events.TERMINATE_EVENT,\n    UPDATE_ELEMENTS_EVENT = events.UPDATE_ELEMENTS_EVENT;\n\nfunction EndEventHandler(animation, eventBus, log, simulationState, elementRegistry, processInstances) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._log = log;\n  this._simulationState = simulationState;\n  this._elementRegistry = elementRegistry;\n  this._processInstances = processInstances;\n}\n\nEndEventHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var isTerminate = isTypedEvent(getBusinessObject(element), 'bpmn:TerminateEventDefinition'),\n      isSubProcessChild = is(element.parent, 'bpmn:SubProcess');\n\n  if (isTerminate) {\n    this._eventBus.fire(TERMINATE_EVENT, context);\n\n    this._elementRegistry.forEach(function (e) {\n      if (isAncestor(element.parent, e) && e.tokenCount && e.tokenCount[processInstanceId]) {\n        delete e.tokenCount[processInstanceId];\n      }\n    });\n\n    // finish but do NOT remove\n    this._processInstances.finish(processInstanceId);\n  }\n\n  var isFinished = this._simulationState.isFinished(element, processInstanceId);\n\n  if (isFinished) {\n\n    // finish but do NOT remove\n    this._processInstances.finish(processInstanceId);\n  }\n\n  if ((isFinished || isTerminate) && isSubProcessChild) {\n    var processInstance = this._processInstances.getProcessInstance(processInstanceId);\n\n    // generate token on parent\n    this._eventBus.fire(GENERATE_TOKEN_EVENT, {\n      element: element.parent,\n      processInstanceId: processInstance.parentProcessInstanceId\n    });\n  }\n\n  this._eventBus.fire(UPDATE_ELEMENTS_EVENT, {\n    elements: getDescendants(this._elementRegistry.getAll(), element.parent)\n  });\n};\n\n/**\r\n * End event never generates.\r\n */\nEndEventHandler.prototype.generate = function (context) {};\n\nEndEventHandler.$inject = ['animation', 'eventBus', 'log', 'simulationState', 'elementRegistry', 'processInstances'];\n\nmodule.exports = EndEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EndEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EventBasedGatewayHandler.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EventBasedGatewayHandler.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    UPDATE_ELEMENTS_EVENT = events.UPDATE_ELEMENTS_EVENT;\n\nfunction ExclusiveGatewayHandler(eventBus, animation) {\n  this._eventBus = eventBus;\n  this._animation = animation;\n}\n\nExclusiveGatewayHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  if (!element.tokenCount) {\n    element.tokenCount = {};\n  }\n\n  if (!element.tokenCount[processInstanceId]) {\n    element.tokenCount[processInstanceId] = 0;\n  }\n\n  element.tokenCount[processInstanceId]++;\n\n  var outgoing = element.outgoing,\n      events = [];\n\n  outgoing.forEach(function (outgoing) {\n    var target = outgoing.target;\n\n    if (is(target, 'bpmn:IntermediateCatchEvent')) {\n      events.push(target);\n    }\n  });\n\n  this._eventBus.fire(UPDATE_ELEMENTS_EVENT, {\n    elements: events\n  });\n};\n\nExclusiveGatewayHandler.prototype.generate = function () {};\n\nExclusiveGatewayHandler.$inject = ['eventBus', 'animation'];\n\nmodule.exports = ExclusiveGatewayHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/EventBasedGatewayHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ExclusiveGatewayHandler.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ExclusiveGatewayHandler.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction ExclusiveGatewayHandler(eventBus, animation, elementRegistry) {\n  this._eventBus = eventBus;\n  this._animation = animation;\n  this._elementRegistry = elementRegistry;\n}\n\nExclusiveGatewayHandler.prototype.consume = function (context) {\n  var element = context.element;\n\n  if (!element.sequenceFlow) {\n    throw new Error('no sequence flow configured for element ' + element.id);\n  }\n\n  this._eventBus.fire(GENERATE_TOKEN_EVENT, context);\n};\n\nExclusiveGatewayHandler.prototype.generate = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  if (!element.sequenceFlow) {\n    throw new Error('no sequence flow configured for element ' + element.id);\n  }\n\n  var self = this;\n\n  // property could be changed during animation\n  // therefore element.sequenceFlow can't be used\n  var sequenceFlow = this._elementRegistry.get(element.sequenceFlow.id);\n\n  this._animation.createAnimation(sequenceFlow, processInstanceId, function () {\n    self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n      element: sequenceFlow.target,\n      processInstanceId: processInstanceId\n    });\n  });\n};\n\nExclusiveGatewayHandler.$inject = ['eventBus', 'animation', 'elementRegistry'];\n\nmodule.exports = ExclusiveGatewayHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ExclusiveGatewayHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateCatchEventHandler.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateCatchEventHandler.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elementHelper = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\"),\n    is = elementHelper.is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    UPDATE_ELEMENT_EVENT = events.UPDATE_ELEMENT_EVENT,\n    UPDATE_ELEMENTS_EVENT = events.UPDATE_ELEMENTS_EVENT;\n\nfunction IntermediateCatchEventHandler(animation, eventBus, elementRegistry) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nIntermediateCatchEventHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  if (!element.tokenCount) {\n    element.tokenCount = {};\n  }\n\n  if (!element.tokenCount[processInstanceId]) {\n    element.tokenCount[processInstanceId] = 0;\n  }\n\n  element.tokenCount[processInstanceId]++;\n\n  this._eventBus.fire(UPDATE_ELEMENT_EVENT, {\n    element: element\n  });\n};\n\nIntermediateCatchEventHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (connection) {\n    self._animation.createAnimation(connection, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: connection.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n\n  var parent = element.parent;\n\n  var events = this._elementRegistry.filter(function (element) {\n    return is(element, 'bpmn:IntermediateCatchEvent') && element.parent === parent;\n  });\n\n  this._eventBus.fire(UPDATE_ELEMENTS_EVENT, {\n    elements: events\n  });\n};\n\nIntermediateCatchEventHandler.$inject = ['animation', 'eventBus', 'elementRegistry'];\n\nmodule.exports = IntermediateCatchEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateCatchEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateThrowEventHandler.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateThrowEventHandler.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction IntermediateThrowEventHandler(animation, eventBus) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n}\n\nIntermediateThrowEventHandler.prototype.consume = function (element) {\n  this._eventBus.fire(GENERATE_TOKEN_EVENT, {\n    element: element\n  });\n};\n\nIntermediateThrowEventHandler.prototype.generate = function (element) {\n  var self = this;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (connection) {\n    self._animation.createAnimation(connection, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: connection.target\n      });\n    });\n  });\n};\n\nIntermediateThrowEventHandler.$inject = ['animation', 'eventBus'];\n\nmodule.exports = IntermediateThrowEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/IntermediateThrowEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ParallelGatewayHandler.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ParallelGatewayHandler.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction ParallelGatewayHandler(animation, eventBus) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n}\n\nParallelGatewayHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  if (!element.tokenCount) {\n    element.tokenCount = {};\n  }\n\n  if (!element.tokenCount[processInstanceId]) {\n    element.tokenCount[processInstanceId] = 0;\n  }\n\n  element.tokenCount[processInstanceId]++;\n\n  var incoming = element.incoming;\n\n  if (incoming.length === element.tokenCount[processInstanceId]) {\n    this._eventBus.fire(GENERATE_TOKEN_EVENT, context);\n\n    element.tokenCount[processInstanceId] = 0;\n  }\n};\n\nParallelGatewayHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (outgoing) {\n    self._animation.createAnimation(outgoing, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: outgoing.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n};\n\nParallelGatewayHandler.$inject = ['animation', 'eventBus'];\n\nmodule.exports = ParallelGatewayHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/ParallelGatewayHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/StartEventHandler.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/StartEventHandler.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    UPDATE_ELEMENTS_EVENT = events.UPDATE_ELEMENTS_EVENT;\n\nfunction StartEventHandler(animation, eventBus, elementRegistry, processInstances) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._processInstances = processInstances;\n}\n\n/**\r\n * Start event has no incoming sequence flows.\r\n * Therefore it can never consume.\r\n */\nStartEventHandler.prototype.consume = function () {};\n\n/**\r\n * Generate tokens for start event that was either\r\n * invoked by user or a parent process.\r\n *\r\n * @param {Object} context - The context.\r\n * @param {Object} context.element - The element.\r\n * @param {string} [context.parentProcessInstanceId] - Optional ID of parent process when invoked by parent process.\r\n *\r\n */\nStartEventHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      parentProcessInstanceId = context.parentProcessInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  // create new process instance\n  var parent = element.parent,\n      processInstanceId = this._processInstances.create(parent, parentProcessInstanceId);\n\n  outgoingSequenceFlows.forEach(function (connection) {\n    self._animation.createAnimation(connection, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: connection.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n\n  if (is(element.parent, 'bpmn:SubProcess')) {\n    return;\n  }\n\n  var startEvents = this._elementRegistry.filter(function (element) {\n    return is(element, 'bpmn:StartEvent');\n  });\n\n  this._eventBus.fire(UPDATE_ELEMENTS_EVENT, {\n    elements: startEvents\n  });\n};\n\nStartEventHandler.$inject = ['animation', 'eventBus', 'elementRegistry', 'processInstances'];\n\nmodule.exports = StartEventHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/StartEventHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/SubProcessHandler.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/SubProcessHandler.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT,\n    UPDATE_ELEMENT_EVENT = events.UPDATE_ELEMENT_EVENT;\n\nfunction SubProcessHandler(animation, eventBus, log) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n  this._log = log;\n}\n\nSubProcessHandler.prototype.consume = function (context) {\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var startEvent = element.children.filter(function (child) {\n    return is(child, 'bpmn:StartEvent');\n  })[0];\n\n  if (!startEvent) {\n    this._log.log('Skipping Subprocess', 'info', 'fa-angle-double-right');\n\n    // skip subprocess\n    this._eventBus.fire(GENERATE_TOKEN_EVENT, context);\n  } else {\n    this._log.log('Starting Subprocess', 'info', 'fa-sign-in');\n\n    // start subprocess with process instance ID as parent process instance ID\n    this._eventBus.fire(GENERATE_TOKEN_EVENT, {\n      element: startEvent,\n      parentProcessInstanceId: processInstanceId\n    });\n  }\n\n  this._eventBus.fire(UPDATE_ELEMENT_EVENT, {\n    element: element\n  });\n};\n\nSubProcessHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (outgoing) {\n    self._animation.createAnimation(outgoing, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: outgoing.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n\n  this._eventBus.fire(UPDATE_ELEMENT_EVENT, {\n    element: element\n  });\n};\n\nSubProcessHandler.$inject = ['animation', 'eventBus', 'log'];\n\nmodule.exports = SubProcessHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/SubProcessHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/TaskHandler.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/TaskHandler.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar is = __webpack_require__(/*! ../../../util/ElementHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js\").is;\n\nvar events = __webpack_require__(/*! ../../../util/EventHelper */ \"./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js\"),\n    CONSUME_TOKEN_EVENT = events.CONSUME_TOKEN_EVENT,\n    GENERATE_TOKEN_EVENT = events.GENERATE_TOKEN_EVENT;\n\nfunction TaskHandler(animation, eventBus) {\n  this._animation = animation;\n  this._eventBus = eventBus;\n}\n\nTaskHandler.prototype.consume = function (context) {\n\n  // fire to generate token on self\n  this._eventBus.fire(GENERATE_TOKEN_EVENT, context);\n};\n\nTaskHandler.prototype.generate = function (context) {\n  var self = this;\n\n  var element = context.element,\n      processInstanceId = context.processInstanceId;\n\n  var outgoingSequenceFlows = element.outgoing.filter(function (outgoing) {\n    return is(outgoing, 'bpmn:SequenceFlow');\n  });\n\n  outgoingSequenceFlows.forEach(function (outgoing) {\n    self._animation.createAnimation(outgoing, processInstanceId, function () {\n      self._eventBus.fire(CONSUME_TOKEN_EVENT, {\n        element: outgoing.target,\n        processInstanceId: processInstanceId\n      });\n    });\n  });\n};\n\nTaskHandler.$inject = ['animation', 'eventBus'];\n\nmodule.exports = TaskHandler;\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/handler/TaskHandler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./TokenSimulationBehavior */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/TokenSimulationBehavior.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/index.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/modeler.js":
/*!**************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/modeler.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  __init__: ['animation', 'contextPads', 'disableModeling', 'elementNotifications', 'elementSupport', 'exclusiveGatewaySettings', 'keyboardBindings', 'log', 'notifications', 'pauseSimulation', 'preserveElementColors', 'processInstanceIds', 'processInstanceSettings', 'processInstances', 'resetSimulation', 'setAnimationSpeed', 'showProcessInstance', 'simulationState', 'toggleMode', 'tokenCount', 'tokenSimulationBehavior', 'tokenSimulationEditorActions', 'tokenSimulationPalette'],\n  'animation': ['type', __webpack_require__(/*! ./animation/Animation */ \"./node_modules/bpmn-js-token-simulation/lib/animation/Animation.js\")],\n  'contextPads': ['type', __webpack_require__(/*! ./features/context-pads */ \"./node_modules/bpmn-js-token-simulation/lib/features/context-pads/index.js\")],\n  'disableModeling': ['type', __webpack_require__(/*! ./features/disable-modeling */ \"./node_modules/bpmn-js-token-simulation/lib/features/disable-modeling/index.js\")],\n  'elementNotifications': ['type', __webpack_require__(/*! ./features/element-notifications */ \"./node_modules/bpmn-js-token-simulation/lib/features/element-notifications/index.js\")],\n  'elementSupport': ['type', __webpack_require__(/*! ./features/element-support */ \"./node_modules/bpmn-js-token-simulation/lib/features/element-support/index.js\")],\n  'exclusiveGatewaySettings': ['type', __webpack_require__(/*! ./features/exclusive-gateway-settings */ \"./node_modules/bpmn-js-token-simulation/lib/features/exclusive-gateway-settings/index.js\")],\n  'keyboardBindings': ['type', __webpack_require__(/*! ./features/keyboard-bindings */ \"./node_modules/bpmn-js-token-simulation/lib/features/keyboard-bindings/index.js\")],\n  'log': ['type', __webpack_require__(/*! ./features/log */ \"./node_modules/bpmn-js-token-simulation/lib/features/log/index.js\")],\n  'notifications': ['type', __webpack_require__(/*! ./features/notifications */ \"./node_modules/bpmn-js-token-simulation/lib/features/notifications/index.js\")],\n  'pauseSimulation': ['type', __webpack_require__(/*! ./features/pause-simulation */ \"./node_modules/bpmn-js-token-simulation/lib/features/pause-simulation/index.js\")],\n  'preserveElementColors': ['type', __webpack_require__(/*! ./features/preserve-element-colors */ \"./node_modules/bpmn-js-token-simulation/lib/features/preserve-element-colors/index.js\")],\n  'processInstanceIds': ['type', __webpack_require__(/*! ./features/process-instance-ids */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instance-ids/index.js\")],\n  'processInstanceSettings': ['type', __webpack_require__(/*! ./features/process-instance-settings */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instance-settings/index.js\")],\n  'processInstances': ['type', __webpack_require__(/*! ./features/process-instances */ \"./node_modules/bpmn-js-token-simulation/lib/features/process-instances/index.js\")],\n  'resetSimulation': ['type', __webpack_require__(/*! ./features/reset-simulation */ \"./node_modules/bpmn-js-token-simulation/lib/features/reset-simulation/index.js\")],\n  'setAnimationSpeed': ['type', __webpack_require__(/*! ./features/set-animation-speed */ \"./node_modules/bpmn-js-token-simulation/lib/features/set-animation-speed/index.js\")],\n  'showProcessInstance': ['type', __webpack_require__(/*! ./features/show-process-instance */ \"./node_modules/bpmn-js-token-simulation/lib/features/show-process-instance/index.js\")],\n  'simulationState': ['type', __webpack_require__(/*! ./features/simulation-state */ \"./node_modules/bpmn-js-token-simulation/lib/features/simulation-state/index.js\")],\n  'toggleMode': ['type', __webpack_require__(/*! ./features/toggle-mode/modeler */ \"./node_modules/bpmn-js-token-simulation/lib/features/toggle-mode/modeler/index.js\")],\n  'tokenCount': ['type', __webpack_require__(/*! ./features/token-count */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-count/index.js\")],\n  'tokenSimulationBehavior': ['type', __webpack_require__(/*! ./features/token-simulation-behavior */ \"./node_modules/bpmn-js-token-simulation/lib/features/token-simulation-behavior/index.js\")],\n  'tokenSimulationEditorActions': ['type', __webpack_require__(/*! ./features/editor-actions */ \"./node_modules/bpmn-js-token-simulation/lib/features/editor-actions/index.js\")],\n  'tokenSimulationPalette': ['type', __webpack_require__(/*! ./features/palette */ \"./node_modules/bpmn-js-token-simulation/lib/features/palette/index.js\")]\n};\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/modeler.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js":
/*!*************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar every = __webpack_require__(/*! min-dash */ \"./node_modules/min-dash/dist/index.esm.js\").every,\n    some = __webpack_require__(/*! min-dash */ \"./node_modules/min-dash/dist/index.esm.js\").some;\n\nmodule.exports.is = function (element, types) {\n  if (element.type === 'label') {\n    return;\n  }\n\n  if (!Array.isArray(types)) {\n    types = [types];\n  }\n\n  var isType = false;\n\n  types.forEach(function (type) {\n    if (type === element.type) {\n      isType = true;\n    }\n  });\n\n  return isType;\n};\n\nmodule.exports.isTypedEvent = function (event, eventDefinitionType, filter) {\n\n  function matches(definition, filter) {\n    return every(filter, function (val, key) {\n\n      // we want a == conversion here, to be able to catch\n      // undefined == false and friends\n      return definition[key] == val;\n    });\n  }\n\n  return some(event.eventDefinitions, function (definition) {\n    return definition.$type === eventDefinitionType && matches(event, filter);\n  });\n};\n\nmodule.exports.getBusinessObject = function (element) {\n  return element && element.businessObject || element;\n};\n\nfunction isAncestor(ancestor, descendant) {\n  var childParent = descendant.parent;\n\n  while (childParent) {\n    if (childParent === ancestor) {\n      return true;\n    }\n\n    childParent = childParent.parent;\n  }\n\n  return false;\n}\n\nmodule.exports.isAncestor = isAncestor;\n\nmodule.exports.getDescendants = function (elements, ancestor) {\n  return elements.filter(function (element) {\n    return isAncestor(ancestor, element);\n  });\n};\n\nmodule.exports.supportedElements = ['bpmn:Association', 'bpmn:BusinessRuleTask', 'bpmn:DataInputAssociation', 'bpmn:DataOutputAssociation', 'bpmn:DataObjectReference', 'bpmn:DataStoreReference', 'bpmn:EndEvent', 'bpmn:EventBasedGateway', 'bpmn:ExclusiveGateway', 'bpmn:IntermediateCatchEvent', 'bpmn:ManualTask', 'bpmn:ParallelGateway', 'bpmn:Process', 'bpmn:ScriptTask', 'bpmn:SequenceFlow', 'bpmn:ServiceTask', 'bpmn:StartEvent', 'bpmn:SubProcess', 'bpmn:Task', 'bpmn:TextAnnotation', 'bpmn:UserTask', 'bpmn:BoundaryEvent'];\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/util/ElementHelper.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var prefix = 'tokenSimulation';\n\nmodule.exports = {\n  TOGGLE_MODE_EVENT: prefix + '.toggleMode',\n  GENERATE_TOKEN_EVENT: prefix + '.generateToken',\n  CONSUME_TOKEN_EVENT: prefix + '.consumeToken',\n  PLAY_SIMULATION_EVENT: prefix + '.playSimulation',\n  PAUSE_SIMULATION_EVENT: prefix + '.pauseSimulation',\n  RESET_SIMULATION_EVENT: prefix + '.resetSimulation',\n  TERMINATE_EVENT: prefix + '.terminateEvent',\n  UPDATE_ELEMENTS_EVENT: prefix + '.updateElements',\n  UPDATE_ELEMENT_EVENT: prefix + '.updateElement',\n  PROCESS_INSTANCE_CREATED_EVENT: prefix + '.processInstanceCreated',\n  PROCESS_INSTANCE_FINISHED_EVENT: prefix + '.processInstanceFinished',\n  PROCESS_INSTANCE_SHOWN_EVENT: prefix + '.processInstanceShown',\n  PROCESS_INSTANCE_HIDDEN_EVENT: prefix + '.processInstanceHidden',\n  ANIMATION_CREATED_EVENT: prefix + '.animationCreated'\n};\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/util/EventHelper.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/lib/util/GeometryUtil.js":
/*!************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/lib/util/GeometryUtil.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports.getMid = function (element) {\n  var bbox = element.bbox();\n\n  return {\n    x: bbox.x + bbox.width / 2,\n    y: bbox.y + bbox.height / 2\n  };\n};\n\nmodule.exports.distance = function (a, b) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n};\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/lib/util/GeometryUtil.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! component-classes */ \"./node_modules/component-classes/index.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/classes.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/clear.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/clear.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n};\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/clear.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! domify */ \"./node_modules/domify/index.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/domify.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! component-event */ \"./node_modules/component-event/index.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/event.js?");

/***/ }),

/***/ "./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! component-query */ \"./node_modules/component-query/index.js\");\n\n//# sourceURL=webpack:///./node_modules/bpmn-js-token-simulation/node_modules/min-dom/lib/query.js?");

/***/ }),

/***/ "./node_modules/camunda-modeler-plugin-helpers/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/camunda-modeler-plugin-helpers/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Validate and register a client plugin.\r\n *\r\n * @param {Object} plugin\r\n * @param {String} type\r\n */\nfunction registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\r\n * Validate and register a bpmn-js plugin.\r\n *\r\n * Example use:\r\n *\r\n *    var registerBpmnJSPlugin = require('./camundaModelerPluginHelpers').registerBpmnJSPlugin;\r\n *    var module = require('./index');\r\n *\r\n *    registerBpmnJSPlugin(module);\r\n *\r\n * @param {Object} plugin\r\n */\nfunction registerBpmnJSPlugin(plugin) {\n  registerClientPlugin(plugin, 'bpmn.modeler.additionalModules');\n}\n\nmodule.exports.registerBpmnJSPlugin = registerBpmnJSPlugin;\n\n/**\r\n * Validate and register a bpmn-moddle extension plugin.\r\n *\r\n * Example use:\r\n *\r\n *    var registerBpmnJSModdleExtension = require('./camundaModelerPluginHelpers').registerBpmnJSModdleExtension;\r\n *    var module = require('./index');\r\n *\r\n *    registerBpmnJSModdleExtension(module);\r\n *\r\n * @param {Object} plugin\r\n */\nfunction registerBpmnJSModdleExtension(plugin) {\n  registerClientPlugin(plugin, 'bpmn.modeler.moddleExtension');\n}\n\nmodule.exports.registerBpmnJSModdleExtension = registerBpmnJSModdleExtension;\n\n//# sourceURL=webpack:///./node_modules/camunda-modeler-plugin-helpers/index.js?");

/***/ }),

/***/ "./node_modules/component-classes/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-classes/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\ntry {\n  var index = __webpack_require__(/*! indexof */ \"./node_modules/component-indexof/index.js\");\n} catch (err) {\n  var index = __webpack_require__(/*! component-indexof */ \"./node_modules/component-indexof/index.js\");\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function (el) {\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name);\n};\n\n//# sourceURL=webpack:///./node_modules/component-classes/index.js?");

/***/ }),

/***/ "./node_modules/component-event/index.js":
/*!***********************************************!*\
  !*** ./node_modules/component-event/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function (el, type, fn, capture) {\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function (el, type, fn, capture) {\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n//# sourceURL=webpack:///./node_modules/component-event/index.js?");

/***/ }),

/***/ "./node_modules/component-indexof/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-indexof/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (arr, obj) {\n  if (arr.indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n//# sourceURL=webpack:///./node_modules/component-indexof/index.js?");

/***/ }),

/***/ "./node_modules/component-query/index.js":
/*!***********************************************!*\
  !*** ./node_modules/component-query/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function one(selector, el) {\n  return el.querySelector(selector);\n}\n\nexports = module.exports = function (selector, el) {\n  el = el || document;\n  return one(selector, el);\n};\n\nexports.all = function (selector, el) {\n  el = el || document;\n  return el.querySelectorAll(selector);\n};\n\nexports.engine = function (obj) {\n  if (!obj.one) throw new Error('.one callback required');\n  if (!obj.all) throw new Error('.all callback required');\n  one = obj.one;\n  exports.all = obj.all;\n  return exports;\n};\n\n//# sourceURL=webpack:///./node_modules/component-query/index.js?");

/***/ }),

/***/ "./node_modules/domify/index.js":
/*!**************************************!*\
  !*** ./node_modules/domify/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline = map.ellipse = map.polygon = map.circle = map.text = map.line = map.path = map.rect = map.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">', '</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n//# sourceURL=webpack:///./node_modules/domify/index.js?");

/***/ }),

/***/ "./node_modules/min-dash/dist/index.esm.js":
/*!*************************************************!*\
  !*** ./node_modules/min-dash/dist/index.esm.js ***!
  \*************************************************/
/*! exports provided: flatten, find, findIndex, filter, forEach, without, reduce, every, some, map, keys, size, values, groupBy, uniqueBy, unionBy, sortBy, matchPattern, debounce, bind, isUndefined, isDefined, isNil, isArray, isObject, isNumber, isFunction, isString, ensureArray, has, assign, pick, omit, merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findIndex\", function() { return findIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"without\", function() { return without; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reduce\", function() { return reduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"every\", function() { return every; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"some\", function() { return some; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return keys; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"size\", function() { return size; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupBy\", function() { return groupBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uniqueBy\", function() { return uniqueBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unionBy\", function() { return unionBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sortBy\", function() { return sortBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matchPattern\", function() { return matchPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debounce\", function() { return debounce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bind\", function() { return bind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNil\", function() { return isNil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ensureArray\", function() { return ensureArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assign\", function() { return assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pick\", function() { return pick; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"omit\", function() { return omit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge; });\n/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\n\nfunction isDefined(obj) {\n  return obj !== undefined;\n}\n\nfunction isNil(obj) {\n  return obj == null;\n}\n\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\n\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\n\nfunction isNumber(obj) {\n  return nativeToString.call(obj) === '[object Number]';\n}\n\nfunction isFunction(obj) {\n  return nativeToString.call(obj) === '[object Function]';\n}\n\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n\n/**\n * Ensure collection is an array.\n *\n * @param {Object} obj\n */\nfunction ensureArray(obj) {\n\n  if (isArray(obj)) {\n    return;\n  }\n\n  throw new Error('must supply array');\n}\n\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function|Object} matcher\n *\n * @return {Object}\n */\nfunction find(collection, matcher) {\n\n  matcher = toMatcher(matcher);\n\n  var match;\n\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      match = val;\n\n      return false;\n    }\n  });\n\n  return match;\n}\n\n/**\n * Find element index in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Object}\n */\nfunction findIndex(collection, matcher) {\n\n  matcher = toMatcher(matcher);\n\n  var idx = isArray(collection) ? -1 : undefined;\n\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      idx = key;\n\n      return false;\n    }\n  });\n\n  return idx;\n}\n\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Array} result\n */\nfunction filter(collection, matcher) {\n\n  var result = [];\n\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      result.push(val);\n    }\n  });\n\n  return result;\n}\n\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\nfunction forEach(collection, iterator) {\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n\n    if (has(collection, key)) {\n      var val = collection[key];\n\n      var result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return;\n      }\n    }\n  }\n}\n\n/**\n * Return collection without element.\n *\n * @param  {Array} arr\n * @param  {Function} matcher\n *\n * @return {Array}\n */\nfunction without(arr, matcher) {\n\n  if (isUndefined(arr)) {\n    return [];\n  }\n\n  ensureArray(arr);\n\n  matcher = toMatcher(matcher);\n\n  return arr.filter(function (el, idx) {\n    return !matcher(el, idx);\n  });\n}\n\n/**\n * Reduce collection, returning a single result.\n *\n * @param  {Object|Array} collection\n * @param  {Function} iterator\n * @param  {Any} result\n *\n * @return {Any} result returned from last iterator\n */\nfunction reduce(collection, iterator, result) {\n\n  forEach(collection, function (value, idx) {\n    result = iterator(result, value, idx);\n  });\n\n  return result;\n}\n\n/**\n * Return true if every element in the collection\n * matches the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\nfunction every(collection, matcher) {\n\n  return reduce(collection, function (matches, val, key) {\n    return matches && matcher(val, key);\n  }, true);\n}\n\n/**\n * Return true if some elements in the collection\n * match the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\nfunction some(collection, matcher) {\n\n  return !!find(collection, matcher);\n}\n\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\nfunction map(collection, fn) {\n\n  var result = [];\n\n  forEach(collection, function (val, key) {\n    result.push(fn(val, key));\n  });\n\n  return result;\n}\n\n/**\n * Get the collections keys.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\nfunction keys(collection) {\n  return collection && Object.keys(collection) || [];\n}\n\n/**\n * Shorthand for `keys(o).length`.\n *\n * @param  {Object|Array} collection\n *\n * @return {Number}\n */\nfunction size(collection) {\n  return keys(collection).length;\n}\n\n/**\n * Get the values in the collection.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\nfunction values(collection) {\n  return map(collection, function (val) {\n    return val;\n  });\n}\n\n/**\n * Group collection members by attribute.\n *\n * @param  {Object|Array} collection\n * @param  {Function} extractor\n *\n * @return {Object} map with { attrValue => [ a, b, c ] }\n */\nfunction groupBy(collection, extractor) {\n  var grouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  extractor = toExtractor(extractor);\n\n  forEach(collection, function (val) {\n    var discriminator = extractor(val) || '_';\n\n    var group = grouped[discriminator];\n\n    if (!group) {\n      group = grouped[discriminator] = [];\n    }\n\n    group.push(val);\n  });\n\n  return grouped;\n}\n\nfunction uniqueBy(extractor) {\n\n  extractor = toExtractor(extractor);\n\n  var grouped = {};\n\n  for (var _len = arguments.length, collections = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    collections[_key - 1] = arguments[_key];\n  }\n\n  forEach(collections, function (c) {\n    return groupBy(c, extractor, grouped);\n  });\n\n  var result = map(grouped, function (val, key) {\n    return val[0];\n  });\n\n  return result;\n}\n\nvar unionBy = uniqueBy;\n\n/**\n * Sort collection by criteria.\n *\n * @param  {Object|Array} collection\n * @param  {String|Function} extractor\n *\n * @return {Array}\n */\nfunction sortBy(collection, extractor) {\n\n  extractor = toExtractor(extractor);\n\n  var sorted = [];\n\n  forEach(collection, function (value, key) {\n    var disc = extractor(value, key);\n\n    var entry = {\n      d: disc,\n      v: value\n    };\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var d = sorted[idx].d;\n\n      if (disc < d) {\n        sorted.splice(idx, 0, entry);\n        return;\n      }\n    }\n\n    // not inserted, append (!)\n    sorted.push(entry);\n  });\n\n  return map(sorted, function (e) {\n    return e.v;\n  });\n}\n\n/**\n * Create an object pattern matcher.\n *\n * @example\n *\n * const matcher = matchPattern({ id: 1 });\n *\n * var element = find(elements, matcher);\n *\n * @param  {Object} pattern\n *\n * @return {Function} matcherFn\n */\nfunction matchPattern(pattern) {\n\n  return function (el) {\n\n    return every(pattern, function (val, key) {\n      return el[key] === val;\n    });\n  };\n}\n\nfunction toExtractor(extractor) {\n  return isFunction(extractor) ? extractor : function (e) {\n    return e[extractor];\n  };\n}\n\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : function (e) {\n    return e === matcher;\n  };\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Debounce fn, calling it only once if\n * the given time elapsed between calls.\n *\n * @param  {Function} fn\n * @param  {Number} timeout\n *\n * @return {Function} debounced function\n */\nfunction debounce(fn, timeout) {\n\n  var timer;\n\n  return function () {\n\n    var args = slice.call(arguments);\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(function () {\n      fn.apply(undefined, _toConsumableArray(args));\n    }, timeout);\n  };\n}\n\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\nfunction assign(target) {\n  for (var _len = arguments.length, others = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  return _extends.apply(undefined, [target].concat(others));\n}\n\n/**\n * Pick given properties from the target object.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\nfunction pick(target, properties) {\n\n  var result = {};\n\n  var obj = Object(target);\n\n  forEach(properties, function (prop) {\n\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n\n  return result;\n}\n\n/**\n * Pick all target properties, excluding the given ones.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\nfunction omit(target, properties) {\n\n  var result = {};\n\n  var obj = Object(target);\n\n  forEach(obj, function (prop, key) {\n\n    if (properties.indexOf(key) === -1) {\n      result[key] = prop;\n    }\n  });\n\n  return result;\n}\n\n/**\n * Recursively merge `...sources` into given target.\n *\n * Does support merging objects; does not support merging arrays.\n *\n * @param {Object} target\n * @param {...Object} sources\n *\n * @return {Object} the target\n */\nfunction merge(target) {\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  forEach(sources, function (source) {\n\n    // skip non-obj sources, i.e. null\n    if (!source || !isObject(source)) {\n      return;\n    }\n\n    forEach(source, function (sourceVal, key) {\n\n      var targetVal = target[key];\n\n      if (isObject(sourceVal)) {\n\n        if (!isObject(targetVal)) {\n          // override target[key] with object\n          targetVal = {};\n        }\n\n        target[key] = merge(targetVal, sourceVal);\n      } else {\n        target[key] = sourceVal;\n      }\n    });\n  });\n\n  return target;\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/min-dash/dist/index.esm.js?");

/***/ }),

/***/ "./node_modules/min-dom/dist/index.esm.js":
/*!************************************************!*\
  !*** ./node_modules/min-dom/dist/index.esm.js ***!
  \************************************************/
/*! exports provided: attr, classes, clear, closest, delegate, domify, event, matches, query, queryAll, remove */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"attr\", function() { return attr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"classes\", function() { return classes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clear\", function() { return clear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closest\", function() { return closest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delegate\", function() { return delegateEvents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"domify\", function() { return domify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"event\", function() { return componentEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matches\", function() { return matchesSelector$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return query; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return all; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\nfunction attr(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n}\n\nvar indexOf = [].indexOf;\n\nvar indexof = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/**\n * Taken from https://github.com/component/classes\n *\n * Without the component bits.\n */\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~indexof(this.array(), name);\n};\n\n/**\n * Remove all children from the given element.\n */\nfunction clear(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n}\n\n/**\r\n * Element prototype.\r\n */\n\nvar proto = Element.prototype;\n\n/**\r\n * Vendor function.\r\n */\n\nvar vendor = proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n\n/**\r\n * Expose `match()`.\r\n */\n\nvar matchesSelector = match;\n\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\nvar closest = function (element, selector, checkYoSelf) {\n  var parent = checkYoSelf ? element : element.parentNode;\n\n  while (parent && parent !== document) {\n    if (matchesSelector(parent, selector)) return parent;\n    parent = parent.parentNode;\n  }\n};\n\nvar bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar bind_1 = function (el, type, fn, capture) {\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar unbind_1 = function (el, type, fn, capture) {\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\nvar componentEvent = {\n  bind: bind_1,\n  unbind: unbind_1\n};\n\n/**\n * Module dependencies.\n */\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\n// Some events don't bubble, so we want to bind to the capture phase instead\n// when delegating.\nvar forceCaptureEvents = ['focus', 'blur'];\n\nvar bind$1 = function (el, selector, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\n\n  return componentEvent.bind(el, type, function (e) {\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nvar unbind$1 = function (el, type, fn, capture) {\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\n\n  componentEvent.unbind(el, type, fn, capture);\n};\n\nvar delegateEvents = {\n  bind: bind$1,\n  unbind: unbind$1\n};\n\n/**\n * Expose `parse`.\n */\n\nvar domify = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline = map.ellipse = map.polygon = map.circle = map.text = map.line = map.path = map.rect = map.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">', '</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\nvar proto$1 = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor$1 = proto$1.matches || proto$1.matchesSelector || proto$1.webkitMatchesSelector || proto$1.mozMatchesSelector || proto$1.msMatchesSelector || proto$1.oMatchesSelector;\n\nvar matchesSelector$1 = match$1;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match$1(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor$1) return vendor$1.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\nfunction query(selector, el) {\n  el = el || document;\n\n  return el.querySelector(selector);\n}\n\nfunction all(selector, el) {\n  el = el || document;\n\n  return el.querySelectorAll(selector);\n}\n\nfunction remove(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/min-dom/dist/index.esm.js?");

/***/ }),

/***/ "./node_modules/svg.js/dist/svg.js":
/*!*****************************************!*\
  !*** ./node_modules/svg.js/dist/svg.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/;\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return factory(root, root.document);\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(typeof window !== \"undefined\" ? window : this, function (window, document) {\n\n  // Find global reference - uses 'this' by default when available,\n  // falls back to 'window' otherwise (for bundlers like Webpack)\n  var globalRef = typeof this !== \"undefined\" ? this : window;\n\n  // The main wrapping element\n  var SVG = globalRef.SVG = function (element) {\n    if (SVG.supported) {\n      element = new SVG.Doc(element);\n\n      if (!SVG.parser.draw) SVG.prepare();\n\n      return element;\n    }\n  };\n\n  // Default namespaces\n  SVG.ns = 'http://www.w3.org/2000/svg';\n  SVG.xmlns = 'http://www.w3.org/2000/xmlns/';\n  SVG.xlink = 'http://www.w3.org/1999/xlink';\n  SVG.svgjs = 'http://svgjs.com/svgjs';\n\n  // Svg support test\n  SVG.supported = function () {\n    return !!document.createElementNS && !!document.createElementNS(SVG.ns, 'svg').createSVGRect;\n  }();\n\n  // Don't bother to continue if SVG is not supported\n  if (!SVG.supported) return false;\n\n  // Element id sequence\n  SVG.did = 1000;\n\n  // Get next named element id\n  SVG.eid = function (name) {\n    return 'Svgjs' + capitalize(name) + SVG.did++;\n  };\n\n  // Method for element creation\n  SVG.create = function (name) {\n    // create element\n    var element = document.createElementNS(this.ns, name);\n\n    // apply unique id\n    element.setAttribute('id', this.eid(name));\n\n    return element;\n  };\n\n  // Method for extending objects\n  SVG.extend = function () {\n    var modules, methods, key, i;\n\n    // Get list of modules\n    modules = [].slice.call(arguments);\n\n    // Get object with extensions\n    methods = modules.pop();\n\n    for (i = modules.length - 1; i >= 0; i--) if (modules[i]) for (key in methods) modules[i].prototype[key] = methods[key];\n\n    // Make sure SVG.Set inherits any newly added methods\n    if (SVG.Set && SVG.Set.inherit) SVG.Set.inherit();\n  };\n\n  // Invent new element\n  SVG.invent = function (config) {\n    // Create element initializer\n    var initializer = typeof config.create == 'function' ? config.create : function () {\n      this.constructor.call(this, SVG.create(config.create));\n    };\n\n    // Inherit prototype\n    if (config.inherit) initializer.prototype = new config.inherit();\n\n    // Extend with methods\n    if (config.extend) SVG.extend(initializer, config.extend);\n\n    // Attach construct method to parent\n    if (config.construct) SVG.extend(config.parent || SVG.Container, config.construct);\n\n    return initializer;\n  };\n\n  // Adopt existing svg elements\n  SVG.adopt = function (node) {\n    // check for presence of node\n    if (!node) return null;\n\n    // make sure a node isn't already adopted\n    if (node.instance) return node.instance;\n\n    // initialize variables\n    var element;\n\n    // adopt with element-specific settings\n    if (node.nodeName == 'svg') element = node.parentNode instanceof window.SVGElement ? new SVG.Nested() : new SVG.Doc();else if (node.nodeName == 'linearGradient') element = new SVG.Gradient('linear');else if (node.nodeName == 'radialGradient') element = new SVG.Gradient('radial');else if (SVG[capitalize(node.nodeName)]) element = new SVG[capitalize(node.nodeName)]();else element = new SVG.Element(node);\n\n    // ensure references\n    element.type = node.nodeName;\n    element.node = node;\n    node.instance = element;\n\n    // SVG.Class specific preparations\n    if (element instanceof SVG.Doc) element.namespace().defs();\n\n    // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n    element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {});\n\n    return element;\n  };\n\n  // Initialize parsing element\n  SVG.prepare = function () {\n    // Select document body and create invisible svg element\n    var body = document.getElementsByTagName('body')[0],\n        draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0);\n\n    // Create parser object\n    SVG.parser = {\n      body: body || document.documentElement,\n      draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node,\n      poly: draw.polyline().node,\n      path: draw.path().node,\n      native: SVG.create('svg')\n    };\n  };\n\n  SVG.parser = {\n    native: SVG.create('svg')\n  };\n\n  document.addEventListener('DOMContentLoaded', function () {\n    if (!SVG.parser.draw) SVG.prepare();\n  }, false);\n\n  // Storage for regular expressions\n  SVG.regex = {\n    // Parse unit value\n    numberAndUnit: /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n    // Parse hex value\n    , hex: /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n    // Parse rgb value\n    , rgb: /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n    // Parse reference id\n    , reference: /#([a-z0-9\\-_]+)/i\n\n    // splits a transformation chain\n    , transforms: /\\)\\s*,?\\s*/\n\n    // Whitespace\n    , whitespace: /\\s/g\n\n    // Test hex value\n    , isHex: /^#[a-f0-9]{3,6}$/i\n\n    // Test rgb value\n    , isRgb: /^rgb\\(/\n\n    // Test css declaration\n    , isCss: /[^:]+:[^;]+;?/\n\n    // Test for blank string\n    , isBlank: /^(\\s+)?$/\n\n    // Test for numeric string\n    , isNumber: /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n    // Test for percent value\n    , isPercent: /^-?[\\d\\.]+%$/\n\n    // Test for image url\n    , isImage: /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n    // split at whitespace and comma\n    , delimiter: /[\\s,]+/\n\n    // The following regex are used to parse the d attribute of a path\n\n    // Matches all hyphens which are not after an exponent\n    , hyphen: /([^e])\\-/gi\n\n    // Replaces and tests for all path letters\n    , pathLetters: /[MLHVCSQTAZ]/gi\n\n    // yes we need this one, too\n    , isPathLetter: /[MLHVCSQTAZ]/i\n\n    // matches 0.154.23.45\n    , numbersWithDots: /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\n\n    // matches .\n    , dots: /\\./g\n  };\n\n  SVG.utils = {\n    // Map function\n    map: function (array, block) {\n      var i,\n          il = array.length,\n          result = [];\n\n      for (i = 0; i < il; i++) result.push(block(array[i]));\n\n      return result;\n    }\n\n    // Filter function\n    , filter: function (array, block) {\n      var i,\n          il = array.length,\n          result = [];\n\n      for (i = 0; i < il; i++) if (block(array[i])) result.push(array[i]);\n\n      return result;\n    }\n\n    // Degrees to radians\n    , radians: function (d) {\n      return d % 360 * Math.PI / 180;\n    }\n\n    // Radians to degrees\n    , degrees: function (r) {\n      return r * 180 / Math.PI % 360;\n    },\n\n    filterSVGElements: function (nodes) {\n      return this.filter(nodes, function (el) {\n        return el instanceof window.SVGElement;\n      });\n    }\n\n  };\n\n  SVG.defaults = {\n    // Default attribute values\n    attrs: {\n      // fill and stroke\n      'fill-opacity': 1,\n      'stroke-opacity': 1,\n      'stroke-width': 0,\n      'stroke-linejoin': 'miter',\n      'stroke-linecap': 'butt',\n      fill: '#000000',\n      stroke: '#000000',\n      opacity: 1\n      // position\n      , x: 0,\n      y: 0,\n      cx: 0,\n      cy: 0\n      // size\n      , width: 0,\n      height: 0\n      // radius\n      , r: 0,\n      rx: 0,\n      ry: 0\n      // gradient\n      , offset: 0,\n      'stop-opacity': 1,\n      'stop-color': '#000000'\n      // text\n      , 'font-size': 16,\n      'font-family': 'Helvetica, Arial, sans-serif',\n      'text-anchor': 'start'\n    }\n    // Module for color convertions\n  };SVG.Color = function (color) {\n    var match;\n\n    // initialize defaults\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n\n    if (!color) return;\n\n    // parse color\n    if (typeof color === 'string') {\n      if (SVG.regex.isRgb.test(color)) {\n        // get rgb values\n        match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace, ''));\n\n        // parse numeric values\n        this.r = parseInt(match[1]);\n        this.g = parseInt(match[2]);\n        this.b = parseInt(match[3]);\n      } else if (SVG.regex.isHex.test(color)) {\n        // get hex values\n        match = SVG.regex.hex.exec(fullHex(color));\n\n        // parse numeric values\n        this.r = parseInt(match[1], 16);\n        this.g = parseInt(match[2], 16);\n        this.b = parseInt(match[3], 16);\n      }\n    } else if (typeof color === 'object') {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n    }\n  };\n\n  SVG.extend(SVG.Color, {\n    // Default to hex conversion\n    toString: function () {\n      return this.toHex();\n    }\n    // Build hex value\n    , toHex: function () {\n      return '#' + compToHex(this.r) + compToHex(this.g) + compToHex(this.b);\n    }\n    // Build rgb value\n    , toRgb: function () {\n      return 'rgb(' + [this.r, this.g, this.b].join() + ')';\n    }\n    // Calculate true brightness\n    , brightness: function () {\n      return this.r / 255 * 0.30 + this.g / 255 * 0.59 + this.b / 255 * 0.11;\n    }\n    // Make color morphable\n    , morph: function (color) {\n      this.destination = new SVG.Color(color);\n\n      return this;\n    }\n    // Get morphed color at given position\n    , at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // normalise pos\n      pos = pos < 0 ? 0 : pos > 1 ? 1 : pos;\n\n      // generate morphed color\n      return new SVG.Color({\n        r: ~~(this.r + (this.destination.r - this.r) * pos),\n        g: ~~(this.g + (this.destination.g - this.g) * pos),\n        b: ~~(this.b + (this.destination.b - this.b) * pos)\n      });\n    }\n\n  });\n\n  // Testers\n\n  // Test if given value is a color string\n  SVG.Color.test = function (color) {\n    color += '';\n    return SVG.regex.isHex.test(color) || SVG.regex.isRgb.test(color);\n  };\n\n  // Test if given value is a rgb object\n  SVG.Color.isRgb = function (color) {\n    return color && typeof color.r == 'number' && typeof color.g == 'number' && typeof color.b == 'number';\n  };\n\n  // Test if given value is a color\n  SVG.Color.isColor = function (color) {\n    return SVG.Color.isRgb(color) || SVG.Color.test(color);\n  };\n  // Module for array conversion\n  SVG.Array = function (array, fallback) {\n    array = (array || []).valueOf();\n\n    // if array is empty and fallback is provided, use fallback\n    if (array.length == 0 && fallback) array = fallback.valueOf();\n\n    // parse array\n    this.value = this.parse(array);\n  };\n\n  SVG.extend(SVG.Array, {\n    // Make array morphable\n    morph: function (array) {\n      this.destination = this.parse(array);\n\n      // normalize length of arrays\n      if (this.value.length != this.destination.length) {\n        var lastValue = this.value[this.value.length - 1],\n            lastDestination = this.destination[this.destination.length - 1];\n\n        while (this.value.length > this.destination.length) this.destination.push(lastDestination);\n        while (this.value.length < this.destination.length) this.value.push(lastValue);\n      }\n\n      return this;\n    }\n    // Clean up any duplicate points\n    , settle: function () {\n      // find all unique values\n      for (var i = 0, il = this.value.length, seen = []; i < il; i++) if (seen.indexOf(this.value[i]) == -1) seen.push(this.value[i]);\n\n      // set new value\n      return this.value = seen;\n    }\n    // Get morphed array at given position\n    , at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // generate morphed array\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos);\n\n      return new SVG.Array(array);\n    }\n    // Convert array to string\n    , toString: function () {\n      return this.value.join(' ');\n    }\n    // Real value\n    , valueOf: function () {\n      return this.value;\n    }\n    // Parse whitespace separated string\n    , parse: function (array) {\n      array = array.valueOf();\n\n      // if already is an array, no need to parse it\n      if (Array.isArray(array)) return array;\n\n      return this.split(array);\n    }\n    // Strip unnecessary whitespace\n    , split: function (string) {\n      return string.trim().split(SVG.regex.delimiter).map(parseFloat);\n    }\n    // Reverse array\n    , reverse: function () {\n      this.value.reverse();\n\n      return this;\n    },\n    clone: function () {\n      var clone = new this.constructor();\n      clone.value = array_clone(this.value);\n      return clone;\n    }\n  });\n  // Poly points array\n  SVG.PointArray = function (array, fallback) {\n    SVG.Array.call(this, array, fallback || [[0, 0]]);\n  };\n\n  // Inherit from SVG.Array\n  SVG.PointArray.prototype = new SVG.Array();\n  SVG.PointArray.prototype.constructor = SVG.PointArray;\n\n  SVG.extend(SVG.PointArray, {\n    // Convert array to string\n    toString: function () {\n      // convert to a poly point string\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push(this.value[i].join(','));\n\n      return array.join(' ');\n    }\n    // Convert array to line object\n    , toLine: function () {\n      return {\n        x1: this.value[0][0],\n        y1: this.value[0][1],\n        x2: this.value[1][0],\n        y2: this.value[1][1]\n      };\n    }\n    // Get morphed array at given position\n    , at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      // generate morphed point string\n      for (var i = 0, il = this.value.length, array = []; i < il; i++) array.push([this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos, this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos]);\n\n      return new SVG.PointArray(array);\n    }\n    // Parse point string and flat array\n    , parse: function (array) {\n      var points = [];\n\n      array = array.valueOf();\n\n      // if it is an array\n      if (Array.isArray(array)) {\n        // and it is not flat, there is no need to parse it\n        if (Array.isArray(array[0])) {\n          // make sure to use a clone\n          return array.map(function (el) {\n            return el.slice();\n          });\n        } else if (array[0].x != null) {\n          // allow point objects to be passed\n          return array.map(function (el) {\n            return [el.x, el.y];\n          });\n        }\n      } else {\n        // Else, it is considered as a string\n        // parse points\n        array = array.trim().split(SVG.regex.delimiter).map(parseFloat);\n      }\n\n      // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n      // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n      if (array.length % 2 !== 0) array.pop();\n\n      // wrap points in two-tuples and parse points as floats\n      for (var i = 0, len = array.length; i < len; i = i + 2) points.push([array[i], array[i + 1]]);\n\n      return points;\n    }\n    // Move point string\n    , move: function (x, y) {\n      var box = this.bbox();\n\n      // get relative offset\n      x -= box.x;\n      y -= box.y;\n\n      // move every point\n      if (!isNaN(x) && !isNaN(y)) for (var i = this.value.length - 1; i >= 0; i--) this.value[i] = [this.value[i][0] + x, this.value[i][1] + y];\n\n      return this;\n    }\n    // Resize poly string\n    , size: function (width, height) {\n      var i,\n          box = this.bbox();\n\n      // recalculate position of all points according to new size\n      for (i = this.value.length - 1; i >= 0; i--) {\n        if (box.width) this.value[i][0] = (this.value[i][0] - box.x) * width / box.width + box.x;\n        if (box.height) this.value[i][1] = (this.value[i][1] - box.y) * height / box.height + box.y;\n      }\n\n      return this;\n    }\n    // Get bounding box of points\n    , bbox: function () {\n      SVG.parser.poly.setAttribute('points', this.toString());\n\n      return SVG.parser.poly.getBBox();\n    }\n  });\n\n  var pathHandlers = {\n    M: function (c, p, p0) {\n      p.x = p0.x = c[0];\n      p.y = p0.y = c[1];\n\n      return ['M', p.x, p.y];\n    },\n    L: function (c, p) {\n      p.x = c[0];\n      p.y = c[1];\n      return ['L', c[0], c[1]];\n    },\n    H: function (c, p) {\n      p.x = c[0];\n      return ['H', c[0]];\n    },\n    V: function (c, p) {\n      p.y = c[0];\n      return ['V', c[0]];\n    },\n    C: function (c, p) {\n      p.x = c[4];\n      p.y = c[5];\n      return ['C', c[0], c[1], c[2], c[3], c[4], c[5]];\n    },\n    S: function (c, p) {\n      p.x = c[2];\n      p.y = c[3];\n      return ['S', c[0], c[1], c[2], c[3]];\n    },\n    Q: function (c, p) {\n      p.x = c[2];\n      p.y = c[3];\n      return ['Q', c[0], c[1], c[2], c[3]];\n    },\n    T: function (c, p) {\n      p.x = c[0];\n      p.y = c[1];\n      return ['T', c[0], c[1]];\n    },\n    Z: function (c, p, p0) {\n      p.x = p0.x;\n      p.y = p0.y;\n      return ['Z'];\n    },\n    A: function (c, p) {\n      p.x = c[5];\n      p.y = c[6];\n      return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]];\n    }\n  };\n\n  var mlhvqtcsa = 'mlhvqtcsaz'.split('');\n\n  for (var i = 0, il = mlhvqtcsa.length; i < il; ++i) {\n    pathHandlers[mlhvqtcsa[i]] = function (i) {\n      return function (c, p, p0) {\n        if (i == 'H') c[0] = c[0] + p.x;else if (i == 'V') c[0] = c[0] + p.y;else if (i == 'A') {\n          c[5] = c[5] + p.x, c[6] = c[6] + p.y;\n        } else for (var j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j % 2 ? p.y : p.x);\n        }\n\n        return pathHandlers[i](c, p, p0);\n      };\n    }(mlhvqtcsa[i].toUpperCase());\n  }\n\n  // Path points array\n  SVG.PathArray = function (array, fallback) {\n    SVG.Array.call(this, array, fallback || [['M', 0, 0]]);\n  };\n\n  // Inherit from SVG.Array\n  SVG.PathArray.prototype = new SVG.Array();\n  SVG.PathArray.prototype.constructor = SVG.PathArray;\n\n  SVG.extend(SVG.PathArray, {\n    // Convert array to string\n    toString: function () {\n      return arrayToString(this.value);\n    }\n    // Move path string\n    , move: function (x, y) {\n      // get bounding box of current situation\n      var box = this.bbox();\n\n      // get relative offset\n      x -= box.x;\n      y -= box.y;\n\n      if (!isNaN(x) && !isNaN(y)) {\n        // move every point\n        for (var l, i = this.value.length - 1; i >= 0; i--) {\n          l = this.value[i][0];\n\n          if (l == 'M' || l == 'L' || l == 'T') {\n            this.value[i][1] += x;\n            this.value[i][2] += y;\n          } else if (l == 'H') {\n            this.value[i][1] += x;\n          } else if (l == 'V') {\n            this.value[i][1] += y;\n          } else if (l == 'C' || l == 'S' || l == 'Q') {\n            this.value[i][1] += x;\n            this.value[i][2] += y;\n            this.value[i][3] += x;\n            this.value[i][4] += y;\n\n            if (l == 'C') {\n              this.value[i][5] += x;\n              this.value[i][6] += y;\n            }\n          } else if (l == 'A') {\n            this.value[i][6] += x;\n            this.value[i][7] += y;\n          }\n        }\n      }\n\n      return this;\n    }\n    // Resize path string\n    , size: function (width, height) {\n      // get bounding box of current situation\n      var i,\n          l,\n          box = this.bbox();\n\n      // recalculate position of all points according to new size\n      for (i = this.value.length - 1; i >= 0; i--) {\n        l = this.value[i][0];\n\n        if (l == 'M' || l == 'L' || l == 'T') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n          this.value[i][2] = (this.value[i][2] - box.y) * height / box.height + box.y;\n        } else if (l == 'H') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n        } else if (l == 'V') {\n          this.value[i][1] = (this.value[i][1] - box.y) * height / box.height + box.y;\n        } else if (l == 'C' || l == 'S' || l == 'Q') {\n          this.value[i][1] = (this.value[i][1] - box.x) * width / box.width + box.x;\n          this.value[i][2] = (this.value[i][2] - box.y) * height / box.height + box.y;\n          this.value[i][3] = (this.value[i][3] - box.x) * width / box.width + box.x;\n          this.value[i][4] = (this.value[i][4] - box.y) * height / box.height + box.y;\n\n          if (l == 'C') {\n            this.value[i][5] = (this.value[i][5] - box.x) * width / box.width + box.x;\n            this.value[i][6] = (this.value[i][6] - box.y) * height / box.height + box.y;\n          }\n        } else if (l == 'A') {\n          // resize radii\n          this.value[i][1] = this.value[i][1] * width / box.width;\n          this.value[i][2] = this.value[i][2] * height / box.height;\n\n          // move position values\n          this.value[i][6] = (this.value[i][6] - box.x) * width / box.width + box.x;\n          this.value[i][7] = (this.value[i][7] - box.y) * height / box.height + box.y;\n        }\n      }\n\n      return this;\n    }\n    // Test if the passed path array use the same path data commands as this path array\n    , equalCommands: function (pathArray) {\n      var i, il, equalCommands;\n\n      pathArray = new SVG.PathArray(pathArray);\n\n      equalCommands = this.value.length === pathArray.value.length;\n      for (i = 0, il = this.value.length; equalCommands && i < il; i++) {\n        equalCommands = this.value[i][0] === pathArray.value[i][0];\n      }\n\n      return equalCommands;\n    }\n    // Make path array morphable\n    , morph: function (pathArray) {\n      pathArray = new SVG.PathArray(pathArray);\n\n      if (this.equalCommands(pathArray)) {\n        this.destination = pathArray;\n      } else {\n        this.destination = null;\n      }\n\n      return this;\n    }\n    // Get morphed path array at given position\n    , at: function (pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this;\n\n      var sourceArray = this.value,\n          destinationArray = this.destination.value,\n          array = [],\n          pathArray = new SVG.PathArray(),\n          i,\n          il,\n          j,\n          jl;\n\n      // Animate has specified in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n      for (i = 0, il = sourceArray.length; i < il; i++) {\n        array[i] = [sourceArray[i][0]];\n        for (j = 1, jl = sourceArray[i].length; j < jl; j++) {\n          array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos;\n        }\n        // For the two flags of the elliptical arc command, the SVG spec say:\n        // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n        // Elliptical arc command as an array followed by corresponding indexes:\n        // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        //   0    1   2        3                 4             5      6  7\n        if (array[i][0] === 'A') {\n          array[i][4] = +(array[i][4] != 0);\n          array[i][5] = +(array[i][5] != 0);\n        }\n      }\n\n      // Directly modify the value of a path array, this is done this way for performance\n      pathArray.value = array;\n      return pathArray;\n    }\n    // Absolutize and parse path to array\n    , parse: function (array) {\n      // if it's already a patharray, no need to parse it\n      if (array instanceof SVG.PathArray) return array.valueOf();\n\n      // prepare for parsing\n      var i,\n          x0,\n          y0,\n          s,\n          seg,\n          arr,\n          x = 0,\n          y = 0,\n          paramCnt = { 'M': 2, 'L': 2, 'H': 1, 'V': 1, 'C': 6, 'S': 4, 'Q': 4, 'T': 2, 'A': 7, 'Z': 0 };\n\n      if (typeof array == 'string') {\n\n        array = array.replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n        .replace(SVG.regex.hyphen, '$1 -') // add space before hyphen\n        .trim() // trim\n        .split(SVG.regex.delimiter); // split into array\n      } else {\n        array = array.reduce(function (prev, curr) {\n          return [].concat.call(prev, curr);\n        }, []);\n      }\n\n      // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n      var arr = [],\n          p = new SVG.Point(),\n          p0 = new SVG.Point(),\n          index = 0,\n          len = array.length;\n\n      do {\n        // Test if we have a path letter\n        if (SVG.regex.isPathLetter.test(array[index])) {\n          s = array[index];\n          ++index;\n          // If last letter was a move command and we got no new, it defaults to [L]ine\n        } else if (s == 'M') {\n          s = 'L';\n        } else if (s == 'm') {\n          s = 'l';\n        }\n\n        arr.push(pathHandlers[s].call(null, array.slice(index, index = index + paramCnt[s.toUpperCase()]).map(parseFloat), p, p0));\n      } while (len > index);\n\n      return arr;\n    }\n    // Get bounding box of path\n    , bbox: function () {\n      SVG.parser.path.setAttribute('d', this.toString());\n\n      return SVG.parser.path.getBBox();\n    }\n\n  });\n\n  // Module for unit convertions\n  SVG.Number = SVG.invent({\n    // Initialize\n    create: function (value, unit) {\n      // initialize defaults\n      this.value = 0;\n      this.unit = unit || '';\n\n      // parse value\n      if (typeof value === 'number') {\n        // ensure a valid numeric value\n        this.value = isNaN(value) ? 0 : !isFinite(value) ? value < 0 ? -3.4e+38 : +3.4e+38 : value;\n      } else if (typeof value === 'string') {\n        unit = value.match(SVG.regex.numberAndUnit);\n\n        if (unit) {\n          // make value numeric\n          this.value = parseFloat(unit[1]);\n\n          // normalize\n          if (unit[5] == '%') this.value /= 100;else if (unit[5] == 's') this.value *= 1000;\n\n          // store unit\n          this.unit = unit[5];\n        }\n      } else {\n        if (value instanceof SVG.Number) {\n          this.value = value.valueOf();\n          this.unit = value.unit;\n        }\n      }\n    }\n    // Add methods\n    , extend: {\n      // Stringalize\n      toString: function () {\n        return (this.unit == '%' ? ~~(this.value * 1e8) / 1e6 : this.unit == 's' ? this.value / 1e3 : this.value) + this.unit;\n      },\n      toJSON: function () {\n        return this.toString();\n      },\n      // Convert to primitive\n      valueOf: function () {\n        return this.value;\n      }\n      // Add number\n      , plus: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this + number, this.unit || number.unit);\n      }\n      // Subtract number\n      , minus: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this - number, this.unit || number.unit);\n      }\n      // Multiply number\n      , times: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this * number, this.unit || number.unit);\n      }\n      // Divide number\n      , divide: function (number) {\n        number = new SVG.Number(number);\n        return new SVG.Number(this / number, this.unit || number.unit);\n      }\n      // Convert to different unit\n      , to: function (unit) {\n        var number = new SVG.Number(this);\n\n        if (typeof unit === 'string') number.unit = unit;\n\n        return number;\n      }\n      // Make number morphable\n      , morph: function (number) {\n        this.destination = new SVG.Number(number);\n\n        if (number.relative) {\n          this.destination.value += this.value;\n        }\n\n        return this;\n      }\n      // Get morphed number at given position\n      , at: function (pos) {\n        // Make sure a destination is defined\n        if (!this.destination) return this;\n\n        // Generate new morphed number\n        return new SVG.Number(this.destination).minus(this).times(pos).plus(this);\n      }\n\n    }\n  });\n\n  SVG.Element = SVG.invent({\n    // Initialize node\n    create: function (node) {\n      // make stroke value accessible dynamically\n      this._stroke = SVG.defaults.attrs.stroke;\n      this._event = null;\n      this._events = {};\n\n      // initialize data object\n      this.dom = {};\n\n      // create circular reference\n      if (this.node = node) {\n        this.type = node.nodeName;\n        this.node.instance = this;\n        this._events = node._events || {};\n\n        // store current attribute value\n        this._stroke = node.getAttribute('stroke') || this._stroke;\n      }\n    }\n\n    // Add class methods\n    , extend: {\n      // Move over x-axis\n      x: function (x) {\n        return this.attr('x', x);\n      }\n      // Move over y-axis\n      , y: function (y) {\n        return this.attr('y', y);\n      }\n      // Move by center over x-axis\n      , cx: function (x) {\n        return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2);\n      }\n      // Move by center over y-axis\n      , cy: function (y) {\n        return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2);\n      }\n      // Move element to given x and y values\n      , move: function (x, y) {\n        return this.x(x).y(y);\n      }\n      // Move element by its center\n      , center: function (x, y) {\n        return this.cx(x).cy(y);\n      }\n      // Set width of element\n      , width: function (width) {\n        return this.attr('width', width);\n      }\n      // Set height of element\n      , height: function (height) {\n        return this.attr('height', height);\n      }\n      // Set element size to given width and height\n      , size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n\n        return this.width(new SVG.Number(p.width)).height(new SVG.Number(p.height));\n      }\n      // Clone element\n      , clone: function (parent) {\n        // write dom data to the dom so the clone can pickup the data\n        this.writeDataToDom();\n\n        // clone element and assign new id\n        var clone = assignNewId(this.node.cloneNode(true));\n\n        // insert the clone in the given parent or after myself\n        if (parent) parent.add(clone);else this.after(clone);\n\n        return clone;\n      }\n      // Remove element\n      , remove: function () {\n        if (this.parent()) this.parent().removeElement(this);\n\n        return this;\n      }\n      // Replace element\n      , replace: function (element) {\n        this.after(element).remove();\n\n        return element;\n      }\n      // Add element to given container and return self\n      , addTo: function (parent) {\n        return parent.put(this);\n      }\n      // Add element to given container and return container\n      , putIn: function (parent) {\n        return parent.add(this);\n      }\n      // Get / set id\n      , id: function (id) {\n        return this.attr('id', id);\n      }\n      // Checks whether the given point inside the bounding box of the element\n      , inside: function (x, y) {\n        var box = this.bbox();\n\n        return x > box.x && y > box.y && x < box.x + box.width && y < box.y + box.height;\n      }\n      // Show element\n      , show: function () {\n        return this.style('display', '');\n      }\n      // Hide element\n      , hide: function () {\n        return this.style('display', 'none');\n      }\n      // Is element visible?\n      , visible: function () {\n        return this.style('display') != 'none';\n      }\n      // Return id on string conversion\n      , toString: function () {\n        return this.attr('id');\n      }\n      // Return array of classes on the node\n      , classes: function () {\n        var attr = this.attr('class');\n\n        return attr == null ? [] : attr.trim().split(SVG.regex.delimiter);\n      }\n      // Return true if class exists on the node, false otherwise\n      , hasClass: function (name) {\n        return this.classes().indexOf(name) != -1;\n      }\n      // Add class to the node\n      , addClass: function (name) {\n        if (!this.hasClass(name)) {\n          var array = this.classes();\n          array.push(name);\n          this.attr('class', array.join(' '));\n        }\n\n        return this;\n      }\n      // Remove class from the node\n      , removeClass: function (name) {\n        if (this.hasClass(name)) {\n          this.attr('class', this.classes().filter(function (c) {\n            return c != name;\n          }).join(' '));\n        }\n\n        return this;\n      }\n      // Toggle the presence of a class on the node\n      , toggleClass: function (name) {\n        return this.hasClass(name) ? this.removeClass(name) : this.addClass(name);\n      }\n      // Get referenced element form attribute value\n      , reference: function (attr) {\n        return SVG.get(this.attr(attr));\n      }\n      // Returns the parent element instance\n      , parent: function (type) {\n        var parent = this;\n\n        // check for parent\n        if (!parent.node.parentNode) return null;\n\n        // get parent element\n        parent = SVG.adopt(parent.node.parentNode);\n\n        if (!type) return parent;\n\n        // loop trough ancestors if type is given\n        while (parent && parent.node instanceof window.SVGElement) {\n          if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent;\n          if (!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null; // #759, #720\n          parent = SVG.adopt(parent.node.parentNode);\n        }\n      }\n      // Get parent document\n      , doc: function () {\n        return this instanceof SVG.Doc ? this : this.parent(SVG.Doc);\n      }\n      // return array of all ancestors of given type up to the root svg\n      , parents: function (type) {\n        var parents = [],\n            parent = this;\n\n        do {\n          parent = parent.parent(type);\n          if (!parent || !parent.node) break;\n\n          parents.push(parent);\n        } while (parent.parent);\n\n        return parents;\n      }\n      // matches the element vs a css selector\n      , matches: function (selector) {\n        return matches(this.node, selector);\n      }\n      // Returns the svg node to call native svg methods on it\n      , native: function () {\n        return this.node;\n      }\n      // Import raw svg\n      , svg: function (svg) {\n        // create temporary holder\n        var well = document.createElement('svg');\n\n        // act as a setter if svg is given\n        if (svg && this instanceof SVG.Parent) {\n          // dump raw svg\n          well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>';\n\n          // transplant nodes\n          for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++) this.node.appendChild(well.firstChild.firstChild);\n\n          // otherwise act as a getter\n        } else {\n          // create a wrapping svg element in case of partial content\n          well.appendChild(svg = document.createElement('svg'));\n\n          // write svgjs data to the dom\n          this.writeDataToDom();\n\n          // insert a copy of this node\n          svg.appendChild(this.node.cloneNode(true));\n\n          // return target element\n          return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '');\n        }\n\n        return this;\n      }\n      // write svgjs data to the dom\n      , writeDataToDom: function () {\n\n        // dump variables recursively\n        if (this.each || this.lines) {\n          var fn = this.each ? this : this.lines();\n          fn.each(function () {\n            this.writeDataToDom();\n          });\n        }\n\n        // remove previously set data\n        this.node.removeAttribute('svgjs:data');\n\n        if (Object.keys(this.dom).length) this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)); // see #428\n\n        return this;\n      }\n      // set given data to the elements data property\n      , setData: function (o) {\n        this.dom = o;\n        return this;\n      },\n      is: function (obj) {\n        return is(this, obj);\n      }\n    }\n  });\n\n  SVG.easing = {\n    '-': function (pos) {\n      return pos;\n    },\n    '<>': function (pos) {\n      return -Math.cos(pos * Math.PI) / 2 + 0.5;\n    },\n    '>': function (pos) {\n      return Math.sin(pos * Math.PI / 2);\n    },\n    '<': function (pos) {\n      return -Math.cos(pos * Math.PI / 2) + 1;\n    }\n  };\n\n  SVG.morph = function (pos) {\n    return function (from, to) {\n      return new SVG.MorphObj(from, to).at(pos);\n    };\n  };\n\n  SVG.Situation = SVG.invent({\n\n    create: function (o) {\n      this.init = false;\n      this.reversed = false;\n      this.reversing = false;\n\n      this.duration = new SVG.Number(o.duration).valueOf();\n      this.delay = new SVG.Number(o.delay).valueOf();\n\n      this.start = +new Date() + this.delay;\n      this.finish = this.start + this.duration;\n      this.ease = o.ease;\n\n      // this.loop is incremented from 0 to this.loops\n      // it is also incremented when in an infinite loop (when this.loops is true)\n      this.loop = 0;\n      this.loops = false;\n\n      this.animations = {\n        // functionToCall: [list of morphable objects]\n        // e.g. move: [SVG.Number, SVG.Number]\n      };\n\n      this.attrs = {\n        // holds all attributes which are not represented from a function svg.js provides\n        // e.g. someAttr: SVG.Number\n      };\n\n      this.styles = {\n        // holds all styles which should be animated\n        // e.g. fill-color: SVG.Color\n      };\n\n      this.transforms = [\n        // holds all transformations as transformation objects\n        // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n      ];\n\n      this.once = {\n        // functions to fire at a specific position\n        // e.g. \"0.5\": function foo(){}\n      };\n    }\n\n  });\n\n  SVG.FX = SVG.invent({\n\n    create: function (element) {\n      this._target = element;\n      this.situations = [];\n      this.active = false;\n      this.situation = null;\n      this.paused = false;\n      this.lastPos = 0;\n      this.pos = 0;\n      // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n      // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n      this.absPos = 0;\n      this._speed = 1;\n    },\n\n    extend: {\n\n      /**\r\n       * sets or returns the target of this animation\r\n       * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n       * @param ease function || string Function which should be used for easing or easing keyword\r\n       * @param delay Number indicating the delay before the animation starts\r\n       * @return target || this\r\n       */\n      animate: function (o, ease, delay) {\n\n        if (typeof o == 'object') {\n          ease = o.ease;\n          delay = o.delay;\n          o = o.duration;\n        }\n\n        var situation = new SVG.Situation({\n          duration: o || 1000,\n          delay: delay || 0,\n          ease: SVG.easing[ease || '-'] || ease\n        });\n\n        this.queue(situation);\n\n        return this;\n      }\n\n      /**\r\n       * sets a delay before the next element of the queue is called\r\n       * @param delay Duration of delay in milliseconds\r\n       * @return this.target()\r\n       */\n      , delay: function (delay) {\n        // The delay is performed by an empty situation with its duration\n        // attribute set to the duration of the delay\n        var situation = new SVG.Situation({\n          duration: delay,\n          delay: 0,\n          ease: SVG.easing['-']\n        });\n\n        return this.queue(situation);\n      }\n\n      /**\r\n       * sets or returns the target of this animation\r\n       * @param null || target SVG.Element which should be set as new target\r\n       * @return target || this\r\n       */\n      , target: function (target) {\n        if (target && target instanceof SVG.Element) {\n          this._target = target;\n          return this;\n        }\n\n        return this._target;\n      }\n\n      // returns the absolute position at a given time\n      , timeToAbsPos: function (timestamp) {\n        return (timestamp - this.situation.start) / (this.situation.duration / this._speed);\n      }\n\n      // returns the timestamp from a given absolute positon\n      , absPosToTime: function (absPos) {\n        return this.situation.duration / this._speed * absPos + this.situation.start;\n      }\n\n      // starts the animationloop\n      , startAnimFrame: function () {\n        this.stopAnimFrame();\n        this.animationFrame = window.requestAnimationFrame(function () {\n          this.step();\n        }.bind(this));\n      }\n\n      // cancels the animationframe\n      , stopAnimFrame: function () {\n        window.cancelAnimationFrame(this.animationFrame);\n      }\n\n      // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n      , start: function () {\n        // dont start if already started\n        if (!this.active && this.situation) {\n          this.active = true;\n          this.startCurrent();\n        }\n\n        return this;\n      }\n\n      // start the current situation\n      , startCurrent: function () {\n        this.situation.start = +new Date() + this.situation.delay / this._speed;\n        this.situation.finish = this.situation.start + this.situation.duration / this._speed;\n        return this.initAnimations().step();\n      }\n\n      /**\r\n       * adds a function / Situation to the animation queue\r\n       * @param fn function / situation to add\r\n       * @return this\r\n       */\n      , queue: function (fn) {\n        if (typeof fn == 'function' || fn instanceof SVG.Situation) this.situations.push(fn);\n\n        if (!this.situation) this.situation = this.situations.shift();\n\n        return this;\n      }\n\n      /**\r\n       * pulls next element from the queue and execute it\r\n       * @return this\r\n       */\n      , dequeue: function () {\n        // stop current animation\n        this.stop();\n\n        // get next animation from queue\n        this.situation = this.situations.shift();\n\n        if (this.situation) {\n          if (this.situation instanceof SVG.Situation) {\n            this.start();\n          } else {\n            // If it is not a SVG.Situation, then it is a function, we execute it\n            this.situation.call(this);\n          }\n        }\n\n        return this;\n      }\n\n      // updates all animations to the current state of the element\n      // this is important when one property could be changed from another property\n      , initAnimations: function () {\n        var i, j, source;\n        var s = this.situation;\n\n        if (s.init) return this;\n\n        for (i in s.animations) {\n          source = this.target()[i]();\n\n          if (!Array.isArray(source)) {\n            source = [source];\n          }\n\n          if (!Array.isArray(s.animations[i])) {\n            s.animations[i] = [s.animations[i]];\n          }\n\n          //if(s.animations[i].length > source.length) {\n          //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\n          //}\n\n          for (j = source.length; j--;) {\n            // The condition is because some methods return a normal number instead\n            // of a SVG.Number\n            if (s.animations[i][j] instanceof SVG.Number) source[j] = new SVG.Number(source[j]);\n\n            s.animations[i][j] = source[j].morph(s.animations[i][j]);\n          }\n        }\n\n        for (i in s.attrs) {\n          s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i]);\n        }\n\n        for (i in s.styles) {\n          s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i]);\n        }\n\n        s.initialTransformation = this.target().matrixify();\n\n        s.init = true;\n        return this;\n      },\n      clearQueue: function () {\n        this.situations = [];\n        return this;\n      },\n      clearCurrent: function () {\n        this.situation = null;\n        return this;\n      }\n      /** stops the animation immediately\r\n       * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n       * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n       * @return this\r\n       */\n      , stop: function (jumpToEnd, clearQueue) {\n        var active = this.active;\n        this.active = false;\n\n        if (clearQueue) {\n          this.clearQueue();\n        }\n\n        if (jumpToEnd && this.situation) {\n          // initialize the situation if it was not\n          !active && this.startCurrent();\n          this.atEnd();\n        }\n\n        this.stopAnimFrame();\n\n        return this.clearCurrent();\n      }\n\n      /** resets the element to the state where the current element has started\r\n       * @return this\r\n       */\n      , reset: function () {\n        if (this.situation) {\n          var temp = this.situation;\n          this.stop();\n          this.situation = temp;\n          this.atStart();\n        }\n        return this;\n      }\n\n      // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\n      , finish: function () {\n\n        this.stop(true, false);\n\n        while (this.dequeue().situation && this.stop(true, false));\n\n        this.clearQueue().clearCurrent();\n\n        return this;\n      }\n\n      // set the internal animation pointer at the start position, before any loops, and updates the visualisation\n      , atStart: function () {\n        return this.at(0, true);\n      }\n\n      // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\n      , atEnd: function () {\n        if (this.situation.loops === true) {\n          // If in a infinite loop, we end the current iteration\n          this.situation.loops = this.situation.loop + 1;\n        }\n\n        if (typeof this.situation.loops == 'number') {\n          // If performing a finite number of loops, we go after all the loops\n          return this.at(this.situation.loops, true);\n        } else {\n          // If no loops, we just go at the end\n          return this.at(1, true);\n        }\n      }\n\n      // set the internal animation pointer to the specified position and updates the visualisation\n      // if isAbsPos is true, pos is treated as an absolute position\n      , at: function (pos, isAbsPos) {\n        var durDivSpd = this.situation.duration / this._speed;\n\n        this.absPos = pos;\n        // If pos is not an absolute position, we convert it into one\n        if (!isAbsPos) {\n          if (this.situation.reversed) this.absPos = 1 - this.absPos;\n          this.absPos += this.situation.loop;\n        }\n\n        this.situation.start = +new Date() - this.absPos * durDivSpd;\n        this.situation.finish = this.situation.start + durDivSpd;\n\n        return this.step(true);\n      }\n\n      /**\r\n       * sets or returns the speed of the animations\r\n       * @param speed null || Number The new speed of the animations\r\n       * @return Number || this\r\n       */\n      , speed: function (speed) {\n        if (speed === 0) return this.pause();\n\n        if (speed) {\n          this._speed = speed;\n          // We use an absolute position here so that speed can affect the delay before the animation\n          return this.at(this.absPos, true);\n        } else return this._speed;\n      }\n\n      // Make loopable\n      , loop: function (times, reverse) {\n        var c = this.last();\n\n        // store total loops\n        c.loops = times != null ? times : true;\n        c.loop = 0;\n\n        if (reverse) c.reversing = true;\n        return this;\n      }\n\n      // pauses the animation\n      , pause: function () {\n        this.paused = true;\n        this.stopAnimFrame();\n\n        return this;\n      }\n\n      // unpause the animation\n      , play: function () {\n        if (!this.paused) return this;\n        this.paused = false;\n        // We use an absolute position here so that the delay before the animation can be paused\n        return this.at(this.absPos, true);\n      }\n\n      /**\r\n       * toggle or set the direction of the animation\r\n       * true sets direction to backwards while false sets it to forwards\r\n       * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n       * @return this\r\n       */\n      , reverse: function (reversed) {\n        var c = this.last();\n\n        if (typeof reversed == 'undefined') c.reversed = !c.reversed;else c.reversed = reversed;\n\n        return this;\n      }\n\n      /**\r\n       * returns a float from 0-1 indicating the progress of the current animation\r\n       * @param eased Boolean indicating whether the returned position should be eased or not\r\n       * @return number\r\n       */\n      , progress: function (easeIt) {\n        return easeIt ? this.situation.ease(this.pos) : this.pos;\n      }\n\n      /**\r\n       * adds a callback function which is called when the current animation is finished\r\n       * @param fn Function which should be executed as callback\r\n       * @return number\r\n       */\n      , after: function (fn) {\n        var c = this.last(),\n            wrapper = function wrapper(e) {\n          if (e.detail.situation == c) {\n            fn.call(this, c);\n            this.off('finished.fx', wrapper); // prevent memory leak\n          }\n        };\n\n        this.target().on('finished.fx', wrapper);\n\n        return this._callStart();\n      }\n\n      // adds a callback which is called whenever one animation step is performed\n      , during: function (fn) {\n        var c = this.last(),\n            wrapper = function (e) {\n          if (e.detail.situation == c) {\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c);\n          }\n        };\n\n        // see above\n        this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n\n        this.after(function () {\n          this.off('during.fx', wrapper);\n        });\n\n        return this._callStart();\n      }\n\n      // calls after ALL animations in the queue are finished\n      , afterAll: function (fn) {\n        var wrapper = function wrapper(e) {\n          fn.call(this);\n          this.off('allfinished.fx', wrapper);\n        };\n\n        // see above\n        this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper);\n\n        return this._callStart();\n      }\n\n      // calls on every animation step for all animations\n      , duringAll: function (fn) {\n        var wrapper = function (e) {\n          fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation);\n        };\n\n        this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n\n        this.afterAll(function () {\n          this.off('during.fx', wrapper);\n        });\n\n        return this._callStart();\n      },\n\n      last: function () {\n        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;\n      }\n\n      // adds one property to the animations\n      , add: function (method, args, type) {\n        this.last()[type || 'animations'][method] = args;\n        return this._callStart();\n      }\n\n      /** perform one step of the animation\r\n       *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n       *  @return this\r\n       */\n      , step: function (ignoreTime) {\n\n        // convert current time to an absolute position\n        if (!ignoreTime) this.absPos = this.timeToAbsPos(+new Date());\n\n        // This part convert an absolute position to a position\n        if (this.situation.loops !== false) {\n          var absPos, absPosInt, lastLoop;\n\n          // If the absolute position is below 0, we just treat it as if it was 0\n          absPos = Math.max(this.absPos, 0);\n          absPosInt = Math.floor(absPos);\n\n          if (this.situation.loops === true || absPosInt < this.situation.loops) {\n            this.pos = absPos - absPosInt;\n            lastLoop = this.situation.loop;\n            this.situation.loop = absPosInt;\n          } else {\n            this.absPos = this.situation.loops;\n            this.pos = 1;\n            // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n            lastLoop = this.situation.loop - 1;\n            this.situation.loop = this.situation.loops;\n          }\n\n          if (this.situation.reversing) {\n            // Toggle reversed if an odd number of loops as occured since the last call of step\n            this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2);\n          }\n        } else {\n          // If there are no loop, the absolute position must not be above 1\n          this.absPos = Math.min(this.absPos, 1);\n          this.pos = this.absPos;\n        }\n\n        // while the absolute position can be below 0, the position must not be below 0\n        if (this.pos < 0) this.pos = 0;\n\n        if (this.situation.reversed) this.pos = 1 - this.pos;\n\n        // apply easing\n        var eased = this.situation.ease(this.pos);\n\n        // call once-callbacks\n        for (var i in this.situation.once) {\n          if (i > this.lastPos && i <= eased) {\n            this.situation.once[i].call(this.target(), this.pos, eased);\n            delete this.situation.once[i];\n          }\n        }\n\n        // fire during callback with position, eased position and current situation as parameter\n        if (this.active) this.target().fire('during', { pos: this.pos, eased: eased, fx: this, situation: this.situation });\n\n        // the user may call stop or finish in the during callback\n        // so make sure that we still have a valid situation\n        if (!this.situation) {\n          return this;\n        }\n\n        // apply the actual animation to every property\n        this.eachAt();\n\n        // do final code when situation is finished\n        if (this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0) {\n\n          // stop animation callback\n          this.stopAnimFrame();\n\n          // fire finished callback with current situation as parameter\n          this.target().fire('finished', { fx: this, situation: this.situation });\n\n          if (!this.situations.length) {\n            this.target().fire('allfinished');\n\n            // Recheck the length since the user may call animate in the afterAll callback\n            if (!this.situations.length) {\n              this.target().off('.fx'); // there shouldnt be any binding left, but to make sure...\n              this.active = false;\n            }\n          }\n\n          // start next animation\n          if (this.active) this.dequeue();else this.clearCurrent();\n        } else if (!this.paused && this.active) {\n          // we continue animating when we are not at the end\n          this.startAnimFrame();\n        }\n\n        // save last eased position for once callback triggering\n        this.lastPos = eased;\n        return this;\n      }\n\n      // calculates the step for every property and calls block with it\n      , eachAt: function () {\n        var i,\n            len,\n            at,\n            self = this,\n            target = this.target(),\n            s = this.situation;\n\n        // apply animations which can be called trough a method\n        for (i in s.animations) {\n\n          at = [].concat(s.animations[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n\n          target[i].apply(target, at);\n        }\n\n        // apply animation which has to be applied with attr()\n        for (i in s.attrs) {\n\n          at = [i].concat(s.attrs[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n\n          target.attr.apply(target, at);\n        }\n\n        // apply animation which has to be applied with style()\n        for (i in s.styles) {\n\n          at = [i].concat(s.styles[i]).map(function (el) {\n            return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n          });\n\n          target.style.apply(target, at);\n        }\n\n        // animate initialTransformation which has to be chained\n        if (s.transforms.length) {\n\n          // get initial initialTransformation\n          at = s.initialTransformation;\n          for (i = 0, len = s.transforms.length; i < len; i++) {\n\n            // get next transformation in chain\n            var a = s.transforms[i];\n\n            // multiply matrix directly\n            if (a instanceof SVG.Matrix) {\n\n              if (a.relative) {\n                at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)));\n              } else {\n                at = at.morph(a).at(s.ease(this.pos));\n              }\n              continue;\n            }\n\n            // when transformation is absolute we have to reset the needed transformation first\n            if (!a.relative) a.undo(at.extract());\n\n            // and reapply it after\n            at = at.multiply(a.at(s.ease(this.pos)));\n          }\n\n          // set new matrix on element\n          target.matrix(at);\n        }\n\n        return this;\n      }\n\n      // adds an once-callback which is called at a specific position and never again\n      , once: function (pos, fn, isEased) {\n        var c = this.last();\n        if (!isEased) pos = c.ease(pos);\n\n        c.once[pos] = fn;\n\n        return this;\n      },\n\n      _callStart: function () {\n        setTimeout(function () {\n          this.start();\n        }.bind(this), 0);\n        return this;\n      }\n\n    },\n\n    parent: SVG.Element\n\n    // Add method to parent elements\n    , construct: {\n      // Get fx module or create a new one, then animate with given duration and ease\n      animate: function (o, ease, delay) {\n        return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay);\n      },\n      delay: function (delay) {\n        return (this.fx || (this.fx = new SVG.FX(this))).delay(delay);\n      },\n      stop: function (jumpToEnd, clearQueue) {\n        if (this.fx) this.fx.stop(jumpToEnd, clearQueue);\n\n        return this;\n      },\n      finish: function () {\n        if (this.fx) this.fx.finish();\n\n        return this;\n      }\n      // Pause current animation\n      , pause: function () {\n        if (this.fx) this.fx.pause();\n\n        return this;\n      }\n      // Play paused current animation\n      , play: function () {\n        if (this.fx) this.fx.play();\n\n        return this;\n      }\n      // Set/Get the speed of the animations\n      , speed: function (speed) {\n        if (this.fx) if (speed == null) return this.fx.speed();else this.fx.speed(speed);\n\n        return this;\n      }\n    }\n\n  });\n\n  // MorphObj is used whenever no morphable object is given\n  SVG.MorphObj = SVG.invent({\n\n    create: function (from, to) {\n      // prepare color for morphing\n      if (SVG.Color.isColor(to)) return new SVG.Color(from).morph(to);\n      // check if we have a list of values\n      if (SVG.regex.delimiter.test(from)) {\n        // prepare path for morphing\n        if (SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to);\n        // prepare value list for morphing\n        else return new SVG.Array(from).morph(to);\n      }\n      // prepare number for morphing\n      if (SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to);\n\n      // prepare for plain morphing\n      this.value = from;\n      this.destination = to;\n    },\n\n    extend: {\n      at: function (pos, real) {\n        return real < 1 ? this.value : this.destination;\n      },\n\n      valueOf: function () {\n        return this.value;\n      }\n    }\n\n  });\n\n  SVG.extend(SVG.FX, {\n    // Add animatable attributes\n    attr: function (a, v, relative) {\n      // apply attributes individually\n      if (typeof a == 'object') {\n        for (var key in a) this.attr(key, a[key]);\n      } else {\n        this.add(a, v, 'attrs');\n      }\n\n      return this;\n    }\n    // Add animatable styles\n    , style: function (s, v) {\n      if (typeof s == 'object') for (var key in s) this.style(key, s[key]);else this.add(s, v, 'styles');\n\n      return this;\n    }\n    // Animatable x-axis\n    , x: function (x, relative) {\n      if (this.target() instanceof SVG.G) {\n        this.transform({ x: x }, relative);\n        return this;\n      }\n\n      var num = new SVG.Number(x);\n      num.relative = relative;\n      return this.add('x', num);\n    }\n    // Animatable y-axis\n    , y: function (y, relative) {\n      if (this.target() instanceof SVG.G) {\n        this.transform({ y: y }, relative);\n        return this;\n      }\n\n      var num = new SVG.Number(y);\n      num.relative = relative;\n      return this.add('y', num);\n    }\n    // Animatable center x-axis\n    , cx: function (x) {\n      return this.add('cx', new SVG.Number(x));\n    }\n    // Animatable center y-axis\n    , cy: function (y) {\n      return this.add('cy', new SVG.Number(y));\n    }\n    // Add animatable move\n    , move: function (x, y) {\n      return this.x(x).y(y);\n    }\n    // Add animatable center\n    , center: function (x, y) {\n      return this.cx(x).cy(y);\n    }\n    // Add animatable size\n    , size: function (width, height) {\n      if (this.target() instanceof SVG.Text) {\n        // animate font size for Text elements\n        this.attr('font-size', width);\n      } else {\n        // animate bbox based size for all other elements\n        var box;\n\n        if (!width || !height) {\n          box = this.target().bbox();\n        }\n\n        if (!width) {\n          width = box.width / box.height * height;\n        }\n\n        if (!height) {\n          height = box.height / box.width * width;\n        }\n\n        this.add('width', new SVG.Number(width)).add('height', new SVG.Number(height));\n      }\n\n      return this;\n    }\n    // Add animatable width\n    , width: function (width) {\n      return this.add('width', new SVG.Number(width));\n    }\n    // Add animatable height\n    , height: function (height) {\n      return this.add('height', new SVG.Number(height));\n    }\n    // Add animatable plot\n    , plot: function (a, b, c, d) {\n      // Lines can be plotted with 4 arguments\n      if (arguments.length == 4) {\n        return this.plot([a, b, c, d]);\n      }\n\n      return this.add('plot', new (this.target().morphArray)(a));\n    }\n    // Add leading method\n    , leading: function (value) {\n      return this.target().leading ? this.add('leading', new SVG.Number(value)) : this;\n    }\n    // Add animatable viewbox\n    , viewbox: function (x, y, width, height) {\n      if (this.target() instanceof SVG.Container) {\n        this.add('viewbox', new SVG.ViewBox(x, y, width, height));\n      }\n\n      return this;\n    },\n    update: function (o) {\n      if (this.target() instanceof SVG.Stop) {\n        if (typeof o == 'number' || o instanceof SVG.Number) {\n          return this.update({\n            offset: arguments[0],\n            color: arguments[1],\n            opacity: arguments[2]\n          });\n        }\n\n        if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n        if (o.color != null) this.attr('stop-color', o.color);\n        if (o.offset != null) this.attr('offset', o.offset);\n      }\n\n      return this;\n    }\n  });\n\n  SVG.Box = SVG.invent({\n    create: function (x, y, width, height) {\n      if (typeof x == 'object' && !(x instanceof SVG.Element)) {\n        // chromes getBoundingClientRect has no x and y property\n        return SVG.Box.call(this, x.left != null ? x.left : x.x, x.top != null ? x.top : x.y, x.width, x.height);\n      } else if (arguments.length == 4) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      }\n\n      // add center, right, bottom...\n      fullBox(this);\n    },\n    extend: {\n      // Merge rect box with another, return a new instance\n      merge: function (box) {\n        var b = new this.constructor();\n\n        // merge boxes\n        b.x = Math.min(this.x, box.x);\n        b.y = Math.min(this.y, box.y);\n        b.width = Math.max(this.x + this.width, box.x + box.width) - b.x;\n        b.height = Math.max(this.y + this.height, box.y + box.height) - b.y;\n\n        return fullBox(b);\n      },\n\n      transform: function (m) {\n        var xMin = Infinity,\n            xMax = -Infinity,\n            yMin = Infinity,\n            yMax = -Infinity,\n            p,\n            bbox;\n\n        var pts = [new SVG.Point(this.x, this.y), new SVG.Point(this.x2, this.y), new SVG.Point(this.x, this.y2), new SVG.Point(this.x2, this.y2)];\n\n        pts.forEach(function (p) {\n          p = p.transform(m);\n          xMin = Math.min(xMin, p.x);\n          xMax = Math.max(xMax, p.x);\n          yMin = Math.min(yMin, p.y);\n          yMax = Math.max(yMax, p.y);\n        });\n\n        bbox = new this.constructor();\n        bbox.x = xMin;\n        bbox.width = xMax - xMin;\n        bbox.y = yMin;\n        bbox.height = yMax - yMin;\n\n        fullBox(bbox);\n\n        return bbox;\n      }\n    }\n  });\n\n  SVG.BBox = SVG.invent({\n    // Initialize\n    create: function (element) {\n      SVG.Box.apply(this, [].slice.call(arguments));\n\n      // get values if element is given\n      if (element instanceof SVG.Element) {\n        var box;\n\n        // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\n        try {\n\n          if (!document.documentElement.contains) {\n            // This is IE - it does not support contains() for top-level SVGs\n            var topParent = element.node;\n            while (topParent.parentNode) {\n              topParent = topParent.parentNode;\n            }\n            if (topParent != document) throw new Exception('Element not in the dom');\n          } else {\n            // the element is NOT in the dom, throw error\n            if (!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom');\n          }\n\n          // find native bbox\n          box = element.node.getBBox();\n        } catch (e) {\n          if (element instanceof SVG.Shape) {\n            var clone = element.clone(SVG.parser.draw.instance).show();\n            box = clone.node.getBBox();\n            clone.remove();\n          } else {\n            box = {\n              x: element.node.clientLeft,\n              y: element.node.clientTop,\n              width: element.node.clientWidth,\n              height: element.node.clientHeight\n            };\n          }\n        }\n\n        SVG.Box.call(this, box);\n      }\n    }\n\n    // Define ancestor\n    , inherit: SVG.Box\n\n    // Define Parent\n    , parent: SVG.Element\n\n    // Constructor\n    , construct: {\n      // Get bounding box\n      bbox: function () {\n        return new SVG.BBox(this);\n      }\n    }\n\n  });\n\n  SVG.BBox.prototype.constructor = SVG.BBox;\n\n  SVG.extend(SVG.Element, {\n    tbox: function () {\n      console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.');\n      return this.rbox(this.doc());\n    }\n  });\n\n  SVG.RBox = SVG.invent({\n    // Initialize\n    create: function (element) {\n      SVG.Box.apply(this, [].slice.call(arguments));\n\n      if (element instanceof SVG.Element) {\n        SVG.Box.call(this, element.node.getBoundingClientRect());\n      }\n    },\n\n    inherit: SVG.Box\n\n    // define Parent\n    , parent: SVG.Element,\n\n    extend: {\n      addOffset: function () {\n        // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n        this.x += window.pageXOffset;\n        this.y += window.pageYOffset;\n        return this;\n      }\n\n      // Constructor\n    }, construct: {\n      // Get rect box\n      rbox: function (el) {\n        if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse());\n        return new SVG.RBox(this).addOffset();\n      }\n    }\n\n  });\n\n  SVG.RBox.prototype.constructor = SVG.RBox;\n\n  SVG.Matrix = SVG.invent({\n    // Initialize\n    create: function (source) {\n      var i,\n          base = arrayToMatrix([1, 0, 0, 1, 0, 0]);\n\n      // ensure source as object\n      source = source instanceof SVG.Element ? source.matrixify() : typeof source === 'string' ? arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? arrayToMatrix([].slice.call(arguments)) : Array.isArray(source) ? arrayToMatrix(source) : typeof source === 'object' ? source : base;\n\n      // merge source\n      for (i = abcdef.length - 1; i >= 0; --i) this[abcdef[i]] = source[abcdef[i]] != null ? source[abcdef[i]] : base[abcdef[i]];\n    }\n\n    // Add methods\n    , extend: {\n      // Extract individual transformations\n      extract: function () {\n        // find delta transform points\n        var px = deltaTransformPoint(this, 0, 1),\n            py = deltaTransformPoint(this, 1, 0),\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\n\n        return {\n          // translation\n          x: this.e,\n          y: this.f,\n          transformedX: (this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),\n          transformedY: (this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\n          // skew\n          , skewX: -skewX,\n          skewY: 180 / Math.PI * Math.atan2(py.y, py.x)\n          // scale\n          , scaleX: Math.sqrt(this.a * this.a + this.b * this.b),\n          scaleY: Math.sqrt(this.c * this.c + this.d * this.d)\n          // rotation\n          , rotation: skewX,\n          a: this.a,\n          b: this.b,\n          c: this.c,\n          d: this.d,\n          e: this.e,\n          f: this.f,\n          matrix: new SVG.Matrix(this)\n        };\n      }\n      // Clone matrix\n      , clone: function () {\n        return new SVG.Matrix(this);\n      }\n      // Morph one matrix into another\n      , morph: function (matrix) {\n        // store new destination\n        this.destination = new SVG.Matrix(matrix);\n\n        return this;\n      }\n      // Get morphed matrix at a given position\n      , at: function (pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n\n        // calculate morphed matrix at a given position\n        var matrix = new SVG.Matrix({\n          a: this.a + (this.destination.a - this.a) * pos,\n          b: this.b + (this.destination.b - this.b) * pos,\n          c: this.c + (this.destination.c - this.c) * pos,\n          d: this.d + (this.destination.d - this.d) * pos,\n          e: this.e + (this.destination.e - this.e) * pos,\n          f: this.f + (this.destination.f - this.f) * pos\n        });\n\n        return matrix;\n      }\n      // Multiplies by given matrix\n      , multiply: function (matrix) {\n        return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()));\n      }\n      // Inverses matrix\n      , inverse: function () {\n        return new SVG.Matrix(this.native().inverse());\n      }\n      // Translate matrix\n      , translate: function (x, y) {\n        return new SVG.Matrix(this.native().translate(x || 0, y || 0));\n      }\n      // Scale matrix\n      , scale: function (x, y, cx, cy) {\n        // support uniformal scale\n        if (arguments.length == 1) {\n          y = x;\n        } else if (arguments.length == 3) {\n          cy = cx;\n          cx = y;\n          y = x;\n        }\n\n        return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0));\n      }\n      // Rotate matrix\n      , rotate: function (r, cx, cy) {\n        // convert degrees to radians\n        r = SVG.utils.radians(r);\n\n        return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0));\n      }\n      // Flip matrix on x or y, at a given offset\n      , flip: function (a, o) {\n        return a == 'x' ? this.scale(-1, 1, o, 0) : a == 'y' ? this.scale(1, -1, 0, o) : this.scale(-1, -1, a, o != null ? o : a);\n      }\n      // Skew\n      , skew: function (x, y, cx, cy) {\n        // support uniformal skew\n        if (arguments.length == 1) {\n          y = x;\n        } else if (arguments.length == 3) {\n          cy = cx;\n          cx = y;\n          y = x;\n        }\n\n        // convert degrees to radians\n        x = SVG.utils.radians(x);\n        y = SVG.utils.radians(y);\n\n        return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0));\n      }\n      // SkewX\n      , skewX: function (x, cx, cy) {\n        return this.skew(x, 0, cx, cy);\n      }\n      // SkewY\n      , skewY: function (y, cx, cy) {\n        return this.skew(0, y, cx, cy);\n      }\n      // Transform around a center point\n      , around: function (cx, cy, matrix) {\n        return this.multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0)).multiply(matrix).multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0));\n      }\n      // Convert to native SVGMatrix\n      , native: function () {\n        // create new matrix\n        var matrix = SVG.parser.native.createSVGMatrix();\n\n        // update with current values\n        for (var i = abcdef.length - 1; i >= 0; i--) matrix[abcdef[i]] = this[abcdef[i]];\n\n        return matrix;\n      }\n      // Convert matrix to string\n      , toString: function () {\n        // Construct the matrix directly, avoid values that are too small\n        return 'matrix(' + float32String(this.a) + ',' + float32String(this.b) + ',' + float32String(this.c) + ',' + float32String(this.d) + ',' + float32String(this.e) + ',' + float32String(this.f) + ')';\n      }\n\n      // Define parent\n    }, parent: SVG.Element\n\n    // Add parent method\n    , construct: {\n      // Get current matrix\n      ctm: function () {\n        return new SVG.Matrix(this.node.getCTM());\n      },\n      // Get current screen matrix\n      screenCTM: function () {\n        /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n           This is needed because FF does not return the transformation matrix\r\n           for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n           However all other Browsers do that */\n        if (this instanceof SVG.Nested) {\n          var rect = this.rect(1, 1);\n          var m = rect.node.getScreenCTM();\n          rect.remove();\n          return new SVG.Matrix(m);\n        }\n        return new SVG.Matrix(this.node.getScreenCTM());\n      }\n\n    }\n\n  });\n\n  SVG.Point = SVG.invent({\n    // Initialize\n    create: function (x, y) {\n      var i,\n          source,\n          base = { x: 0, y: 0\n\n        // ensure source as object\n      };source = Array.isArray(x) ? { x: x[0], y: x[1] } : typeof x === 'object' ? { x: x.x, y: x.y } : x != null ? { x: x, y: y != null ? y : x } : base; // If y has no value, then x is used has its value\n\n      // merge source\n      this.x = source.x;\n      this.y = source.y;\n    }\n\n    // Add methods\n    , extend: {\n      // Clone point\n      clone: function () {\n        return new SVG.Point(this);\n      }\n      // Morph one point into another\n      , morph: function (x, y) {\n        // store new destination\n        this.destination = new SVG.Point(x, y);\n\n        return this;\n      }\n      // Get morphed point at a given position\n      , at: function (pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n\n        // calculate morphed matrix at a given position\n        var point = new SVG.Point({\n          x: this.x + (this.destination.x - this.x) * pos,\n          y: this.y + (this.destination.y - this.y) * pos\n        });\n\n        return point;\n      }\n      // Convert to native SVGPoint\n      , native: function () {\n        // create new point\n        var point = SVG.parser.native.createSVGPoint();\n\n        // update with current values\n        point.x = this.x;\n        point.y = this.y;\n\n        return point;\n      }\n      // transform point with matrix\n      , transform: function (matrix) {\n        return new SVG.Point(this.native().matrixTransform(matrix.native()));\n      }\n\n    }\n\n  });\n\n  SVG.extend(SVG.Element, {\n\n    // Get point\n    point: function (x, y) {\n      return new SVG.Point(x, y).transform(this.screenCTM().inverse());\n    }\n\n  });\n\n  SVG.extend(SVG.Element, {\n    // Set svg element attribute\n    attr: function (a, v, n) {\n      // act as full getter\n      if (a == null) {\n        // get an object of attributes\n        a = {};\n        v = this.node.attributes;\n        for (n = v.length - 1; n >= 0; n--) a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue;\n\n        return a;\n      } else if (typeof a == 'object') {\n        // apply every attribute individually if an object is passed\n        for (v in a) this.attr(v, a[v]);\n      } else if (v === null) {\n        // remove value\n        this.node.removeAttribute(a);\n      } else if (v == null) {\n        // act as a getter if the first and only argument is not an object\n        v = this.node.getAttribute(a);\n        return v == null ? SVG.defaults.attrs[a] : SVG.regex.isNumber.test(v) ? parseFloat(v) : v;\n      } else {\n        // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n        if (a == 'stroke-width') this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null);else if (a == 'stroke') this._stroke = v;\n\n        // convert image fill and stroke to patterns\n        if (a == 'fill' || a == 'stroke') {\n          if (SVG.regex.isImage.test(v)) v = this.doc().defs().image(v, 0, 0);\n\n          if (v instanceof SVG.Image) v = this.doc().defs().pattern(0, 0, function () {\n            this.add(v);\n          });\n        }\n\n        // ensure correct numeric values (also accepts NaN and Infinity)\n        if (typeof v === 'number') v = new SVG.Number(v);\n\n        // ensure full hex color\n        else if (SVG.Color.isColor(v)) v = new SVG.Color(v);\n\n          // parse array values\n          else if (Array.isArray(v)) v = new SVG.Array(v);\n\n        // if the passed attribute is leading...\n        if (a == 'leading') {\n          // ... call the leading method instead\n          if (this.leading) this.leading(v);\n        } else {\n          // set given attribute on node\n          typeof n === 'string' ? this.node.setAttributeNS(n, a, v.toString()) : this.node.setAttribute(a, v.toString());\n        }\n\n        // rebuild if required\n        if (this.rebuild && (a == 'font-size' || a == 'x')) this.rebuild(a, v);\n      }\n\n      return this;\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Add transformations\n    transform: function (o, relative) {\n      // get target in case of the fx module, otherwise reference this\n      var target = this,\n          matrix,\n          bbox;\n\n      // act as a getter\n      if (typeof o !== 'object') {\n        // get current matrix\n        matrix = new SVG.Matrix(target).extract();\n\n        return typeof o === 'string' ? matrix[o] : matrix;\n      }\n\n      // get current matrix\n      matrix = new SVG.Matrix(target);\n\n      // ensure relative flag\n      relative = !!relative || !!o.relative;\n\n      // act on matrix\n      if (o.a != null) {\n        matrix = relative ?\n        // relative\n        matrix.multiply(new SVG.Matrix(o)) :\n        // absolute\n        new SVG.Matrix(o);\n\n        // act on rotation\n      } else if (o.rotation != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // apply transformation\n        matrix = relative ?\n        // relative\n        matrix.rotate(o.rotation, o.cx, o.cy) :\n        // absolute\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy);\n\n        // act on scale\n      } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure scale values on both axes\n        o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1;\n        o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1;\n\n        if (!relative) {\n          // absolute; multiply inversed values\n          var e = matrix.extract();\n          o.scaleX = o.scaleX * 1 / e.scaleX;\n          o.scaleY = o.scaleY * 1 / e.scaleY;\n        }\n\n        matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy);\n\n        // act on skew\n      } else if (o.skew != null || o.skewX != null || o.skewY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure skew values on both axes\n        o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0;\n        o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0;\n\n        if (!relative) {\n          // absolute; reset skew values\n          var e = matrix.extract();\n          matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse());\n        }\n\n        matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy);\n\n        // act on flip\n      } else if (o.flip) {\n        if (o.flip == 'x' || o.flip == 'y') {\n          o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset;\n        } else {\n          if (o.offset == null) {\n            bbox = target.bbox();\n            o.flip = bbox.cx;\n            o.offset = bbox.cy;\n          } else {\n            o.flip = o.offset;\n          }\n        }\n\n        matrix = new SVG.Matrix().flip(o.flip, o.offset);\n\n        // act on translate\n      } else if (o.x != null || o.y != null) {\n        if (relative) {\n          // relative\n          matrix = matrix.translate(o.x, o.y);\n        } else {\n          // absolute\n          if (o.x != null) matrix.e = o.x;\n          if (o.y != null) matrix.f = o.y;\n        }\n      }\n\n      return this.attr('transform', matrix);\n    }\n  });\n\n  SVG.extend(SVG.FX, {\n    transform: function (o, relative) {\n      // get target in case of the fx module, otherwise reference this\n      var target = this.target(),\n          matrix,\n          bbox;\n\n      // act as a getter\n      if (typeof o !== 'object') {\n        // get current matrix\n        matrix = new SVG.Matrix(target).extract();\n\n        return typeof o === 'string' ? matrix[o] : matrix;\n      }\n\n      // ensure relative flag\n      relative = !!relative || !!o.relative;\n\n      // act on matrix\n      if (o.a != null) {\n        matrix = new SVG.Matrix(o);\n\n        // act on rotation\n      } else if (o.rotation != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // apply transformation\n        matrix = new SVG.Rotate(o.rotation, o.cx, o.cy);\n\n        // act on scale\n      } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure scale values on both axes\n        o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1;\n        o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1;\n\n        matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy);\n\n        // act on skew\n      } else if (o.skewX != null || o.skewY != null) {\n        // ensure centre point\n        ensureCentre(o, target);\n\n        // ensure skew values on both axes\n        o.skewX = o.skewX != null ? o.skewX : 0;\n        o.skewY = o.skewY != null ? o.skewY : 0;\n\n        matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy);\n\n        // act on flip\n      } else if (o.flip) {\n        if (o.flip == 'x' || o.flip == 'y') {\n          o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset;\n        } else {\n          if (o.offset == null) {\n            bbox = target.bbox();\n            o.flip = bbox.cx;\n            o.offset = bbox.cy;\n          } else {\n            o.flip = o.offset;\n          }\n        }\n\n        matrix = new SVG.Matrix().flip(o.flip, o.offset);\n\n        // act on translate\n      } else if (o.x != null || o.y != null) {\n        matrix = new SVG.Translate(o.x, o.y);\n      }\n\n      if (!matrix) return this;\n\n      matrix.relative = relative;\n\n      this.last().transforms.push(matrix);\n\n      return this._callStart();\n    }\n  });\n\n  SVG.extend(SVG.Element, {\n    // Reset all transformations\n    untransform: function () {\n      return this.attr('transform', null);\n    },\n    // merge the whole transformation chain into one matrix and returns it\n    matrixify: function () {\n\n      var matrix = (this.attr('transform') || '').\n      // split transformations\n      split(SVG.regex.transforms).slice(0, -1).map(function (str) {\n        // generate key => value pairs\n        var kv = str.trim().split('(');\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function (str) {\n          return parseFloat(str);\n        })];\n      })\n      // merge every transformation into one matrix\n      .reduce(function (matrix, transform) {\n\n        if (transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]));\n        return matrix[transform[0]].apply(matrix, transform[1]);\n      }, new SVG.Matrix());\n\n      return matrix;\n    },\n    // add an element to another parent without changing the visual representation on the screen\n    toParent: function (parent) {\n      if (this == parent) return this;\n      var ctm = this.screenCTM();\n      var pCtm = parent.screenCTM().inverse();\n\n      this.addTo(parent).untransform().transform(pCtm.multiply(ctm));\n\n      return this;\n    },\n    // same as above with parent equals root-svg\n    toDoc: function () {\n      return this.toParent(this.doc());\n    }\n\n  });\n\n  SVG.Transformation = SVG.invent({\n\n    create: function (source, inversed) {\n\n      if (arguments.length > 1 && typeof inversed != 'boolean') {\n        return this.constructor.call(this, [].slice.call(arguments));\n      }\n\n      if (Array.isArray(source)) {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          this[this.arguments[i]] = source[i];\n        }\n      } else if (typeof source == 'object') {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          this[this.arguments[i]] = source[this.arguments[i]];\n        }\n      }\n\n      this.inversed = false;\n\n      if (inversed === true) {\n        this.inversed = true;\n      }\n    },\n\n    extend: {\n\n      arguments: [],\n      method: '',\n\n      at: function (pos) {\n\n        var params = [];\n\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          params.push(this[this.arguments[i]]);\n        }\n\n        var m = this._undo || new SVG.Matrix();\n\n        m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos);\n\n        return this.inversed ? m.inverse() : m;\n      },\n\n      undo: function (o) {\n        for (var i = 0, len = this.arguments.length; i < len; ++i) {\n          o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]];\n        }\n\n        // The method SVG.Matrix.extract which was used before calling this\n        // method to obtain a value for the parameter o doesn't return a cx and\n        // a cy so we use the ones that were provided to this object at its creation\n        o.cx = this.cx;\n        o.cy = this.cy;\n\n        this._undo = new SVG[capitalize(this.method)](o, true).at(1);\n\n        return this;\n      }\n\n    }\n\n  });\n\n  SVG.Translate = SVG.invent({\n\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n\n    extend: {\n      arguments: ['transformedX', 'transformedY'],\n      method: 'translate'\n    }\n\n  });\n\n  SVG.Rotate = SVG.invent({\n\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n\n    extend: {\n      arguments: ['rotation', 'cx', 'cy'],\n      method: 'rotate',\n      at: function (pos) {\n        var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy);\n        return this.inversed ? m.inverse() : m;\n      },\n      undo: function (o) {\n        this._undo = o;\n        return this;\n      }\n    }\n\n  });\n\n  SVG.Scale = SVG.invent({\n\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n\n    extend: {\n      arguments: ['scaleX', 'scaleY', 'cx', 'cy'],\n      method: 'scale'\n    }\n\n  });\n\n  SVG.Skew = SVG.invent({\n\n    parent: SVG.Matrix,\n    inherit: SVG.Transformation,\n\n    create: function (source, inversed) {\n      this.constructor.apply(this, [].slice.call(arguments));\n    },\n\n    extend: {\n      arguments: ['skewX', 'skewY', 'cx', 'cy'],\n      method: 'skew'\n    }\n\n  });\n\n  SVG.extend(SVG.Element, {\n    // Dynamic style generator\n    style: function (s, v) {\n      if (arguments.length == 0) {\n        // get full style\n        return this.node.style.cssText || '';\n      } else if (arguments.length < 2) {\n        // apply every style individually if an object is passed\n        if (typeof s == 'object') {\n          for (v in s) this.style(v, s[v]);\n        } else if (SVG.regex.isCss.test(s)) {\n          // parse css string\n          s = s.split(/\\s*;\\s*/)\n          // filter out suffix ; and stuff like ;;\n          .filter(function (e) {\n            return !!e;\n          }).map(function (e) {\n            return e.split(/\\s*:\\s*/);\n          });\n\n          // apply every definition individually\n          while (v = s.pop()) {\n            this.style(v[0], v[1]);\n          }\n        } else {\n          // act as a getter if the first and only argument is not an object\n          return this.node.style[camelCase(s)];\n        }\n      } else {\n        this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v;\n      }\n\n      return this;\n    }\n  });\n  SVG.Parent = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    , inherit: SVG.Element\n\n    // Add class methods\n    , extend: {\n      // Returns all child elements\n      children: function () {\n        return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function (node) {\n          return SVG.adopt(node);\n        });\n      }\n      // Add given element at a position\n      , add: function (element, i) {\n        if (i == null) this.node.appendChild(element.node);else if (element.node != this.node.childNodes[i]) this.node.insertBefore(element.node, this.node.childNodes[i]);\n\n        return this;\n      }\n      // Basically does the same as `add()` but returns the added element instead\n      , put: function (element, i) {\n        this.add(element, i);\n        return element;\n      }\n      // Checks if the given element is a child\n      , has: function (element) {\n        return this.index(element) >= 0;\n      }\n      // Gets index of given element\n      , index: function (element) {\n        return [].slice.call(this.node.childNodes).indexOf(element.node);\n      }\n      // Get a element at the given index\n      , get: function (i) {\n        return SVG.adopt(this.node.childNodes[i]);\n      }\n      // Get first child\n      , first: function () {\n        return this.get(0);\n      }\n      // Get the last child\n      , last: function () {\n        return this.get(this.node.childNodes.length - 1);\n      }\n      // Iterates over all children and invokes a given block\n      , each: function (block, deep) {\n        var i,\n            il,\n            children = this.children();\n\n        for (i = 0, il = children.length; i < il; i++) {\n          if (children[i] instanceof SVG.Element) block.apply(children[i], [i, children]);\n\n          if (deep && children[i] instanceof SVG.Container) children[i].each(block, deep);\n        }\n\n        return this;\n      }\n      // Remove a given child\n      , removeElement: function (element) {\n        this.node.removeChild(element.node);\n\n        return this;\n      }\n      // Remove all elements in this container\n      , clear: function () {\n        // remove children\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // remove defs reference\n        delete this._defs;\n\n        return this;\n      },\n      // Get defs\n      defs: function () {\n        return this.doc().defs();\n      }\n    }\n\n  });\n\n  SVG.extend(SVG.Parent, {\n\n    ungroup: function (parent, depth) {\n      if (depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this;\n\n      parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent));\n      depth = depth || Infinity;\n\n      this.each(function () {\n        if (this instanceof SVG.Defs) return this;\n        if (this instanceof SVG.Parent) return this.ungroup(parent, depth - 1);\n        return this.toParent(parent);\n      });\n\n      this.node.firstChild || this.remove();\n\n      return this;\n    },\n\n    flatten: function (parent, depth) {\n      return this.ungroup(parent, depth);\n    }\n\n  });\n  SVG.Container = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    , inherit: SVG.Parent\n\n  });\n\n  SVG.ViewBox = SVG.invent({\n\n    create: function (source) {\n      var i,\n          base = [0, 0, 0, 0];\n\n      var x,\n          y,\n          width,\n          height,\n          box,\n          view,\n          we,\n          he,\n          wm = 1 // width multiplier\n      ,\n          hm = 1 // height multiplier\n      ,\n          reg = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi;\n\n      if (source instanceof SVG.Element) {\n\n        we = source;\n        he = source;\n        view = (source.attr('viewBox') || '').match(reg);\n        box = source.bbox;\n\n        // get dimensions of current node\n        width = new SVG.Number(source.width());\n        height = new SVG.Number(source.height());\n\n        // find nearest non-percentual dimensions\n        while (width.unit == '%') {\n          wm *= width.value;\n          width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width());\n          we = we.parent();\n        }\n        while (height.unit == '%') {\n          hm *= height.value;\n          height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height());\n          he = he.parent();\n        }\n\n        // ensure defaults\n        this.x = 0;\n        this.y = 0;\n        this.width = width * wm;\n        this.height = height * hm;\n        this.zoom = 1;\n\n        if (view) {\n          // get width and height from viewbox\n          x = parseFloat(view[0]);\n          y = parseFloat(view[1]);\n          width = parseFloat(view[2]);\n          height = parseFloat(view[3]);\n\n          // calculate zoom accoring to viewbox\n          this.zoom = this.width / this.height > width / height ? this.height / height : this.width / width;\n\n          // calculate real pixel dimensions on parent SVG.Doc element\n          this.x = x;\n          this.y = y;\n          this.width = width;\n          this.height = height;\n        }\n      } else {\n\n        // ensure source as object\n        source = typeof source === 'string' ? source.match(reg).map(function (el) {\n          return parseFloat(el);\n        }) : Array.isArray(source) ? source : typeof source == 'object' ? [source.x, source.y, source.width, source.height] : arguments.length == 4 ? [].slice.call(arguments) : base;\n\n        this.x = source[0];\n        this.y = source[1];\n        this.width = source[2];\n        this.height = source[3];\n      }\n    },\n\n    extend: {\n\n      toString: function () {\n        return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height;\n      },\n      morph: function (x, y, width, height) {\n        this.destination = new SVG.ViewBox(x, y, width, height);\n        return this;\n      },\n\n      at: function (pos) {\n\n        if (!this.destination) return this;\n\n        return new SVG.ViewBox([this.x + (this.destination.x - this.x) * pos, this.y + (this.destination.y - this.y) * pos, this.width + (this.destination.width - this.width) * pos, this.height + (this.destination.height - this.height) * pos]);\n      }\n\n      // Define parent\n    }, parent: SVG.Container\n\n    // Add parent method\n    , construct: {\n\n      // get/set viewbox\n      viewbox: function (x, y, width, height) {\n        if (arguments.length == 0)\n          // act as a getter if there are no arguments\n          return new SVG.ViewBox(this);\n\n        // otherwise act as a setter\n        return this.attr('viewBox', new SVG.ViewBox(x, y, width, height));\n      }\n\n    }\n\n  })\n  // Add events to elements\n\n  ;['click', 'dblclick', 'mousedown', 'mouseup', 'mouseover', 'mouseout', 'mousemove', 'mouseenter', 'mouseleave', 'touchstart', 'touchmove', 'touchleave', 'touchend', 'touchcancel'].forEach(function (event) {\n    // add event to SVG.Element\n    SVG.Element.prototype[event] = function (f) {\n      // bind event to element rather than element node\n      if (f == null) {\n        SVG.off(this, event);\n      } else {\n        SVG.on(this, event, f);\n      }\n      return this;\n    };\n  });\n\n  SVG.listenerId = 0;\n\n  // Add event binder in the SVG namespace\n  SVG.on = function (node, events, listener, binding, options) {\n    var l = listener.bind(binding || node);\n    var n = node instanceof SVG.Element ? node.node : node;\n\n    // ensure instance object for nodes which are not adopted\n    n.instance = n.instance || { _events: {} };\n\n    var bag = n.instance._events;\n\n    // add id to listener\n    if (!listener._svgjsListenerId) {\n      listener._svgjsListenerId = ++SVG.listenerId;\n    }\n\n    events.split(SVG.regex.delimiter).forEach(function (event) {\n      var ev = event.split('.')[0];\n      var ns = event.split('.')[1] || '*';\n\n      // ensure valid object\n      bag[ev] = bag[ev] || {};\n      bag[ev][ns] = bag[ev][ns] || {};\n\n      // reference listener\n      bag[ev][ns][listener._svgjsListenerId] = l;\n\n      // add listener\n      n.addEventListener(ev, l, options || false);\n    });\n  };\n\n  // Add event unbinder in the SVG namespace\n  SVG.off = function (node, events, listener, options) {\n    var n = node instanceof SVG.Element ? node.node : node;\n    if (!n.instance) return;\n\n    // listener can be a function or a number\n    if (typeof listener === 'function') {\n      listener = listener._svgjsListenerId;\n      if (!listener) return;\n    }\n\n    var bag = n.instance._events;(events || '').split(SVG.regex.delimiter).forEach(function (event) {\n      var ev = event && event.split('.')[0];\n      var ns = event && event.split('.')[1];\n      var namespace, l;\n\n      if (listener) {\n        // remove listener reference\n        if (bag[ev] && bag[ev][ns || '*']) {\n          // removeListener\n          n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false);\n\n          delete bag[ev][ns || '*'][listener];\n        }\n      } else if (ev && ns) {\n        // remove all listeners for a namespaced event\n        if (bag[ev] && bag[ev][ns]) {\n          for (l in bag[ev][ns]) {\n            SVG.off(n, [ev, ns].join('.'), l);\n          }\n\n          delete bag[ev][ns];\n        }\n      } else if (ns) {\n        // remove all listeners for a specific namespace\n        for (event in bag) {\n          for (namespace in bag[event]) {\n            if (ns === namespace) {\n              SVG.off(n, [event, ns].join('.'));\n            }\n          }\n        }\n      } else if (ev) {\n        // remove all listeners for the event\n        if (bag[ev]) {\n          for (namespace in bag[ev]) {\n            SVG.off(n, [ev, namespace].join('.'));\n          }\n\n          delete bag[ev];\n        }\n      } else {\n        // remove all listeners on a given node\n        for (event in bag) {\n          SVG.off(n, event);\n        }\n\n        n.instance._events = {};\n      }\n    });\n  };\n\n  SVG.extend(SVG.Element, {\n    // Bind given event to listener\n    on: function (event, listener, binding, options) {\n      SVG.on(this, event, listener, binding, options);\n      return this;\n    },\n    // Unbind event from listener\n    off: function (event, listener) {\n      SVG.off(this.node, event, listener);\n      return this;\n    },\n    fire: function (event, data) {\n      // Dispatch event\n      if (event instanceof window.Event) {\n        this.node.dispatchEvent(event);\n      } else {\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, { detail: data, cancelable: true }));\n      }\n      this._event = event;\n      return this;\n    },\n    event: function () {\n      return this._event;\n    }\n  });\n\n  SVG.Defs = SVG.invent({\n    // Initialize node\n    create: 'defs'\n\n    // Inherit from\n    , inherit: SVG.Container\n\n  });\n  SVG.G = SVG.invent({\n    // Initialize node\n    create: 'g'\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Move over x-axis\n      x: function (x) {\n        return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true);\n      }\n      // Move over y-axis\n      , y: function (y) {\n        return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true);\n      }\n      // Move by center over x-axis\n      , cx: function (x) {\n        return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2);\n      }\n      // Move by center over y-axis\n      , cy: function (y) {\n        return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2);\n      },\n      gbox: function () {\n\n        var bbox = this.bbox(),\n            trans = this.transform();\n\n        bbox.x += trans.x;\n        bbox.x2 += trans.x;\n        bbox.cx += trans.x;\n\n        bbox.y += trans.y;\n        bbox.y2 += trans.y;\n        bbox.cy += trans.y;\n\n        return bbox;\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a group element\n      group: function () {\n        return this.put(new SVG.G());\n      }\n    }\n  });\n\n  SVG.Doc = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      if (element) {\n        // ensure the presence of a dom element\n        element = typeof element == 'string' ? document.getElementById(element) : element;\n\n        // If the target is an svg element, use that element as the main wrapper.\n        // This allows svg.js to work with svg documents as well.\n        if (element.nodeName == 'svg') {\n          this.constructor.call(this, element);\n        } else {\n          this.constructor.call(this, SVG.create('svg'));\n          element.appendChild(this.node);\n          this.size('100%', '100%');\n        }\n\n        // set svg element attributes and ensure defs node\n        this.namespace().defs();\n      }\n    }\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Add namespaces\n      namespace: function () {\n        return this.attr({ xmlns: SVG.ns, version: '1.1' }).attr('xmlns:xlink', SVG.xlink, SVG.xmlns).attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns);\n      }\n      // Creates and returns defs element\n      , defs: function () {\n        if (!this._defs) {\n          var defs;\n\n          // Find or create a defs element in this instance\n          if (defs = this.node.getElementsByTagName('defs')[0]) this._defs = SVG.adopt(defs);else this._defs = new SVG.Defs();\n\n          // Make sure the defs node is at the end of the stack\n          this.node.appendChild(this._defs.node);\n        }\n\n        return this._defs;\n      }\n      // custom parent method\n      , parent: function () {\n        if (!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null;\n        return this.node.parentNode;\n      }\n      // Fix for possible sub-pixel offset. See:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\n      , spof: function () {\n        var pos = this.node.getScreenCTM();\n\n        if (pos) this.style('left', -pos.e % 1 + 'px').style('top', -pos.f % 1 + 'px');\n\n        return this;\n      }\n\n      // Removes the doc from the DOM\n      , remove: function () {\n        if (this.parent()) {\n          this.parent().removeChild(this.node);\n        }\n\n        return this;\n      },\n      clear: function () {\n        // remove children\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // remove defs reference\n        delete this._defs;\n\n        // add back parser\n        if (!SVG.parser.draw.parentNode) this.node.appendChild(SVG.parser.draw);\n\n        return this;\n      },\n      clone: function (parent) {\n        // write dom data to the dom so the clone can pickup the data\n        this.writeDataToDom();\n\n        // get reference to node\n        var node = this.node;\n\n        // clone element and assign new id\n        var clone = assignNewId(node.cloneNode(true));\n\n        // insert the clone in the given parent or after myself\n        if (parent) {\n          (parent.node || parent).appendChild(clone.node);\n        } else {\n          node.parentNode.insertBefore(clone.node, node.nextSibling);\n        }\n\n        return clone;\n      }\n    }\n\n  });\n\n  // ### This module adds backward / forward functionality to elements.\n\n  //\n  SVG.extend(SVG.Element, {\n    // Get all siblings, including myself\n    siblings: function () {\n      return this.parent().children();\n    }\n    // Get the curent position siblings\n    , position: function () {\n      return this.parent().index(this);\n    }\n    // Get the next element (will return null if there is none)\n    , next: function () {\n      return this.siblings()[this.position() + 1];\n    }\n    // Get the next element (will return null if there is none)\n    , previous: function () {\n      return this.siblings()[this.position() - 1];\n    }\n    // Send given element one step forward\n    , forward: function () {\n      var i = this.position() + 1,\n          p = this.parent();\n\n      // move node one step forward\n      p.removeElement(this).add(this, i);\n\n      // make sure defs node is always at the top\n      if (p instanceof SVG.Doc) p.node.appendChild(p.defs().node);\n\n      return this;\n    }\n    // Send given element one step backward\n    , backward: function () {\n      var i = this.position();\n\n      if (i > 0) this.parent().removeElement(this).add(this, i - 1);\n\n      return this;\n    }\n    // Send given element all the way to the front\n    , front: function () {\n      var p = this.parent();\n\n      // Move node forward\n      p.node.appendChild(this.node);\n\n      // Make sure defs node is always at the top\n      if (p instanceof SVG.Doc) p.node.appendChild(p.defs().node);\n\n      return this;\n    }\n    // Send given element all the way to the back\n    , back: function () {\n      if (this.position() > 0) this.parent().removeElement(this).add(this, 0);\n\n      return this;\n    }\n    // Inserts a given element before the targeted element\n    , before: function (element) {\n      element.remove();\n\n      var i = this.position();\n\n      this.parent().add(element, i);\n\n      return this;\n    }\n    // Insters a given element after the targeted element\n    , after: function (element) {\n      element.remove();\n\n      var i = this.position();\n\n      this.parent().add(element, i + 1);\n\n      return this;\n    }\n\n  });\n  SVG.Mask = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('mask'));\n\n      // keep references to masked elements\n      this.targets = [];\n    }\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Unmask all masked elements and remove itself\n      remove: function () {\n        // unmask all targets\n        for (var i = this.targets.length - 1; i >= 0; i--) if (this.targets[i]) this.targets[i].unmask();\n        this.targets = [];\n\n        // remove mask from parent\n        SVG.Element.prototype.remove.call(this);\n\n        return this;\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create masking element\n      mask: function () {\n        return this.defs().put(new SVG.Mask());\n      }\n    }\n  });\n\n  SVG.extend(SVG.Element, {\n    // Distribute mask to svg element\n    maskWith: function (element) {\n      // use given mask or create a new one\n      this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element);\n\n      // store reverence on self in mask\n      this.masker.targets.push(this);\n\n      // apply mask\n      return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")');\n    }\n    // Unmask element\n    , unmask: function () {\n      delete this.masker;\n      return this.attr('mask', null);\n    }\n\n  });\n\n  SVG.ClipPath = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('clipPath'));\n\n      // keep references to clipped elements\n      this.targets = [];\n    }\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Unclip all clipped elements and remove itself\n      remove: function () {\n        // unclip all targets\n        for (var i = this.targets.length - 1; i >= 0; i--) if (this.targets[i]) this.targets[i].unclip();\n        this.targets = [];\n\n        // remove clipPath from parent\n        this.parent().removeElement(this);\n\n        return this;\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create clipping element\n      clip: function () {\n        return this.defs().put(new SVG.ClipPath());\n      }\n    }\n  });\n\n  //\n  SVG.extend(SVG.Element, {\n    // Distribute clipPath to svg element\n    clipWith: function (element) {\n      // use given clip or create a new one\n      this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element);\n\n      // store reverence on self in mask\n      this.clipper.targets.push(this);\n\n      // apply mask\n      return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")');\n    }\n    // Unclip element\n    , unclip: function () {\n      delete this.clipper;\n      return this.attr('clip-path', null);\n    }\n\n  });\n  SVG.Gradient = SVG.invent({\n    // Initialize node\n    create: function (type) {\n      this.constructor.call(this, SVG.create(type + 'Gradient'));\n\n      // store type\n      this.type = type;\n    }\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Add a color stop\n      at: function (offset, color, opacity) {\n        return this.put(new SVG.Stop()).update(offset, color, opacity);\n      }\n      // Update gradient\n      , update: function (block) {\n        // remove all stops\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n\n        return this;\n      }\n      // Return the fill id\n      , fill: function () {\n        return 'url(#' + this.id() + ')';\n      }\n      // Alias string convertion to fill\n      , toString: function () {\n        return this.fill();\n      }\n      // custom attr to handle transform\n      , attr: function (a, b, c) {\n        if (a == 'transform') a = 'gradientTransform';\n        return SVG.Container.prototype.attr.call(this, a, b, c);\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create gradient element in defs\n      gradient: function (type, block) {\n        return this.defs().gradient(type, block);\n      }\n    }\n  });\n\n  // Add animatable methods to both gradient and fx module\n  SVG.extend(SVG.Gradient, SVG.FX, {\n    // From position\n    from: function (x, y) {\n      return (this._target || this).type == 'radial' ? this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) : this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) });\n    }\n    // To position\n    , to: function (x, y) {\n      return (this._target || this).type == 'radial' ? this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) : this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) });\n    }\n  });\n\n  // Base gradient generation\n  SVG.extend(SVG.Defs, {\n    // define gradient\n    gradient: function (type, block) {\n      return this.put(new SVG.Gradient(type)).update(block);\n    }\n\n  });\n\n  SVG.Stop = SVG.invent({\n    // Initialize node\n    create: 'stop'\n\n    // Inherit from\n    , inherit: SVG.Element\n\n    // Add class methods\n    , extend: {\n      // add color stops\n      update: function (o) {\n        if (typeof o == 'number' || o instanceof SVG.Number) {\n          o = {\n            offset: arguments[0],\n            color: arguments[1],\n            opacity: arguments[2]\n          };\n        }\n\n        // set attributes\n        if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n        if (o.color != null) this.attr('stop-color', o.color);\n        if (o.offset != null) this.attr('offset', new SVG.Number(o.offset));\n\n        return this;\n      }\n    }\n\n  });\n\n  SVG.Pattern = SVG.invent({\n    // Initialize node\n    create: 'pattern'\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Return the fill id\n      fill: function () {\n        return 'url(#' + this.id() + ')';\n      }\n      // Update pattern by rebuilding\n      , update: function (block) {\n        // remove content\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n\n        return this;\n      }\n      // Alias string convertion to fill\n      , toString: function () {\n        return this.fill();\n      }\n      // custom attr to handle transform\n      , attr: function (a, b, c) {\n        if (a == 'transform') a = 'patternTransform';\n        return SVG.Container.prototype.attr.call(this, a, b, c);\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create pattern element in defs\n      pattern: function (width, height, block) {\n        return this.defs().pattern(width, height, block);\n      }\n    }\n  });\n\n  SVG.extend(SVG.Defs, {\n    // Define gradient\n    pattern: function (width, height, block) {\n      return this.put(new SVG.Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      });\n    }\n\n  });\n  SVG.Shape = SVG.invent({\n    // Initialize node\n    create: function (element) {\n      this.constructor.call(this, element);\n    }\n\n    // Inherit from\n    , inherit: SVG.Element\n\n  });\n\n  SVG.Bare = SVG.invent({\n    // Initialize\n    create: function (element, inherit) {\n      // construct element\n      this.constructor.call(this, SVG.create(element));\n\n      // inherit custom methods\n      if (inherit) for (var method in inherit.prototype) if (typeof inherit.prototype[method] === 'function') this[method] = inherit.prototype[method];\n    }\n\n    // Inherit from\n    , inherit: SVG.Element\n\n    // Add methods\n    , extend: {\n      // Insert some plain text\n      words: function (text) {\n        // remove contents\n        while (this.node.hasChildNodes()) this.node.removeChild(this.node.lastChild);\n\n        // create text node\n        this.node.appendChild(document.createTextNode(text));\n\n        return this;\n      }\n    }\n  });\n\n  SVG.extend(SVG.Parent, {\n    // Create an element that is not described by SVG.js\n    element: function (element, inherit) {\n      return this.put(new SVG.Bare(element, inherit));\n    }\n  });\n\n  SVG.Symbol = SVG.invent({\n    // Initialize node\n    create: 'symbol'\n\n    // Inherit from\n    , inherit: SVG.Container,\n\n    construct: {\n      // create symbol\n      symbol: function () {\n        return this.put(new SVG.Symbol());\n      }\n    }\n  });\n\n  SVG.Use = SVG.invent({\n    // Initialize node\n    create: 'use'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // Use element as a reference\n      element: function (element, file) {\n        // Set lined element\n        return this.attr('href', (file || '') + '#' + element, SVG.xlink);\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a use element\n      use: function (element, file) {\n        return this.put(new SVG.Use()).element(element, file);\n      }\n    }\n  });\n  SVG.Rect = SVG.invent({\n    // Initialize node\n    create: 'rect'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add parent method\n    , construct: {\n      // Create a rect element\n      rect: function (width, height) {\n        return this.put(new SVG.Rect()).size(width, height);\n      }\n    }\n  });\n  SVG.Circle = SVG.invent({\n    // Initialize node\n    create: 'circle'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add parent method\n    , construct: {\n      // Create circle element, based on ellipse\n      circle: function (size) {\n        return this.put(new SVG.Circle()).rx(new SVG.Number(size).divide(2)).move(0, 0);\n      }\n    }\n  });\n\n  SVG.extend(SVG.Circle, SVG.FX, {\n    // Radius x value\n    rx: function (rx) {\n      return this.attr('r', rx);\n    }\n    // Alias radius x value\n    , ry: function (ry) {\n      return this.rx(ry);\n    }\n  });\n\n  SVG.Ellipse = SVG.invent({\n    // Initialize node\n    create: 'ellipse'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add parent method\n    , construct: {\n      // Create an ellipse\n      ellipse: function (width, height) {\n        return this.put(new SVG.Ellipse()).size(width, height).move(0, 0);\n      }\n    }\n  });\n\n  SVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n    // Radius x value\n    rx: function (rx) {\n      return this.attr('rx', rx);\n    }\n    // Radius y value\n    , ry: function (ry) {\n      return this.attr('ry', ry);\n    }\n  });\n\n  // Add common method\n  SVG.extend(SVG.Circle, SVG.Ellipse, {\n    // Move over x-axis\n    x: function (x) {\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx());\n    }\n    // Move over y-axis\n    , y: function (y) {\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry());\n    }\n    // Move by center over x-axis\n    , cx: function (x) {\n      return x == null ? this.attr('cx') : this.attr('cx', x);\n    }\n    // Move by center over y-axis\n    , cy: function (y) {\n      return y == null ? this.attr('cy') : this.attr('cy', y);\n    }\n    // Set width of element\n    , width: function (width) {\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2));\n    }\n    // Set height of element\n    , height: function (height) {\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2));\n    }\n    // Custom size function\n    , size: function (width, height) {\n      var p = proportionalSize(this, width, height);\n\n      return this.rx(new SVG.Number(p.width).divide(2)).ry(new SVG.Number(p.height).divide(2));\n    }\n  });\n  SVG.Line = SVG.invent({\n    // Initialize node\n    create: 'line'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // Get array\n      array: function () {\n        return new SVG.PointArray([[this.attr('x1'), this.attr('y1')], [this.attr('x2'), this.attr('y2')]]);\n      }\n      // Overwrite native plot() method\n      , plot: function (x1, y1, x2, y2) {\n        if (x1 == null) return this.array();else if (typeof y1 !== 'undefined') x1 = { x1: x1, y1: y1, x2: x2, y2: y2 };else x1 = new SVG.PointArray(x1).toLine();\n\n        return this.attr(x1);\n      }\n      // Move by left top corner\n      , move: function (x, y) {\n        return this.attr(this.array().move(x, y).toLine());\n      }\n      // Set element size to given width and height\n      , size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n\n        return this.attr(this.array().size(p.width, p.height).toLine());\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a line element\n      line: function (x1, y1, x2, y2) {\n        // make sure plot is called as a setter\n        // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\n        return SVG.Line.prototype.plot.apply(this.put(new SVG.Line()), x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]);\n      }\n    }\n  });\n\n  SVG.Polyline = SVG.invent({\n    // Initialize node\n    create: 'polyline'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add parent method\n    , construct: {\n      // Create a wrapped polyline element\n      polyline: function (p) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Polyline()).plot(p || new SVG.PointArray());\n      }\n    }\n  });\n\n  SVG.Polygon = SVG.invent({\n    // Initialize node\n    create: 'polygon'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add parent method\n    , construct: {\n      // Create a wrapped polygon element\n      polygon: function (p) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Polygon()).plot(p || new SVG.PointArray());\n      }\n    }\n  });\n\n  // Add polygon-specific functions\n  SVG.extend(SVG.Polyline, SVG.Polygon, {\n    // Get array\n    array: function () {\n      return this._array || (this._array = new SVG.PointArray(this.attr('points')));\n    }\n    // Plot new path\n    , plot: function (p) {\n      return p == null ? this.array() : this.clear().attr('points', typeof p == 'string' ? p : this._array = new SVG.PointArray(p));\n    }\n    // Clear array cache\n    , clear: function () {\n      delete this._array;\n      return this;\n    }\n    // Move by left top corner\n    , move: function (x, y) {\n      return this.attr('points', this.array().move(x, y));\n    }\n    // Set element size to given width and height\n    , size: function (width, height) {\n      var p = proportionalSize(this, width, height);\n\n      return this.attr('points', this.array().size(p.width, p.height));\n    }\n\n  });\n\n  // unify all point to point elements\n  SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n    // Define morphable array\n    morphArray: SVG.PointArray\n    // Move by left top corner over x-axis\n    , x: function (x) {\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y);\n    }\n    // Move by left top corner over y-axis\n    , y: function (y) {\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y);\n    }\n    // Set width of element\n    , width: function (width) {\n      var b = this.bbox();\n\n      return width == null ? b.width : this.size(width, b.height);\n    }\n    // Set height of element\n    , height: function (height) {\n      var b = this.bbox();\n\n      return height == null ? b.height : this.size(b.width, height);\n    }\n  });\n  SVG.Path = SVG.invent({\n    // Initialize node\n    create: 'path'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // Define morphable array\n      morphArray: SVG.PathArray\n      // Get array\n      , array: function () {\n        return this._array || (this._array = new SVG.PathArray(this.attr('d')));\n      }\n      // Plot new path\n      , plot: function (d) {\n        return d == null ? this.array() : this.clear().attr('d', typeof d == 'string' ? d : this._array = new SVG.PathArray(d));\n      }\n      // Clear array cache\n      , clear: function () {\n        delete this._array;\n        return this;\n      }\n      // Move by left top corner\n      , move: function (x, y) {\n        return this.attr('d', this.array().move(x, y));\n      }\n      // Move by left top corner over x-axis\n      , x: function (x) {\n        return x == null ? this.bbox().x : this.move(x, this.bbox().y);\n      }\n      // Move by left top corner over y-axis\n      , y: function (y) {\n        return y == null ? this.bbox().y : this.move(this.bbox().x, y);\n      }\n      // Set element size to given width and height\n      , size: function (width, height) {\n        var p = proportionalSize(this, width, height);\n\n        return this.attr('d', this.array().size(p.width, p.height));\n      }\n      // Set width of element\n      , width: function (width) {\n        return width == null ? this.bbox().width : this.size(width, this.bbox().height);\n      }\n      // Set height of element\n      , height: function (height) {\n        return height == null ? this.bbox().height : this.size(this.bbox().width, height);\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a wrapped path element\n      path: function (d) {\n        // make sure plot is called as a setter\n        return this.put(new SVG.Path()).plot(d || new SVG.PathArray());\n      }\n    }\n  });\n\n  SVG.Image = SVG.invent({\n    // Initialize node\n    create: 'image'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // (re)load image\n      load: function (url) {\n        if (!url) return this;\n\n        var self = this,\n            img = new window.Image();\n\n        // preload image\n        SVG.on(img, 'load', function () {\n          SVG.off(img);\n\n          var p = self.parent(SVG.Pattern);\n\n          if (p === null) return;\n\n          // ensure image size\n          if (self.width() == 0 && self.height() == 0) self.size(img.width, img.height);\n\n          // ensure pattern size if not set\n          if (p && p.width() == 0 && p.height() == 0) p.size(self.width(), self.height());\n\n          // callback\n          if (typeof self._loaded === 'function') self._loaded.call(self, {\n            width: img.width,\n            height: img.height,\n            ratio: img.width / img.height,\n            url: url\n          });\n        });\n\n        SVG.on(img, 'error', function (e) {\n          SVG.off(img);\n\n          if (typeof self._error === 'function') {\n            self._error.call(self, e);\n          }\n        });\n\n        return this.attr('href', img.src = this.src = url, SVG.xlink);\n      }\n      // Add loaded callback\n      , loaded: function (loaded) {\n        this._loaded = loaded;\n        return this;\n      },\n\n      error: function (error) {\n        this._error = error;\n        return this;\n      }\n\n      // Add parent method\n    }, construct: {\n      // create image element, load image and set its size\n      image: function (source, width, height) {\n        return this.put(new SVG.Image()).load(source).size(width || 0, height || width || 0);\n      }\n    }\n\n  });\n  SVG.Text = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('text'));\n\n      this.dom.leading = new SVG.Number(1.3); // store leading value for rebuilding\n      this._rebuild = true; // enable automatic updating of dy values\n      this._build = false; // disable build mode for adding multiple lines\n\n      // set default font\n      this.attr('font-family', SVG.defaults.attrs['font-family']);\n    }\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // Move over x-axis\n      x: function (x) {\n        // act as getter\n        if (x == null) return this.attr('x');\n\n        return this.attr('x', x);\n      }\n      // Move over y-axis\n      , y: function (y) {\n        var oy = this.attr('y'),\n            o = typeof oy === 'number' ? oy - this.bbox().y : 0;\n\n        // act as getter\n        if (y == null) return typeof oy === 'number' ? oy - o : oy;\n\n        return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y);\n      }\n      // Move center over x-axis\n      , cx: function (x) {\n        return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2);\n      }\n      // Move center over y-axis\n      , cy: function (y) {\n        return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2);\n      }\n      // Set the text content\n      , text: function (text) {\n        // act as getter\n        if (typeof text === 'undefined') {\n          var text = '';\n          var children = this.node.childNodes;\n          for (var i = 0, len = children.length; i < len; ++i) {\n\n            // add newline if its not the first child and newLined is set to true\n            if (i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true) {\n              text += '\\n';\n            }\n\n            // add content of this node\n            text += children[i].textContent;\n          }\n\n          return text;\n        }\n\n        // remove existing content\n        this.clear().build(true);\n\n        if (typeof text === 'function') {\n          // call block\n          text.call(this, this);\n        } else {\n          // store text and make sure text is not blank\n          text = text.split('\\n');\n\n          // build new lines\n          for (var i = 0, il = text.length; i < il; i++) this.tspan(text[i]).newLine();\n        }\n\n        // disable build mode and rebuild lines\n        return this.build(false).rebuild();\n      }\n      // Set font size\n      , size: function (size) {\n        return this.attr('font-size', size).rebuild();\n      }\n      // Set / get leading\n      , leading: function (value) {\n        // act as getter\n        if (value == null) return this.dom.leading;\n\n        // act as setter\n        this.dom.leading = new SVG.Number(value);\n\n        return this.rebuild();\n      }\n      // Get all the first level lines\n      , lines: function () {\n        var node = (this.textPath && this.textPath() || this).node;\n\n        // filter tspans and map them to SVG.js instances\n        var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function (el) {\n          return SVG.adopt(el);\n        });\n\n        // return an instance of SVG.set\n        return new SVG.Set(lines);\n      }\n      // Rebuild appearance type\n      , rebuild: function (rebuild) {\n        // store new rebuild flag if given\n        if (typeof rebuild == 'boolean') this._rebuild = rebuild;\n\n        // define position of all lines\n        if (this._rebuild) {\n          var self = this,\n              blankLineOffset = 0,\n              dy = this.dom.leading * new SVG.Number(this.attr('font-size'));\n\n          this.lines().each(function () {\n            if (this.dom.newLined) {\n              if (!self.textPath()) this.attr('x', self.attr('x'));\n              if (this.text() == '\\n') {\n                blankLineOffset += dy;\n              } else {\n                this.attr('dy', dy + blankLineOffset);\n                blankLineOffset = 0;\n              }\n            }\n          });\n\n          this.fire('rebuild');\n        }\n\n        return this;\n      }\n      // Enable / disable build mode\n      , build: function (build) {\n        this._build = !!build;\n        return this;\n      }\n      // overwrite method from parent to set data properly\n      , setData: function (o) {\n        this.dom = o;\n        this.dom.leading = new SVG.Number(o.leading || 1.3);\n        return this;\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create text element\n      text: function (text) {\n        return this.put(new SVG.Text()).text(text);\n      }\n      // Create plain text element\n      , plain: function (text) {\n        return this.put(new SVG.Text()).plain(text);\n      }\n    }\n\n  });\n\n  SVG.Tspan = SVG.invent({\n    // Initialize node\n    create: 'tspan'\n\n    // Inherit from\n    , inherit: SVG.Shape\n\n    // Add class methods\n    , extend: {\n      // Set text content\n      text: function (text) {\n        if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '');\n\n        typeof text === 'function' ? text.call(this, this) : this.plain(text);\n\n        return this;\n      }\n      // Shortcut dx\n      , dx: function (dx) {\n        return this.attr('dx', dx);\n      }\n      // Shortcut dy\n      , dy: function (dy) {\n        return this.attr('dy', dy);\n      }\n      // Create new line\n      , newLine: function () {\n        // fetch text parent\n        var t = this.parent(SVG.Text);\n\n        // mark new line\n        this.dom.newLined = true;\n\n        // apply new hy¡n\n        return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x());\n      }\n    }\n\n  });\n\n  SVG.extend(SVG.Text, SVG.Tspan, {\n    // Create plain text node\n    plain: function (text) {\n      // clear if build mode is disabled\n      if (this._build === false) this.clear();\n\n      // create text node\n      this.node.appendChild(document.createTextNode(text));\n\n      return this;\n    }\n    // Create a tspan\n    , tspan: function (text) {\n      var node = (this.textPath && this.textPath() || this).node,\n          tspan = new SVG.Tspan();\n\n      // clear if build mode is disabled\n      if (this._build === false) this.clear();\n\n      // add new tspan\n      node.appendChild(tspan.node);\n\n      return tspan.text(text);\n    }\n    // Clear all lines\n    , clear: function () {\n      var node = (this.textPath && this.textPath() || this).node;\n\n      // remove existing child nodes\n      while (node.hasChildNodes()) node.removeChild(node.lastChild);\n\n      return this;\n    }\n    // Get length of text element\n    , length: function () {\n      return this.node.getComputedTextLength();\n    }\n  });\n\n  SVG.TextPath = SVG.invent({\n    // Initialize node\n    create: 'textPath'\n\n    // Inherit from\n    , inherit: SVG.Parent\n\n    // Define parent class\n    , parent: SVG.Text\n\n    // Add parent method\n    , construct: {\n      morphArray: SVG.PathArray\n      // Create path for text to run on\n      , path: function (d) {\n        // create textPath element\n        var path = new SVG.TextPath(),\n            track = this.doc().defs().path(d);\n\n        // move lines to textpath\n        while (this.node.hasChildNodes()) path.node.appendChild(this.node.firstChild);\n\n        // add textPath element as child node\n        this.node.appendChild(path.node);\n\n        // link textPath to path and add content\n        path.attr('href', '#' + track, SVG.xlink);\n\n        return this;\n      }\n      // return the array of the path track element\n      , array: function () {\n        var track = this.track();\n\n        return track ? track.array() : null;\n      }\n      // Plot path if any\n      , plot: function (d) {\n        var track = this.track(),\n            pathArray = null;\n\n        if (track) {\n          pathArray = track.plot(d);\n        }\n\n        return d == null ? pathArray : this;\n      }\n      // Get the path track element\n      , track: function () {\n        var path = this.textPath();\n\n        if (path) return path.reference('href');\n      }\n      // Get the textPath child\n      , textPath: function () {\n        if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath') return SVG.adopt(this.node.firstChild);\n      }\n    }\n  });\n\n  SVG.Nested = SVG.invent({\n    // Initialize node\n    create: function () {\n      this.constructor.call(this, SVG.create('svg'));\n\n      this.style('overflow', 'visible');\n    }\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add parent method\n    , construct: {\n      // Create nested svg document\n      nested: function () {\n        return this.put(new SVG.Nested());\n      }\n    }\n  });\n  SVG.A = SVG.invent({\n    // Initialize node\n    create: 'a'\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Link url\n      to: function (url) {\n        return this.attr('href', url, SVG.xlink);\n      }\n      // Link show attribute\n      , show: function (target) {\n        return this.attr('show', target, SVG.xlink);\n      }\n      // Link target attribute\n      , target: function (target) {\n        return this.attr('target', target);\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a hyperlink element\n      link: function (url) {\n        return this.put(new SVG.A()).to(url);\n      }\n    }\n  });\n\n  SVG.extend(SVG.Element, {\n    // Create a hyperlink element\n    linkTo: function (url) {\n      var link = new SVG.A();\n\n      if (typeof url == 'function') url.call(link, link);else link.to(url);\n\n      return this.parent().put(link).put(this);\n    }\n\n  });\n  SVG.Marker = SVG.invent({\n    // Initialize node\n    create: 'marker'\n\n    // Inherit from\n    , inherit: SVG.Container\n\n    // Add class methods\n    , extend: {\n      // Set width of element\n      width: function (width) {\n        return this.attr('markerWidth', width);\n      }\n      // Set height of element\n      , height: function (height) {\n        return this.attr('markerHeight', height);\n      }\n      // Set marker refX and refY\n      , ref: function (x, y) {\n        return this.attr('refX', x).attr('refY', y);\n      }\n      // Update marker\n      , update: function (block) {\n        // remove all content\n        this.clear();\n\n        // invoke passed block\n        if (typeof block == 'function') block.call(this, this);\n\n        return this;\n      }\n      // Return the fill id\n      , toString: function () {\n        return 'url(#' + this.id() + ')';\n      }\n\n      // Add parent method\n    }, construct: {\n      marker: function (width, height, block) {\n        // Create marker element in defs\n        return this.defs().marker(width, height, block);\n      }\n    }\n\n  });\n\n  SVG.extend(SVG.Defs, {\n    // Create marker\n    marker: function (width, height, block) {\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n      return this.put(new SVG.Marker()).size(width, height).ref(width / 2, height / 2).viewbox(0, 0, width, height).attr('orient', 'auto').update(block);\n    }\n\n  });\n\n  SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\n    // Create and attach markers\n    marker: function (marker, width, height, block) {\n      var attr = ['marker'];\n\n      // Build attribute name\n      if (marker != 'all') attr.push(marker);\n      attr = attr.join('-');\n\n      // Set marker attribute\n      marker = arguments[1] instanceof SVG.Marker ? arguments[1] : this.doc().marker(width, height, block);\n\n      return this.attr(attr, marker);\n    }\n\n  });\n  // Define list of available attributes for stroke and fill\n  var sugar = {\n    stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset'],\n    fill: ['color', 'opacity', 'rule'],\n    prefix: function (t, a) {\n      return a == 'color' ? t : t + '-' + a;\n    }\n\n    // Add sugar for fill and stroke\n  };['fill', 'stroke'].forEach(function (m) {\n    var i,\n        extension = {};\n\n    extension[m] = function (o) {\n      if (typeof o == 'undefined') return this;\n      if (typeof o == 'string' || SVG.Color.isRgb(o) || o && typeof o.fill === 'function') this.attr(m, o);else\n        // set all attributes from sugar.fill and sugar.stroke list\n        for (i = sugar[m].length - 1; i >= 0; i--) if (o[sugar[m][i]] != null) this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]]);\n\n      return this;\n    };\n\n    SVG.extend(SVG.Element, SVG.FX, extension);\n  });\n\n  SVG.extend(SVG.Element, SVG.FX, {\n    // Map rotation to transform\n    rotate: function (d, cx, cy) {\n      return this.transform({ rotation: d, cx: cx, cy: cy });\n    }\n    // Map skew to transform\n    , skew: function (x, y, cx, cy) {\n      return arguments.length == 1 || arguments.length == 3 ? this.transform({ skew: x, cx: y, cy: cx }) : this.transform({ skewX: x, skewY: y, cx: cx, cy: cy });\n    }\n    // Map scale to transform\n    , scale: function (x, y, cx, cy) {\n      return arguments.length == 1 || arguments.length == 3 ? this.transform({ scale: x, cx: y, cy: cx }) : this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy });\n    }\n    // Map translate to transform\n    , translate: function (x, y) {\n      return this.transform({ x: x, y: y });\n    }\n    // Map flip to transform\n    , flip: function (a, o) {\n      o = typeof a == 'number' ? a : o;\n      return this.transform({ flip: a || 'both', offset: o });\n    }\n    // Map matrix to transform\n    , matrix: function (m) {\n      return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m));\n    }\n    // Opacity\n    , opacity: function (value) {\n      return this.attr('opacity', value);\n    }\n    // Relative move over x axis\n    , dx: function (x) {\n      return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true);\n    }\n    // Relative move over y axis\n    , dy: function (y) {\n      return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true);\n    }\n    // Relative move over x and y axes\n    , dmove: function (x, y) {\n      return this.dx(x).dy(y);\n    }\n  });\n\n  SVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\n    // Add x and y radius\n    radius: function (x, y) {\n      var type = (this._target || this).type;\n      return type == 'radial' || type == 'circle' ? this.attr('r', new SVG.Number(x)) : this.rx(x).ry(y == null ? x : y);\n    }\n  });\n\n  SVG.extend(SVG.Path, {\n    // Get path length\n    length: function () {\n      return this.node.getTotalLength();\n    }\n    // Get point at length\n    , pointAt: function (length) {\n      return this.node.getPointAtLength(length);\n    }\n  });\n\n  SVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\n    // Set font\n    font: function (a, v) {\n      if (typeof a == 'object') {\n        for (v in a) this.font(v, a[v]);\n      }\n\n      return a == 'leading' ? this.leading(v) : a == 'anchor' ? this.attr('text-anchor', v) : a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ? this.attr('font-' + a, v) : this.attr(a, v);\n    }\n  });\n\n  SVG.Set = SVG.invent({\n    // Initialize\n    create: function (members) {\n      if (members instanceof SVG.Set) {\n        this.members = members.members.slice();\n      } else {\n        Array.isArray(members) ? this.members = members : this.clear();\n      }\n    }\n\n    // Add class methods\n    , extend: {\n      // Add element to set\n      add: function () {\n        var i,\n            il,\n            elements = [].slice.call(arguments);\n\n        for (i = 0, il = elements.length; i < il; i++) this.members.push(elements[i]);\n\n        return this;\n      }\n      // Remove element from set\n      , remove: function (element) {\n        var i = this.index(element);\n\n        // remove given child\n        if (i > -1) this.members.splice(i, 1);\n\n        return this;\n      }\n      // Iterate over all members\n      , each: function (block) {\n        for (var i = 0, il = this.members.length; i < il; i++) block.apply(this.members[i], [i, this.members]);\n\n        return this;\n      }\n      // Restore to defaults\n      , clear: function () {\n        // initialize store\n        this.members = [];\n\n        return this;\n      }\n      // Get the length of a set\n      , length: function () {\n        return this.members.length;\n      }\n      // Checks if a given element is present in set\n      , has: function (element) {\n        return this.index(element) >= 0;\n      }\n      // retuns index of given element in set\n      , index: function (element) {\n        return this.members.indexOf(element);\n      }\n      // Get member at given index\n      , get: function (i) {\n        return this.members[i];\n      }\n      // Get first member\n      , first: function () {\n        return this.get(0);\n      }\n      // Get last member\n      , last: function () {\n        return this.get(this.members.length - 1);\n      }\n      // Default value\n      , valueOf: function () {\n        return this.members;\n      }\n      // Get the bounding box of all members included or empty box if set has no items\n      , bbox: function () {\n        // return an empty box of there are no members\n        if (this.members.length == 0) return new SVG.RBox();\n\n        // get the first rbox and update the target bbox\n        var rbox = this.members[0].rbox(this.members[0].doc());\n\n        this.each(function () {\n          // user rbox for correct position and visual representation\n          rbox = rbox.merge(this.rbox(this.doc()));\n        });\n\n        return rbox;\n      }\n\n      // Add parent method\n    }, construct: {\n      // Create a new set\n      set: function (members) {\n        return new SVG.Set(members);\n      }\n    }\n  });\n\n  SVG.FX.Set = SVG.invent({\n    // Initialize node\n    create: function (set) {\n      // store reference to set\n      this.set = set;\n    }\n\n  });\n\n  // Alias methods\n  SVG.Set.inherit = function () {\n    var m,\n        methods = [];\n\n    // gather shape methods\n    for (var m in SVG.Shape.prototype) if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function') methods.push(m);\n\n    // apply shape aliasses\n    methods.forEach(function (method) {\n      SVG.Set.prototype[method] = function () {\n        for (var i = 0, il = this.members.length; i < il; i++) if (this.members[i] && typeof this.members[i][method] == 'function') this.members[i][method].apply(this.members[i], arguments);\n\n        return method == 'animate' ? this.fx || (this.fx = new SVG.FX.Set(this)) : this;\n      };\n    });\n\n    // clear methods for the next round\n    methods = [];\n\n    // gather fx methods\n    for (var m in SVG.FX.prototype) if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function') methods.push(m);\n\n    // apply fx aliasses\n    methods.forEach(function (method) {\n      SVG.FX.Set.prototype[method] = function () {\n        for (var i = 0, il = this.set.members.length; i < il; i++) this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments);\n\n        return this;\n      };\n    });\n  };\n\n  SVG.extend(SVG.Element, {\n    // Store data values on svg nodes\n    data: function (a, v, r) {\n      if (typeof a == 'object') {\n        for (v in a) this.data(v, a[v]);\n      } else if (arguments.length < 2) {\n        try {\n          return JSON.parse(this.attr('data-' + a));\n        } catch (e) {\n          return this.attr('data-' + a);\n        }\n      } else {\n        this.attr('data-' + a, v === null ? null : r === true || typeof v === 'string' || typeof v === 'number' ? v : JSON.stringify(v));\n      }\n\n      return this;\n    }\n  });\n  SVG.extend(SVG.Element, {\n    // Remember arbitrary data\n    remember: function (k, v) {\n      // remember every item in an object individually\n      if (typeof arguments[0] == 'object') for (var v in k) this.remember(v, k[v]);\n\n      // retrieve memory\n      else if (arguments.length == 1) return this.memory()[k];\n\n        // store memory\n        else this.memory()[k] = v;\n\n      return this;\n    }\n\n    // Erase a given memory\n    , forget: function () {\n      if (arguments.length == 0) this._memory = {};else for (var i = arguments.length - 1; i >= 0; i--) delete this.memory()[arguments[i]];\n\n      return this;\n    }\n\n    // Initialize or return local memory object\n    , memory: function () {\n      return this._memory || (this._memory = {});\n    }\n\n  });\n  // Method for getting an element by id\n  SVG.get = function (id) {\n    var node = document.getElementById(idFromReference(id) || id);\n    return SVG.adopt(node);\n  };\n\n  // Select elements by query string\n  SVG.select = function (query, parent) {\n    return new SVG.Set(SVG.utils.map((parent || document).querySelectorAll(query), function (node) {\n      return SVG.adopt(node);\n    }));\n  };\n\n  SVG.extend(SVG.Parent, {\n    // Scoped select method\n    select: function (query) {\n      return SVG.select(query, this.node);\n    }\n\n  });\n  function pathRegReplace(a, b, c, d) {\n    return c + d.replace(SVG.regex.dots, ' .');\n  }\n\n  // creates deep clone of array\n  function array_clone(arr) {\n    var clone = arr.slice(0);\n    for (var i = clone.length; i--;) {\n      if (Array.isArray(clone[i])) {\n        clone[i] = array_clone(clone[i]);\n      }\n    }\n    return clone;\n  }\n\n  // tests if a given element is instance of an object\n  function is(el, obj) {\n    return el instanceof obj;\n  }\n\n  // tests if a given selector matches an element\n  function matches(el, selector) {\n    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n  }\n\n  // Convert dash-separated-string to camelCase\n  function camelCase(s) {\n    return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n      return g.toUpperCase();\n    });\n  }\n\n  // Capitalize first letter of a string\n  function capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  // Ensure to six-based hex\n  function fullHex(hex) {\n    return hex.length == 4 ? ['#', hex.substring(1, 2), hex.substring(1, 2), hex.substring(2, 3), hex.substring(2, 3), hex.substring(3, 4), hex.substring(3, 4)].join('') : hex;\n  }\n\n  // Component to hex value\n  function compToHex(comp) {\n    var hex = comp.toString(16);\n    return hex.length == 1 ? '0' + hex : hex;\n  }\n\n  // Calculate proportional width and height values when necessary\n  function proportionalSize(element, width, height) {\n    if (width == null || height == null) {\n      var box = element.bbox();\n\n      if (width == null) width = box.width / box.height * height;else if (height == null) height = box.height / box.width * width;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  // Delta transform point\n  function deltaTransformPoint(matrix, x, y) {\n    return {\n      x: x * matrix.a + y * matrix.c + 0,\n      y: x * matrix.b + y * matrix.d + 0\n    };\n  }\n\n  // Map matrix array to object\n  function arrayToMatrix(a) {\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] };\n  }\n\n  // Parse matrix if required\n  function parseMatrix(matrix) {\n    if (!(matrix instanceof SVG.Matrix)) matrix = new SVG.Matrix(matrix);\n\n    return matrix;\n  }\n\n  // Add centre point to transform object\n  function ensureCentre(o, target) {\n    o.cx = o.cx == null ? target.bbox().cx : o.cx;\n    o.cy = o.cy == null ? target.bbox().cy : o.cy;\n  }\n\n  // PathArray Helpers\n  function arrayToString(a) {\n    for (var i = 0, il = a.length, s = ''; i < il; i++) {\n      s += a[i][0];\n\n      if (a[i][1] != null) {\n        s += a[i][1];\n\n        if (a[i][2] != null) {\n          s += ' ';\n          s += a[i][2];\n\n          if (a[i][3] != null) {\n            s += ' ';\n            s += a[i][3];\n            s += ' ';\n            s += a[i][4];\n\n            if (a[i][5] != null) {\n              s += ' ';\n              s += a[i][5];\n              s += ' ';\n              s += a[i][6];\n\n              if (a[i][7] != null) {\n                s += ' ';\n                s += a[i][7];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s + ' ';\n  }\n\n  // Deep new id assignment\n  function assignNewId(node) {\n    // do the same for SVG child nodes as well\n    for (var i = node.childNodes.length - 1; i >= 0; i--) if (node.childNodes[i] instanceof window.SVGElement) assignNewId(node.childNodes[i]);\n\n    return SVG.adopt(node).id(SVG.eid(node.nodeName));\n  }\n\n  // Add more bounding box properties\n  function fullBox(b) {\n    if (b.x == null) {\n      b.x = 0;\n      b.y = 0;\n      b.width = 0;\n      b.height = 0;\n    }\n\n    b.w = b.width;\n    b.h = b.height;\n    b.x2 = b.x + b.width;\n    b.y2 = b.y + b.height;\n    b.cx = b.x + b.width / 2;\n    b.cy = b.y + b.height / 2;\n\n    return b;\n  }\n\n  // Get id from reference string\n  function idFromReference(url) {\n    var m = (url || '').toString().match(SVG.regex.reference);\n\n    if (m) return m[1];\n  }\n\n  // If values like 1e-88 are passed, this is not a valid 32 bit float,\n  // but in those cases, we are so close to 0 that 0 works well!\n  function float32String(v) {\n    return Math.abs(v) > 1e-37 ? v : 0;\n  }\n\n  // Create matrix array for looping\n  var abcdef = 'abcdef'.split('');\n\n  // Add CustomEvent to IE9 and IE10\n  if (typeof window.CustomEvent !== 'function') {\n    // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n    var CustomEventPoly = function (event, options) {\n      options = options || { bubbles: false, cancelable: false, detail: undefined };\n      var e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail);\n      return e;\n    };\n\n    CustomEventPoly.prototype = window.Event.prototype;\n\n    SVG.CustomEvent = CustomEventPoly;\n  } else {\n    SVG.CustomEvent = window.CustomEvent;\n  }\n\n  // requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\n  (function (w) {\n    var lastTime = 0;\n    var vendors = ['moz', 'webkit'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame'];\n      w.cancelAnimationFrame = w[vendors[x] + 'CancelAnimationFrame'] || w[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    w.requestAnimationFrame = w.requestAnimationFrame || function (callback) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\n      var id = w.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n\n    w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\n  })(window);\n\n  return SVG;\n});\n\n//# sourceURL=webpack:///./node_modules/svg.js/dist/svg.js?");

/***/ })

/******/ });